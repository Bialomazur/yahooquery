{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Python wrapper for an unofficial Yahoo Finance API Documentation : https://dpguthrie.github.io/yahooquery/ Interactive Demo : https://yahooquery-streamlit.herokuapp.com Source Code : https://github.com/dpguthrie/yahooquery Blog Post : https://towardsdatascience.com/the-unofficial-yahoo-finance-api-32dcf5d53df Overview \u00b6 Yahooquery is a python interface to unofficial Yahoo Finance API endpoints. The package allows a user to retrieve nearly all the data visible via the Yahoo Finance front-end. Some features of yahooquery: Fast : Data is retrieved through API endpoints instead of web scraping. Additionally, asynchronous requests can be utilized with simple configuration Simple : Data for multiple symbols can be retrieved with simple one-liners User-friendly : Pandas Dataframes are utilized where appropriate Premium : Yahoo Finance premium subscribers are able to retrieve data available through their subscription Requirements \u00b6 Python 2.7, 3.5+ Pandas - Fast, powerful, flexible and easy to use open source data analysis and manipulation tool Requests - The elegant and simple HTTP library for Python, built for human beings. Requests-Futures - Asynchronous Python HTTP Requests for Humans Selenium - Web browser automation Info Selenium is only utilized to login to Yahoo, which is done when the user passes certain keyword arguments . Logging into Yahoo enables users who are subscribers to Yahoo Finance Premium to retrieve data only accessible to premium subscribers. Installation \u00b6 pip install yahooquery Successfully installed yahooquery restart \u21bb Example \u00b6 The majority of the data available through the unofficial Yahoo Finance API is related to a company, which is represented in yahooquery as a Ticker . You can instantiate the Ticker class by passing the company's ticker symbol. For instance, to get data for , pass aapl as the first argument to the Ticker class: from yahooquery import Ticker aapl = Ticker ( 'aapl' ) aapl . summary_detail Multple Symbol Example \u00b6 The Ticker class also makes it easy to retrieve data for a list of symbols with the same API. Simply pass a list of symbols as the argument to the Ticker class. from yahooquery import Ticker symbols = [ 'fb' , 'aapl' , 'amzn' , 'nflx' , 'goog' ] faang = Ticker ( symbols ) faang . summary_detail License \u00b6 This project is licensed under the terms of the MIT license.","title":"Home"},{"location":"#overview","text":"Yahooquery is a python interface to unofficial Yahoo Finance API endpoints. The package allows a user to retrieve nearly all the data visible via the Yahoo Finance front-end. Some features of yahooquery: Fast : Data is retrieved through API endpoints instead of web scraping. Additionally, asynchronous requests can be utilized with simple configuration Simple : Data for multiple symbols can be retrieved with simple one-liners User-friendly : Pandas Dataframes are utilized where appropriate Premium : Yahoo Finance premium subscribers are able to retrieve data available through their subscription","title":"Overview"},{"location":"#requirements","text":"Python 2.7, 3.5+ Pandas - Fast, powerful, flexible and easy to use open source data analysis and manipulation tool Requests - The elegant and simple HTTP library for Python, built for human beings. Requests-Futures - Asynchronous Python HTTP Requests for Humans Selenium - Web browser automation Info Selenium is only utilized to login to Yahoo, which is done when the user passes certain keyword arguments . Logging into Yahoo enables users who are subscribers to Yahoo Finance Premium to retrieve data only accessible to premium subscribers.","title":"Requirements"},{"location":"#installation","text":"pip install yahooquery Successfully installed yahooquery restart \u21bb","title":"Installation"},{"location":"#example","text":"The majority of the data available through the unofficial Yahoo Finance API is related to a company, which is represented in yahooquery as a Ticker . You can instantiate the Ticker class by passing the company's ticker symbol. For instance, to get data for , pass aapl as the first argument to the Ticker class: from yahooquery import Ticker aapl = Ticker ( 'aapl' ) aapl . summary_detail","title":"Example"},{"location":"#multple-symbol-example","text":"The Ticker class also makes it easy to retrieve data for a list of symbols with the same API. Simply pass a list of symbols as the argument to the Ticker class. from yahooquery import Ticker symbols = [ 'fb' , 'aapl' , 'amzn' , 'nflx' , 'goog' ] faang = Ticker ( symbols ) faang . summary_detail","title":"Multple Symbol Example"},{"location":"#license","text":"This project is licensed under the terms of the MIT license.","title":"License"},{"location":"contact/","text":"","title":"Contact"},{"location":"help/","text":"","title":"Help"},{"location":"release_notes/","text":"Release Notes \u00b6 2.2.6 \u00b6 Allow premium subscribers to set environment variables for their Yahoo login credentials, specifically YF_USERNAME and YF_PASSWORD Fix bug when validating symbols. If too many symbols are passed, the URL that's constructed becomes too long and a 414 error occurs Fix bug related to login via Selenium Enable country argument in miscellaneous functions Add argument, adj_ohlc , to history method that allows user to adjust OHLC data based on adjusted close 2.2.5 \u00b6 Add more data accessors for the Ticker class: quotes , corporate_events , all_financial_data , get_financial_data , corporate_guidance , p_all_financial_data , and p_get_financial_data Financials methods now include optional argument to include / exclude the trailing tweleve month (TTM) data. The history method on the Ticker class now accepts an optional argument to adjust the timezone ( adj_timezone ) to the ticker's timezone. It defaults to True . Further documentation of acceptable keyword arguments to the Ticker class. Ticker.news is now a method. It accepts two arguments: count - number of items to return; start - start date to begin retrieving news items from Bug fixes: Ticker.history method no longer returns extra rows when retrieving intraday data. 2.2.4 \u00b6 Increase the number of items available through the income_statement , cash_flow , p_income_statement , and p_cash_flow methods on the Ticker class. Update how the session is initialized; specifically, include a timeout in the requests that are made, include a hook for bad status codes, and mount the adapter / retry to https requests 2.2.3 \u00b6 Add valuation_measures as a property to the Ticker class. Additionally, for Yahoo Finance premium subscribers, they can access the p_valuation_measures and supply either a , q , or m (annual, quarterly, monthly). The data returned with these can be seen in the Statistics tab through the Yahoo Finance front-end. 2.2.2 \u00b6 Fix bug in retrieving cash flow / income statement data. Most recent month was combining with TTM. A new column was created in the dataframe called 'periodType'. Annual data will be shown as '12M', quarterly data will be shown as '3M', and trailing 12 month data will be shown as 'TTM'. 2.2.1 \u00b6 Fix timestamp conversion in the _format_data method of the _YahooFinance class 2.2.0 \u00b6 New Research class that allows a user with a premium subscription to retrieve research reports and trade ideas from Yahoo Finance. List of trade ideas through Yahoo Finance can be seen at: https://finance.yahoo.com/research/trade-ideas. Research reports can be seen at https://finance.yahoo.com/research. 2.1.0 \u00b6 New Screener class that allows a user to retrieve predefined Yahoo Finance lists. Some of these lists include most active, day gainers, day losers, cryptocurrencies, and sectors / industries 2.0.0 \u00b6 Have Ticker class inherit from a base class, defined in base.py as _YahooFinance . The base class contains the order of operations to retrieve data (construct parameters, construct URLs, validate response, and format the data). Yahoo login functionality, which allows a user to retrieve Premium data if they are a subscriber All available financials data (income_statement, balance_sheet, cash_flow) Company 360 (innovation score, significant developments, supply chain, hiring statistics, and company outlook) Premium portal (research reports, trade ideas, technical events, value analyzer, and company snapshots) Technical events Value analyzer (High-level value analysis) Value analyzer Drilldown (Detailed information about a symbol(s) value) Research reports Trade ideas New (free) data! news page_views recommendations technical_insights validation Change several properties and methods (get_endpoints -> get_modules, all_endpoints -> all_modules) 1.1.3 \u00b6 Fix bug related to symbols that have characters that need to be url encoded (^) 1.1.2 \u00b6 Allow for user to use a string as a list of symbols to pass to Ticker class. For example, previous version would require user to pass ['fb', 'msft', 'goog'] to retrieve those three symbols. Now, the user can pass 'fb msft goog' or 'fb,msft,goog' . Allow user to pass string, as well as list, to get_endpoints method. For example, ['assetProfile', 'balanceSheetHistory'] is equivalent to 'assetProfile balanceSheetHistory' . 1.1.1 \u00b6 Fill NA values from history dataframe. Event data (dividends and splits) will be filled with zeros. Other columns (high, low, open, close, volume, adjclose) will be filled with prior day's data. Fill NA values from options dataframe. Missing values are replaced with zero 1.1.0 \u00b6 Entire library makes asynchronous requests (missing piece was the option_chain method). 1.0.15 \u00b6 Missing required library requests-futures in setup.py file 1.0.14 \u00b6 Add asynchronous requests with the requests-futures library Add \"events\" to the history dataframe (dividends and splits) 1.0.13 \u00b6 Add adjclose column to dataframe returned from yahooquery.Ticker.history 1.0.12 \u00b6 Changed private Ticker variables (_ENDPOINTS, _PERIODS, and _INTERVALS) to public Updated README for new multiple endpoint methods as well as a comparison to yfinance Forced dictionary return when formatted = False. 1.0.11 \u00b6 Bug fix related to accessing the multiple endpoint methods (get_endpoints, all_endpoints). Error would occur during formatting, specifically for the earningsTrend endpoint Bug fix related to passing one endpoint to the get_endpoints method. 1.0.10 \u00b6 - - Added docstrings to each property / method - Changed get_multiple_endpoints method to get_endpoints - Added all known endpoints into Ticker class. Missing endpoints were earnings, earnings_trend, and index_trend 1.0.9 \u00b6 Removed combine_dataframes kwarg. This is just the default behavior now. Removed ticker column in history method. symbol is now part of a MultiIndex in the returned DataFrame 1.0.8 \u00b6 Updated option_chain method for bugs as well as MultiIndex indexing to allow the user an easier way to make cross-sections of the resulting data. 1.0.7 \u00b6 Made the symbols argument to the Ticker class a required argument Fixed bug related to the fund_category_holdings property. Fixed bug related to the history method. Added tests and initial attempt at Travis CI 1.0.6 \u00b6 Added frequency arguments to balance_sheet , cash_flow , and income_statement methods. They will default to annual, but can return quarterly statements with \"q\" or \"Q\" arguments. Added a calendar_events property to the Ticker class. Shows next earnings date, previous dividend date, and other metrics. 1.0.5 \u00b6 Fixed bug related to formatting empty lists 1.0.4 \u00b6 Add fund_performance property to the Ticker class. Shows historical fund performance as well as category performance.","title":"Release Notes"},{"location":"release_notes/#release-notes","text":"","title":"Release Notes"},{"location":"release_notes/#226","text":"Allow premium subscribers to set environment variables for their Yahoo login credentials, specifically YF_USERNAME and YF_PASSWORD Fix bug when validating symbols. If too many symbols are passed, the URL that's constructed becomes too long and a 414 error occurs Fix bug related to login via Selenium Enable country argument in miscellaneous functions Add argument, adj_ohlc , to history method that allows user to adjust OHLC data based on adjusted close","title":"2.2.6"},{"location":"release_notes/#225","text":"Add more data accessors for the Ticker class: quotes , corporate_events , all_financial_data , get_financial_data , corporate_guidance , p_all_financial_data , and p_get_financial_data Financials methods now include optional argument to include / exclude the trailing tweleve month (TTM) data. The history method on the Ticker class now accepts an optional argument to adjust the timezone ( adj_timezone ) to the ticker's timezone. It defaults to True . Further documentation of acceptable keyword arguments to the Ticker class. Ticker.news is now a method. It accepts two arguments: count - number of items to return; start - start date to begin retrieving news items from Bug fixes: Ticker.history method no longer returns extra rows when retrieving intraday data.","title":"2.2.5"},{"location":"release_notes/#224","text":"Increase the number of items available through the income_statement , cash_flow , p_income_statement , and p_cash_flow methods on the Ticker class. Update how the session is initialized; specifically, include a timeout in the requests that are made, include a hook for bad status codes, and mount the adapter / retry to https requests","title":"2.2.4"},{"location":"release_notes/#223","text":"Add valuation_measures as a property to the Ticker class. Additionally, for Yahoo Finance premium subscribers, they can access the p_valuation_measures and supply either a , q , or m (annual, quarterly, monthly). The data returned with these can be seen in the Statistics tab through the Yahoo Finance front-end.","title":"2.2.3"},{"location":"release_notes/#222","text":"Fix bug in retrieving cash flow / income statement data. Most recent month was combining with TTM. A new column was created in the dataframe called 'periodType'. Annual data will be shown as '12M', quarterly data will be shown as '3M', and trailing 12 month data will be shown as 'TTM'.","title":"2.2.2"},{"location":"release_notes/#221","text":"Fix timestamp conversion in the _format_data method of the _YahooFinance class","title":"2.2.1"},{"location":"release_notes/#220","text":"New Research class that allows a user with a premium subscription to retrieve research reports and trade ideas from Yahoo Finance. List of trade ideas through Yahoo Finance can be seen at: https://finance.yahoo.com/research/trade-ideas. Research reports can be seen at https://finance.yahoo.com/research.","title":"2.2.0"},{"location":"release_notes/#210","text":"New Screener class that allows a user to retrieve predefined Yahoo Finance lists. Some of these lists include most active, day gainers, day losers, cryptocurrencies, and sectors / industries","title":"2.1.0"},{"location":"release_notes/#200","text":"Have Ticker class inherit from a base class, defined in base.py as _YahooFinance . The base class contains the order of operations to retrieve data (construct parameters, construct URLs, validate response, and format the data). Yahoo login functionality, which allows a user to retrieve Premium data if they are a subscriber All available financials data (income_statement, balance_sheet, cash_flow) Company 360 (innovation score, significant developments, supply chain, hiring statistics, and company outlook) Premium portal (research reports, trade ideas, technical events, value analyzer, and company snapshots) Technical events Value analyzer (High-level value analysis) Value analyzer Drilldown (Detailed information about a symbol(s) value) Research reports Trade ideas New (free) data! news page_views recommendations technical_insights validation Change several properties and methods (get_endpoints -> get_modules, all_endpoints -> all_modules)","title":"2.0.0"},{"location":"release_notes/#113","text":"Fix bug related to symbols that have characters that need to be url encoded (^)","title":"1.1.3"},{"location":"release_notes/#112","text":"Allow for user to use a string as a list of symbols to pass to Ticker class. For example, previous version would require user to pass ['fb', 'msft', 'goog'] to retrieve those three symbols. Now, the user can pass 'fb msft goog' or 'fb,msft,goog' . Allow user to pass string, as well as list, to get_endpoints method. For example, ['assetProfile', 'balanceSheetHistory'] is equivalent to 'assetProfile balanceSheetHistory' .","title":"1.1.2"},{"location":"release_notes/#111","text":"Fill NA values from history dataframe. Event data (dividends and splits) will be filled with zeros. Other columns (high, low, open, close, volume, adjclose) will be filled with prior day's data. Fill NA values from options dataframe. Missing values are replaced with zero","title":"1.1.1"},{"location":"release_notes/#110","text":"Entire library makes asynchronous requests (missing piece was the option_chain method).","title":"1.1.0"},{"location":"release_notes/#1015","text":"Missing required library requests-futures in setup.py file","title":"1.0.15"},{"location":"release_notes/#1014","text":"Add asynchronous requests with the requests-futures library Add \"events\" to the history dataframe (dividends and splits)","title":"1.0.14"},{"location":"release_notes/#1013","text":"Add adjclose column to dataframe returned from yahooquery.Ticker.history","title":"1.0.13"},{"location":"release_notes/#1012","text":"Changed private Ticker variables (_ENDPOINTS, _PERIODS, and _INTERVALS) to public Updated README for new multiple endpoint methods as well as a comparison to yfinance Forced dictionary return when formatted = False.","title":"1.0.12"},{"location":"release_notes/#1011","text":"Bug fix related to accessing the multiple endpoint methods (get_endpoints, all_endpoints). Error would occur during formatting, specifically for the earningsTrend endpoint Bug fix related to passing one endpoint to the get_endpoints method.","title":"1.0.11"},{"location":"release_notes/#1010","text":"- - Added docstrings to each property / method - Changed get_multiple_endpoints method to get_endpoints - Added all known endpoints into Ticker class. Missing endpoints were earnings, earnings_trend, and index_trend","title":"1.0.10"},{"location":"release_notes/#109","text":"Removed combine_dataframes kwarg. This is just the default behavior now. Removed ticker column in history method. symbol is now part of a MultiIndex in the returned DataFrame","title":"1.0.9"},{"location":"release_notes/#108","text":"Updated option_chain method for bugs as well as MultiIndex indexing to allow the user an easier way to make cross-sections of the resulting data.","title":"1.0.8"},{"location":"release_notes/#107","text":"Made the symbols argument to the Ticker class a required argument Fixed bug related to the fund_category_holdings property. Fixed bug related to the history method. Added tests and initial attempt at Travis CI","title":"1.0.7"},{"location":"release_notes/#106","text":"Added frequency arguments to balance_sheet , cash_flow , and income_statement methods. They will default to annual, but can return quarterly statements with \"q\" or \"Q\" arguments. Added a calendar_events property to the Ticker class. Shows next earnings date, previous dividend date, and other metrics.","title":"1.0.6"},{"location":"release_notes/#105","text":"Fixed bug related to formatting empty lists","title":"1.0.5"},{"location":"release_notes/#104","text":"Add fund_performance property to the Ticker class. Shows historical fund performance as well as category performance.","title":"1.0.4"},{"location":"guide/","text":"Introduction \u00b6 The majority of the data available through the unofficial API can be obtained through the use of three classes: Ticker - Retrieve company-specific data Screener - Retrieve lists of stocks based on certain criteria Research - Retrieve proprietary research reports and trade ideas ( REQUIRES YAHOO FINANCE PREMIUM SUBSCRIPTION ). Additionally, there are several functions that allow for more data retrieval: get_currencies - Retrieve list of currencies get_exchanges - Retrieve list of exchanges get_market_summary - Retrieve summary data relevant to a country get_trending - Retrieve trending securities relevant to a country","title":"Introduction"},{"location":"guide/#introduction","text":"The majority of the data available through the unofficial API can be obtained through the use of three classes: Ticker - Retrieve company-specific data Screener - Retrieve lists of stocks based on certain criteria Research - Retrieve proprietary research reports and trade ideas ( REQUIRES YAHOO FINANCE PREMIUM SUBSCRIPTION ). Additionally, there are several functions that allow for more data retrieval: get_currencies - Retrieve list of currencies get_exchanges - Retrieve list of exchanges get_market_summary - Retrieve summary data relevant to a country get_trending - Retrieve trending securities relevant to a country","title":"Introduction"},{"location":"guide/advanced/","text":"Info For Yahoo Finance Premium Subscribers There might be a use case for combining the functionalities of both the Ticker and Research class. And, ideally, the user wouldn't have to utilize the login functionality in both instances. Here's how you would do that: from yahooquery import Research , Ticker r = Research ( username = 'username@yahoo.com' , password = 'password' ) # I want to retrieve last week's Bullish Analyst Report's for the Financial Services sector df = r . reports ( sector = 'Financial Services' , report_date = 'Last Week' , investment_rating = 'Bullish' , report_type = 'Analyst Report' ) # But now I want to get the data I find relevant and run my own analysis # Using aapl as a default symbol (we will change that later). But, the important part is passing the current session and crumb from our Research instance tickers = Ticker ( 'aapl' , session = r . session , crumb = r . crumb ) # Now, I can loop through the dataframe and retrieve relevant data for each ticker within the dataframe utilizing the Ticker instance for i , row in df . iterrows (): tickers . symbols = row [ 'Tickers' ] data = tickers . p_company_360 # Do something with data # ... # Or, pass all tickers to the Ticker instance ticker_list = df [ 'Tickers' ] . tolist () ticker_list = list ( set ( _flatten_list ( ticker_list ))) tickers = Ticker ( ticker_list , session = r . session , crumb = r . crumb ) data = tickers . p_company_360 # Do something with data # ...","title":"Advanced"},{"location":"guide/misc/","text":"Miscellaneous Functions \u00b6 Additional data can be obtained from Yahoo Finance outside of the three classes. The following functions can be utilized to retrieve additional data unrelated to a ticker symbol: Import Functions \u00b6 from yahooquery import get_currencies , get_exchanges , get_market_summary , get_trending Functions \u00b6 get_currencies \u00b6 Details Description : List of currencies Yahoo Finance supports Returns : list Example from yahooquery import get_currencies data = get_currencies () Data [{ 'shortName' : 'FJD' , 'longName' : 'Fijian Dollar' , 'symbol' : 'FJD' , 'localLongName' : 'Fijian Dollar' }, { 'shortName' : 'MXN' , 'longName' : 'Mexican Peso' , 'symbol' : 'MXN' , 'localLongName' : 'Mexican Peso' }, { 'shortName' : 'STD' , 'longName' : 'S\u00e3o Tom\u00e9 and Pr\u00edncipe Dobra' , 'symbol' : 'STD' , 'localLongName' : 'S\u00e3o Tom\u00e9 and Pr\u00edncipe Dobra' }, { 'shortName' : 'LVL' , 'longName' : 'Latvian Lats' , 'symbol' : 'LVL' , 'localLongName' : 'Latvian Lats' }, { 'shortName' : 'SCR' , 'longName' : 'Seychellois Rupee' , 'symbol' : 'SCR' , 'localLongName' : 'Seychellois Rupee' }, { 'shortName' : 'CDF' , 'longName' : 'Congolese Franc' , 'symbol' : 'CDF' , 'localLongName' : 'Congolese Franc' }, { 'shortName' : 'BBD' , 'longName' : 'Barbadian Dollar' , 'symbol' : 'BBD' , 'localLongName' : 'Barbadian Dollar' }, { 'shortName' : 'GTQ' , 'longName' : 'Guatemalan Quetzal' , 'symbol' : 'GTQ' , 'localLongName' : 'Guatemalan Quetzal' }, { 'shortName' : 'CLP' , 'longName' : 'Chilean Peso' , 'symbol' : 'CLP' , 'localLongName' : 'Chilean Peso' }, { 'shortName' : 'UGX' , 'longName' : 'Ugandan Shilling' , 'symbol' : 'UGX' , 'localLongName' : 'Ugandan Shilling' }, { 'shortName' : 'HNL' , 'longName' : 'Honduran Lempira' , 'symbol' : 'HNL' , 'localLongName' : 'Honduran Lempira' }, { 'shortName' : 'ZAR' , 'longName' : 'South African Rand' , 'symbol' : 'ZAR' , 'localLongName' : 'South African Rand' }, { 'shortName' : 'MXV' , 'longName' : 'Mexican Investment Unit' , 'symbol' : 'MXV' , 'localLongName' : 'Mexican Investment Unit' }, { 'shortName' : 'TND' , 'longName' : 'Tunisian Dinar' , 'symbol' : 'TND' , 'localLongName' : 'Tunisian Dinar' }, { 'shortName' : 'STN' , 'longName' : 'S\u00e3o Tom\u00e9 and Pr\u00edncipe Dobra' , 'symbol' : 'STN' , 'localLongName' : 'S\u00e3o Tom\u00e9 and Pr\u00edncipe Dobra' }, { 'shortName' : 'CUC' , 'longName' : 'Cuban Convertible Peso' , 'symbol' : 'CUC' , 'localLongName' : 'Cuban Convertible Peso' }, { 'shortName' : 'BSD' , 'longName' : 'Bahamian Dollar' , 'symbol' : 'BSD' , 'localLongName' : 'Bahamian Dollar' }, { 'shortName' : 'SLL' , 'longName' : 'Sierra Leonean Leone' , 'symbol' : 'SLL' , 'localLongName' : 'Sierra Leonean Leone' }, { 'shortName' : 'SDG' , 'longName' : 'Sudanese Pound' , 'symbol' : 'SDG' , 'localLongName' : 'Sudanese Pound' }, { 'shortName' : 'IQD' , 'longName' : 'Iraqi Dinar' , 'symbol' : 'IQD' , 'localLongName' : 'Iraqi Dinar' }, { 'shortName' : 'CUP' , 'longName' : 'Cuban Peso' , 'symbol' : 'CUP' , 'localLongName' : 'Cuban Peso' }, { 'shortName' : 'GMD' , 'longName' : 'Gambian Dalasi' , 'symbol' : 'GMD' , 'localLongName' : 'Gambian Dalasi' }, { 'shortName' : 'TWD' , 'longName' : 'New Taiwan Dollar' , 'symbol' : 'TWD' , 'localLongName' : 'New Taiwan Dollar' }, { 'shortName' : 'RSD' , 'longName' : 'Serbian Dinar' , 'symbol' : 'RSD' , 'localLongName' : 'Serbian Dinar' }, { 'shortName' : 'DOP' , 'longName' : 'Dominican Peso' , 'symbol' : 'DOP' , 'localLongName' : 'Dominican Peso' }, { 'shortName' : 'KMF' , 'longName' : 'Comorian Franc' , 'symbol' : 'KMF' , 'localLongName' : 'Comorian Franc' }, { 'shortName' : 'MYR' , 'longName' : 'Malaysian Ringgit' , 'symbol' : 'MYR' , 'localLongName' : 'Malaysian Ringgit' }, { 'shortName' : 'FKP' , 'longName' : 'Falkland Islands Pound' , 'symbol' : 'FKP' , 'localLongName' : 'Falkland Islands Pound' }, { 'shortName' : 'XOF' , 'longName' : 'CFA Franc BCEAO' , 'symbol' : 'XOF' , 'localLongName' : 'CFA Franc BCEAO' }, { 'shortName' : 'GEL' , 'longName' : 'Georgian Lari' , 'symbol' : 'GEL' , 'localLongName' : 'Georgian Lari' }, { 'shortName' : 'UYU' , 'longName' : 'Uruguayan Peso' , 'symbol' : 'UYU' , 'localLongName' : 'Uruguayan Peso' }, { 'shortName' : 'MAD' , 'longName' : 'Moroccan Dirham' , 'symbol' : 'MAD' , 'localLongName' : 'Moroccan Dirham' }, { 'shortName' : 'CVE' , 'longName' : 'Cape Verdean Escudo' , 'symbol' : 'CVE' , 'localLongName' : 'Cape Verdean Escudo' }, { 'shortName' : 'TOP' , 'longName' : 'Tongan Pa\u02bbanga' , 'symbol' : 'TOP' , 'localLongName' : 'Tongan Pa\u02bbanga' }, { 'shortName' : 'PGK' , 'longName' : 'Papua New Guinean Kina' , 'symbol' : 'PGK' , 'localLongName' : 'Papua New Guinean Kina' }, { 'shortName' : 'AZN' , 'longName' : 'Azerbaijan Manat' , 'symbol' : 'AZN' , 'localLongName' : 'Azerbaijan Manat' }, { 'shortName' : 'OMR' , 'longName' : 'Omani Rial' , 'symbol' : 'OMR' , 'localLongName' : 'Omani Rial' }, { 'shortName' : 'SEK' , 'longName' : 'Swedish Krona' , 'symbol' : 'SEK' , 'localLongName' : 'Swedish Krona' }, { 'shortName' : 'KES' , 'longName' : 'Kenyan Shilling' , 'symbol' : 'KES' , 'localLongName' : 'Kenyan Shilling' }, { 'shortName' : 'BTN' , 'longName' : 'Bhutanese Ngultrum' , 'symbol' : 'BTN' , 'localLongName' : 'Bhutanese Ngultrum' }, { 'shortName' : 'UAH' , 'longName' : 'Ukrainian Hryvnia' , 'symbol' : 'UAH' , 'localLongName' : 'Ukrainian Hryvnia' }, { 'shortName' : 'GNF' , 'longName' : 'Guinean Franc' , 'symbol' : 'GNF' , 'localLongName' : 'Guinean Franc' }, { 'shortName' : 'ERN' , 'longName' : 'Eritrean Nakfa' , 'symbol' : 'ERN' , 'localLongName' : 'Eritrean Nakfa' }, { 'shortName' : 'MZN' , 'longName' : 'Mozambican Metical' , 'symbol' : 'MZN' , 'localLongName' : 'Mozambican Metical' }, { 'shortName' : 'SVC' , 'longName' : 'Salvadoran Col\u00f3n' , 'symbol' : 'SVC' , 'localLongName' : 'Salvadoran Col\u00f3n' }, { 'shortName' : 'ARS' , 'longName' : 'Argentine Peso' , 'symbol' : 'ARS' , 'localLongName' : 'Argentine Peso' }, { 'shortName' : 'QAR' , 'longName' : 'Qatari Rial' , 'symbol' : 'QAR' , 'localLongName' : 'Qatari Rial' }, { 'shortName' : 'IRR' , 'longName' : 'Iranian Rial' , 'symbol' : 'IRR' , 'localLongName' : 'Iranian Rial' }, { 'shortName' : 'MRO' , 'longName' : 'Mauritanian Ouguiya' , 'symbol' : 'MRO' , 'localLongName' : 'Mauritanian Ouguiya' }, { 'shortName' : 'XPD' , 'longName' : 'Palladium' , 'symbol' : 'XPD' , 'localLongName' : 'Palladium' }, { 'shortName' : 'THB' , 'longName' : 'Thai Baht' , 'symbol' : 'THB' , 'localLongName' : 'Thai Baht' }, { 'shortName' : 'UZS' , 'longName' : 'Uzbekistan Som' , 'symbol' : 'UZS' , 'localLongName' : 'Uzbekistan Som' }, { 'shortName' : 'XPF' , 'longName' : 'CFP Franc' , 'symbol' : 'XPF' , 'localLongName' : 'CFP Franc' }, { 'shortName' : 'CNY' , 'longName' : 'Chinese Yuan' , 'symbol' : 'CNY' , 'localLongName' : 'Chinese Yuan' }, { 'shortName' : 'MRU' , 'longName' : 'Mauritanian Ouguiya' , 'symbol' : 'MRU' , 'localLongName' : 'Mauritanian Ouguiya' }, { 'shortName' : 'BDT' , 'longName' : 'Bangladeshi Taka' , 'symbol' : 'BDT' , 'localLongName' : 'Bangladeshi Taka' }, { 'shortName' : 'LYD' , 'longName' : 'Libyan Dinar' , 'symbol' : 'LYD' , 'localLongName' : 'Libyan Dinar' }, { 'shortName' : 'BMD' , 'longName' : 'Bermudan Dollar' , 'symbol' : 'BMD' , 'localLongName' : 'Bermudan Dollar' }, { 'shortName' : 'PHP' , 'longName' : 'Philippine Peso' , 'symbol' : 'PHP' , 'localLongName' : 'Philippine Peso' }, { 'shortName' : 'KWD' , 'longName' : 'Kuwaiti Dinar' , 'symbol' : 'KWD' , 'localLongName' : 'Kuwaiti Dinar' }, { 'shortName' : 'XPT' , 'longName' : 'Platinum' , 'symbol' : 'XPT' , 'localLongName' : 'Platinum' }, { 'shortName' : 'RUB' , 'longName' : 'Russian Ruble' , 'symbol' : 'RUB' , 'localLongName' : 'Russian Ruble' }, { 'shortName' : 'PYG' , 'longName' : 'Paraguayan Guarani' , 'symbol' : 'PYG' , 'localLongName' : 'Paraguayan Guarani' }, { 'shortName' : 'JMD' , 'longName' : 'Jamaican Dollar' , 'symbol' : 'JMD' , 'localLongName' : 'Jamaican Dollar' }, { 'shortName' : 'ISK' , 'longName' : 'Icelandic Kr\u00f3na' , 'symbol' : 'ISK' , 'localLongName' : 'Icelandic Kr\u00f3na' }, { 'shortName' : 'COP' , 'longName' : 'Colombian Peso' , 'symbol' : 'COP' , 'localLongName' : 'Colombian Peso' }, { 'shortName' : 'USD' , 'longName' : 'US Dollar' , 'symbol' : 'USD' , 'localLongName' : 'US Dollar' }, { 'shortName' : 'MKD' , 'longName' : 'Macedonian Denar' , 'symbol' : 'MKD' , 'localLongName' : 'Macedonian Denar' }, { 'shortName' : 'DZD' , 'longName' : 'Algerian Dinar' , 'symbol' : 'DZD' , 'localLongName' : 'Algerian Dinar' }, { 'shortName' : 'PAB' , 'longName' : 'Panamanian Balboa' , 'symbol' : 'PAB' , 'localLongName' : 'Panamanian Balboa' }, { 'shortName' : 'SGD' , 'longName' : 'Singapore Dollar' , 'symbol' : 'SGD' , 'localLongName' : 'Singapore Dollar' }, { 'shortName' : 'ETB' , 'longName' : 'Ethiopian Birr' , 'symbol' : 'ETB' , 'localLongName' : 'Ethiopian Birr' }, { 'shortName' : 'VEF' , 'longName' : 'Venezuelan Bol\u00edvar' , 'symbol' : 'VEF' , 'localLongName' : 'Venezuelan Bol\u00edvar' }, { 'shortName' : 'KGS' , 'longName' : 'Kyrgystani Som' , 'symbol' : 'KGS' , 'localLongName' : 'Kyrgystani Som' }, { 'shortName' : 'SOS' , 'longName' : 'Somali Shilling' , 'symbol' : 'SOS' , 'localLongName' : 'Somali Shilling' }, { 'shortName' : 'VUV' , 'longName' : 'Vanuatu Vatu' , 'symbol' : 'VUV' , 'localLongName' : 'Vanuatu Vatu' }, { 'shortName' : 'LAK' , 'longName' : 'Lao Kip' , 'symbol' : 'LAK' , 'localLongName' : 'Lao Kip' }, { 'shortName' : 'BND' , 'longName' : 'Brunei Dollar' , 'symbol' : 'BND' , 'localLongName' : 'Brunei Dollar' }, { 'shortName' : 'ZMK' , 'longName' : 'Zambian Kwacha' , 'symbol' : 'ZMK' , 'localLongName' : 'Zambian Kwacha' }, { 'shortName' : 'XAF' , 'longName' : 'CFA Franc BEAC' , 'symbol' : 'XAF' , 'localLongName' : 'CFA Franc BEAC' }, { 'shortName' : 'LRD' , 'longName' : 'Liberian Dollar' , 'symbol' : 'LRD' , 'localLongName' : 'Liberian Dollar' }, { 'shortName' : 'XAG' , 'longName' : 'Silver' , 'symbol' : 'XAG' , 'localLongName' : 'Silver' }, { 'shortName' : 'CHF' , 'longName' : 'Swiss Franc' , 'symbol' : 'CHF' , 'localLongName' : 'Swiss Franc' }, { 'shortName' : 'ITL' , 'longName' : 'Italian Lira' , 'symbol' : 'ITL' , 'localLongName' : 'Italian Lira' }, { 'shortName' : 'HRK' , 'longName' : 'Kuna' , 'symbol' : 'HRK' , 'localLongName' : 'Kuna' }, { 'shortName' : 'ALL' , 'longName' : 'Albanian Lek' , 'symbol' : 'ALL' , 'localLongName' : 'Albanian Lek' }, { 'shortName' : 'DJF' , 'longName' : 'Djiboutian Franc' , 'symbol' : 'DJF' , 'localLongName' : 'Djiboutian Franc' }, { 'shortName' : 'ZMW' , 'longName' : 'ZMW' , 'symbol' : 'ZMW' , 'localLongName' : 'ZMW' }, { 'shortName' : 'VES' , 'longName' : 'Venezuelan Bol\u00edvar Soberano' , 'symbol' : 'VES' , 'localLongName' : 'Venezuelan Bol\u00edvar Soberano' }, { 'shortName' : 'TZS' , 'longName' : 'Tanzanian Shilling' , 'symbol' : 'TZS' , 'localLongName' : 'Tanzanian Shilling' }, { 'shortName' : 'XAU' , 'longName' : 'Gold' , 'symbol' : 'XAU' , 'localLongName' : 'Gold' }, { 'shortName' : 'VND' , 'longName' : 'Vietnamese Dong' , 'symbol' : 'VND' , 'localLongName' : 'Vietnamese Dong' }, { 'shortName' : 'AUD' , 'longName' : 'Australian Dollar' , 'symbol' : 'AUD' , 'localLongName' : 'Australian Dollar' }, { 'shortName' : 'ILS' , 'longName' : 'Israeli New Sheqel' , 'symbol' : 'ILS' , 'localLongName' : 'Israeli New Sheqel' }, { 'shortName' : 'KPW' , 'longName' : 'North Korean Won' , 'symbol' : 'KPW' , 'localLongName' : 'North Korean Won' }, { 'shortName' : 'GYD' , 'longName' : 'Guyanaese Dollar' , 'symbol' : 'GYD' , 'localLongName' : 'Guyanaese Dollar' }, { 'shortName' : 'GHS' , 'longName' : 'Ghanaian Cedi' , 'symbol' : 'GHS' , 'localLongName' : 'Ghanaian Cedi' }, { 'shortName' : 'KHR' , 'longName' : 'Cambodian Riel' , 'symbol' : 'KHR' , 'localLongName' : 'Cambodian Riel' }, { 'shortName' : 'MDL' , 'longName' : 'Moldovan Leu' , 'symbol' : 'MDL' , 'localLongName' : 'Moldovan Leu' }, { 'shortName' : 'BOB' , 'longName' : 'Bolivian Boliviano' , 'symbol' : 'BOB' , 'localLongName' : 'Bolivian Boliviano' }, { 'shortName' : 'IDR' , 'longName' : 'Indonesian Rupiah' , 'symbol' : 'IDR' , 'localLongName' : 'Indonesian Rupiah' }, { 'shortName' : 'KYD' , 'longName' : 'Cayman Islands Dollar' , 'symbol' : 'KYD' , 'localLongName' : 'Cayman Islands Dollar' }, { 'shortName' : 'AMD' , 'longName' : 'Armenian Dram' , 'symbol' : 'AMD' , 'localLongName' : 'Armenian Dram' }, { 'shortName' : 'SHP' , 'longName' : 'Saint Helena Pound' , 'symbol' : 'SHP' , 'localLongName' : 'Saint Helena Pound' }, { 'shortName' : 'BWP' , 'longName' : 'Botswanan Pula' , 'symbol' : 'BWP' , 'localLongName' : 'Botswanan Pula' }, { 'shortName' : 'TRY' , 'longName' : 'Turkish Lira' , 'symbol' : 'TRY' , 'localLongName' : 'Turkish Lira' }, { 'shortName' : 'LBP' , 'longName' : 'Lebanese Pound' , 'symbol' : 'LBP' , 'localLongName' : 'Lebanese Pound' }, { 'shortName' : 'CYP' , 'longName' : 'Cypriot Pound' , 'symbol' : 'CYP' , 'localLongName' : 'Cypriot Pound' }, { 'shortName' : 'TJS' , 'longName' : 'Tajikistani Somoni' , 'symbol' : 'TJS' , 'localLongName' : 'Tajikistani Somoni' }, { 'shortName' : 'JOD' , 'longName' : 'Jordanian Dinar' , 'symbol' : 'JOD' , 'localLongName' : 'Jordanian Dinar' }, { 'shortName' : 'AED' , 'longName' : 'United Arab Emirates Dirham' , 'symbol' : 'AED' , 'localLongName' : 'United Arab Emirates Dirham' }, { 'shortName' : 'HKD' , 'longName' : 'Hong Kong Dollar' , 'symbol' : 'HKD' , 'localLongName' : 'Hong Kong Dollar' }, { 'shortName' : 'RWF' , 'longName' : 'Rwandan Franc' , 'symbol' : 'RWF' , 'localLongName' : 'Rwandan Franc' }, { 'shortName' : 'EUR' , 'longName' : 'Euro' , 'symbol' : 'EUR' , 'localLongName' : 'Euro' }, { 'shortName' : 'LSL' , 'longName' : 'Lesotho Loti' , 'symbol' : 'LSL' , 'localLongName' : 'Lesotho Loti' }, { 'shortName' : 'DKK' , 'longName' : 'Danish Krone' , 'symbol' : 'DKK' , 'localLongName' : 'Danish Krone' }, { 'shortName' : 'CAD' , 'longName' : 'Canadian Dollar' , 'symbol' : 'CAD' , 'localLongName' : 'Canadian Dollar' }, { 'shortName' : 'BGN' , 'longName' : 'Bulgarian Lev' , 'symbol' : 'BGN' , 'localLongName' : 'Bulgarian Lev' }, { 'shortName' : 'MMK' , 'longName' : 'Myanma Kyat' , 'symbol' : 'MMK' , 'localLongName' : 'Myanma Kyat' }, { 'shortName' : 'NOK' , 'longName' : 'Norwegian Krone' , 'symbol' : 'NOK' , 'localLongName' : 'Norwegian Krone' }, { 'shortName' : 'SYP' , 'longName' : 'Syrian Pound' , 'symbol' : 'SYP' , 'localLongName' : 'Syrian Pound' }, { 'shortName' : 'MUR' , 'longName' : 'Mauritian Rupee' , 'symbol' : 'MUR' , 'localLongName' : 'Mauritian Rupee' }, { 'shortName' : 'ZWL' , 'longName' : 'Zimbabwean Dollar (2009)' , 'symbol' : 'ZWL' , 'localLongName' : 'Zimbabwean Dollar (2009)' }, { 'shortName' : 'GIP' , 'longName' : 'Gibraltar Pound' , 'symbol' : 'GIP' , 'localLongName' : 'Gibraltar Pound' }, { 'shortName' : 'RON' , 'longName' : 'Romanian Leu' , 'symbol' : 'RON' , 'localLongName' : 'Romanian Leu' }, { 'shortName' : 'LKR' , 'longName' : 'Sri Lankan Rupee' , 'symbol' : 'LKR' , 'localLongName' : 'Sri Lankan Rupee' }, { 'shortName' : 'NGN' , 'longName' : 'Nigerian Naira' , 'symbol' : 'NGN' , 'localLongName' : 'Nigerian Naira' }, { 'shortName' : 'IEP' , 'longName' : 'Irish Pound' , 'symbol' : 'IEP' , 'localLongName' : 'Irish Pound' }, { 'shortName' : 'CZK' , 'longName' : 'Czech Republic Koruna' , 'symbol' : 'CZK' , 'localLongName' : 'Czech Republic Koruna' }, { 'shortName' : 'CRC' , 'longName' : 'Costa Rican Col\u00f3n' , 'symbol' : 'CRC' , 'localLongName' : 'Costa Rican Col\u00f3n' }, { 'shortName' : 'PKR' , 'longName' : 'Pakistani Rupee' , 'symbol' : 'PKR' , 'localLongName' : 'Pakistani Rupee' }, { 'shortName' : 'XCD' , 'longName' : 'East Caribbean Dollar' , 'symbol' : 'XCD' , 'localLongName' : 'East Caribbean Dollar' }, { 'shortName' : 'ANG' , 'longName' : 'Netherlands Antillean Guilder' , 'symbol' : 'ANG' , 'localLongName' : 'Netherlands Antillean Guilder' }, { 'shortName' : 'HTG' , 'longName' : 'Haitian Gourde' , 'symbol' : 'HTG' , 'localLongName' : 'Haitian Gourde' }, { 'shortName' : 'BHD' , 'longName' : 'Bahraini Dinar' , 'symbol' : 'BHD' , 'localLongName' : 'Bahraini Dinar' }, { 'shortName' : 'SIT' , 'longName' : 'Slovenian Tolar' , 'symbol' : 'SIT' , 'localLongName' : 'Slovenian Tolar' }, { 'shortName' : 'SZL' , 'longName' : 'Swazi Lilangeni' , 'symbol' : 'SZL' , 'localLongName' : 'Swazi Lilangeni' }, { 'shortName' : 'SRD' , 'longName' : 'Surinamese Dollar' , 'symbol' : 'SRD' , 'localLongName' : 'Surinamese Dollar' }, { 'shortName' : 'KZT' , 'longName' : 'Kazakhstani Tenge' , 'symbol' : 'KZT' , 'localLongName' : 'Kazakhstani Tenge' }, { 'shortName' : 'SAR' , 'longName' : 'Saudi Riyal' , 'symbol' : 'SAR' , 'localLongName' : 'Saudi Riyal' }, { 'shortName' : 'LTL' , 'longName' : 'Lithuanian Litas' , 'symbol' : 'LTL' , 'localLongName' : 'Lithuanian Litas' }, { 'shortName' : 'TTD' , 'longName' : 'Trinidad and Tobago Dollar' , 'symbol' : 'TTD' , 'localLongName' : 'Trinidad and Tobago Dollar' }, { 'shortName' : 'YER' , 'longName' : 'Yemeni Rial' , 'symbol' : 'YER' , 'localLongName' : 'Yemeni Rial' }, { 'shortName' : 'MVR' , 'longName' : 'Maldivian Rufiyaa' , 'symbol' : 'MVR' , 'localLongName' : 'Maldivian Rufiyaa' }, { 'shortName' : 'AFN' , 'longName' : 'Afghan Afghani' , 'symbol' : 'AFN' , 'localLongName' : 'Afghan Afghani' }, { 'shortName' : 'INR' , 'longName' : 'Indian Rupee' , 'symbol' : 'INR' , 'localLongName' : 'Indian Rupee' }, { 'shortName' : 'NPR' , 'longName' : 'Nepalese Rupee' , 'symbol' : 'NPR' , 'localLongName' : 'Nepalese Rupee' }, { 'shortName' : 'KRW' , 'longName' : 'South Korean Won' , 'symbol' : 'KRW' , 'localLongName' : 'South Korean Won' }, { 'shortName' : 'AWG' , 'longName' : 'Aruban Florin' , 'symbol' : 'AWG' , 'localLongName' : 'Aruban Florin' }, { 'shortName' : 'MNT' , 'longName' : 'Mongolian Tugrik' , 'symbol' : 'MNT' , 'localLongName' : 'Mongolian Tugrik' }, { 'shortName' : 'JPY' , 'longName' : 'Japanese Yen' , 'symbol' : 'JPY' , 'localLongName' : 'Japanese Yen' }, { 'shortName' : 'AOA' , 'longName' : 'Angolan Kwanza' , 'symbol' : 'AOA' , 'localLongName' : 'Angolan Kwanza' }, { 'shortName' : 'PLN' , 'longName' : 'Polish Zloty' , 'symbol' : 'PLN' , 'localLongName' : 'Polish Zloty' }, { 'shortName' : 'SBD' , 'longName' : 'Solomon Islands Dollar' , 'symbol' : 'SBD' , 'localLongName' : 'Solomon Islands Dollar' }, { 'shortName' : 'GBP' , 'longName' : 'British Pound Sterling' , 'symbol' : 'GBP' , 'localLongName' : 'British Pound Sterling' }, { 'shortName' : 'BYN' , 'longName' : 'Belarusian Ruble' , 'symbol' : 'BYN' , 'localLongName' : 'Belarusian Ruble' }, { 'shortName' : 'HUF' , 'longName' : 'Hungarian Forint' , 'symbol' : 'HUF' , 'localLongName' : 'Hungarian Forint' }, { 'shortName' : 'BYR' , 'longName' : 'Belarusian Ruble (2000-2016)' , 'symbol' : 'BYR' , 'localLongName' : 'Belarusian Ruble (2000-2016)' }, { 'shortName' : 'BIF' , 'longName' : 'Burundian Franc' , 'symbol' : 'BIF' , 'localLongName' : 'Burundian Franc' }, { 'shortName' : 'MWK' , 'longName' : 'Malawian Malawi Kwacha' , 'symbol' : 'MWK' , 'localLongName' : 'Malawian Malawi Kwacha' }, { 'shortName' : 'MGA' , 'longName' : 'Malagasy Ariary' , 'symbol' : 'MGA' , 'localLongName' : 'Malagasy Ariary' }, { 'shortName' : 'XDR' , 'longName' : 'Special Drawing Rights' , 'symbol' : 'XDR' , 'localLongName' : 'Special Drawing Rights' }, { 'shortName' : 'BZD' , 'longName' : 'Belize Dollar' , 'symbol' : 'BZD' , 'localLongName' : 'Belize Dollar' }, { 'shortName' : 'DEM' , 'longName' : 'German Mark' , 'symbol' : 'DEM' , 'localLongName' : 'German Mark' }, { 'shortName' : 'BAM' , 'longName' : 'Bosnia-Herzegovina Convertible Mark' , 'symbol' : 'BAM' , 'localLongName' : 'Bosnia-Herzegovina Convertible Mark' }, { 'shortName' : 'MOP' , 'longName' : 'Macanese Pataca' , 'symbol' : 'MOP' , 'localLongName' : 'Macanese Pataca' }, { 'shortName' : 'EGP' , 'longName' : 'Egyptian Pound' , 'symbol' : 'EGP' , 'localLongName' : 'Egyptian Pound' }, { 'shortName' : 'NAD' , 'longName' : 'Namibian Dollar' , 'symbol' : 'NAD' , 'localLongName' : 'Namibian Dollar' }, { 'shortName' : 'NIO' , 'longName' : 'Nicaraguan C\u00f3rdoba' , 'symbol' : 'NIO' , 'localLongName' : 'Nicaraguan C\u00f3rdoba' }, { 'shortName' : 'PEN' , 'longName' : 'Peruvian Sol' , 'symbol' : 'PEN' , 'localLongName' : 'Peruvian Sol' }, { 'shortName' : 'NZD' , 'longName' : 'New Zealand Dollar' , 'symbol' : 'NZD' , 'localLongName' : 'New Zealand Dollar' }, { 'shortName' : 'WST' , 'longName' : 'Samoan Tala' , 'symbol' : 'WST' , 'localLongName' : 'Samoan Tala' }, { 'shortName' : 'TMT' , 'longName' : 'Turkmenistani Manat' , 'symbol' : 'TMT' , 'localLongName' : 'Turkmenistani Manat' }, { 'shortName' : 'FRF' , 'longName' : 'French Franc' , 'symbol' : 'FRF' , 'localLongName' : 'French Franc' }, { 'shortName' : 'CLF' , 'longName' : 'Chilean Unit of Account (UF)' , 'symbol' : 'CLF' , 'localLongName' : 'Chilean Unit of Account (UF)' }, { 'shortName' : 'BRL' , 'longName' : 'Brazilian Real' , 'symbol' : 'BRL' , 'localLongName' : 'Brazilian Real' }] get_exchanges \u00b6 Details Description : List of exchanges and suffixes to use to to retrieve data on various exchanges Returns : pandas.DataFrame Example from yahooquery import get_currencies df = get_exchanges () df . head () Data Country Market, or Index Suffix Delay Data Provider 0 United States of America Chicago Board of Trade (CBOT) .CBT 10 min ICE Data Services 1 United States of America Chicago Mercantile Exchange (CME) .CME 10 min ICE Data Services 2 United States of America Dow Jones Indexes nan Real-time ICE Data Services 3 United States of America Nasdaq Stock Exchange nan Real-time ICE Data Services 4 United States of America ICE Futures US .NYB 30 min ICE Data Services get_market_summary \u00b6 Details Description : List of relevant exchanges for specific country Returns : list Arguments Argument Description Type Default Required Options country Name of country str United States optional See below View Countries { 'france' : { 'lang' : 'fr-FR' , 'region' : 'FR' , 'corsDomain' : 'fr.finance.yahoo.com' }, 'india' : { 'lang' : 'en-IN' , 'region' : 'IN' , 'corsDomain' : 'in.finance.yahoo.com' }, 'hong kong' : { 'lang' : 'zh-Hant-HK' , 'region' : 'HK' , 'corsDomain' : 'hk.finance.yahoo.com' }, 'germany' : { 'lang' : 'de-DE' , 'region' : 'DE' , 'corsDomain' : 'de.finance.yahoo.com' }, 'canada' : { 'lang' : 'en-CA' , 'region' : 'CA' , 'corsDomain' : 'ca.finance.yahoo.com' }, 'spain' : { 'lang' : 'es-ES' , 'region' : 'ES' , 'corsDomain' : 'es.finance.yahoo.com' }, 'italy' : { 'lang' : 'it-IT' , 'region' : 'IT' , 'corsDomain' : 'it.finance.yahoo.com' }, 'united states' : { 'lang' : 'en-US' , 'region' : 'US' , 'corsDomain' : 'finance.yahoo.com' }, 'australia' : { 'lang' : 'en-AU' , 'region' : 'AU' , 'corsDomain' : 'au.finance.yahoo.com' }, 'united kingdom' : { 'lang' : 'en-GB' , 'region' : 'GB' , 'corsDomain' : 'uk.finance.yahoo.com' }, 'brazil' : { 'lang' : 'pt-BR' , 'region' : 'BR' , 'corsDomain' : 'br.financas.yahoo.com' }, 'new zealand' : { 'lang' : 'en-NZ' , 'region' : 'NZ' , 'corsDomain' : 'nz.finance.yahoo.com' }, 'singapore' : { 'lang' : 'en-SG' , 'region' : 'SG' , 'corsDomain' : 'sg.finance.yahoo.com' } } Example from yahooquery import get_market_summary get_market_summary ( country = 'hong kong' ) Data [{ 'exchangeTimezoneName' : 'America/New_York' , 'fullExchangeName' : 'SNP' , 'symbol' : '^GSPC' , 'regularMarketChange' : { 'raw' : 24.900146 , 'fmt' : '24.90' }, 'gmtOffSetMilliseconds' : - 14400000 , 'exchangeDataDelayedBy' : 0 , 'firstTradeDateMilliseconds' : - 1325583000000 , 'language' : 'en-US' , 'regularMarketTime' : { 'raw' : 1596229659 , 'fmt' : '5:07PM EDT' }, 'exchangeTimezoneShortName' : 'EDT' , 'regularMarketChangePercent' : { 'raw' : 0.7670505 , 'fmt' : '0.77%' }, 'quoteType' : 'INDEX' , 'marketState' : 'POSTPOST' , 'regularMarketPrice' : { 'raw' : 3271.12 , 'fmt' : '3,271.12' }, 'market' : 'us_market' , 'quoteSourceName' : 'Delayed Quote' , 'priceHint' : 2 , 'tradeable' : False , 'exchange' : 'SNP' , 'sourceInterval' : 15 , 'region' : 'US' , 'shortName' : 'S&P 500' , 'triggerable' : False , 'regularMarketPreviousClose' : { 'raw' : 3246.22 , 'fmt' : '3,246.22' } }, { 'exchangeTimezoneName' : 'America/New_York' , 'fullExchangeName' : 'DJI' , 'symbol' : '^DJI' , 'regularMarketChange' : { 'raw' : 114.66992 , 'fmt' : '114.67' }, 'gmtOffSetMilliseconds' : - 14400000 , 'exchangeDataDelayedBy' : 0 , 'firstTradeDateMilliseconds' : 475857000000 , 'language' : 'en-US' , 'regularMarketTime' : { 'raw' : 1596229659 , 'fmt' : '5:07PM EDT' }, 'exchangeTimezoneShortName' : 'EDT' , 'regularMarketChangePercent' : { 'raw' : 0.43578112 , 'fmt' : '0.44%' }, 'quoteType' : 'INDEX' , 'marketState' : 'POSTPOST' , 'regularMarketPrice' : { 'raw' : 26428.32 , 'fmt' : '26,428.32' }, 'market' : 'us_market' , 'quoteSourceName' : 'Delayed Quote' , 'priceHint' : 2 , 'tradeable' : False , 'exchange' : 'DJI' , 'sourceInterval' : 120 , 'region' : 'US' , 'shortName' : 'Dow 30' , 'triggerable' : False , 'regularMarketPreviousClose' : { 'raw' : 26313.65 , 'fmt' : '26,313.65' } }, { 'exchangeTimezoneName' : 'America/New_York' , 'fullExchangeName' : 'Nasdaq GIDS' , 'symbol' : '^IXIC' , 'regularMarketChange' : { 'raw' : 157.46094 , 'fmt' : '157.46' }, 'gmtOffSetMilliseconds' : - 14400000 , 'exchangeDataDelayedBy' : 0 , 'firstTradeDateMilliseconds' : 34612200000 , 'language' : 'en-US' , 'regularMarketTime' : { 'raw' : 1596230159 , 'fmt' : '5:15PM EDT' }, 'exchangeTimezoneShortName' : 'EDT' , 'regularMarketChangePercent' : { 'raw' : 1.4871904 , 'fmt' : '1.49%' }, 'quoteType' : 'INDEX' , 'marketState' : 'POSTPOST' , 'regularMarketPrice' : { 'raw' : 10745.274 , 'fmt' : '10,745.27' }, 'market' : 'us_market' , 'quoteSourceName' : 'Delayed Quote' , 'priceHint' : 2 , 'tradeable' : False , 'exchange' : 'NIM' , 'sourceInterval' : 15 , 'region' : 'US' , 'shortName' : 'Nasdaq' , 'triggerable' : False , 'regularMarketPreviousClose' : { 'raw' : 10587.8 , 'fmt' : '10,587.80' } }, { 'exchangeTimezoneName' : 'America/New_York' , 'fullExchangeName' : 'Chicago Options' , 'symbol' : '^RUT' , 'regularMarketChange' : { 'raw' : - 14.674194 , 'fmt' : '-14.67' }, 'gmtOffSetMilliseconds' : - 14400000 , 'exchangeDataDelayedBy' : 20 , 'firstTradeDateMilliseconds' : 558279000000 , 'language' : 'en-US' , 'regularMarketTime' : { 'raw' : 1596227407 , 'fmt' : '4:30PM EDT' }, 'exchangeTimezoneShortName' : 'EDT' , 'regularMarketChangePercent' : { 'raw' : - 0.981485 , 'fmt' : '-0.98%' }, 'quoteType' : 'INDEX' , 'marketState' : 'POSTPOST' , 'regularMarketPrice' : { 'raw' : 1480.427 , 'fmt' : '1,480.43' }, 'market' : 'us_market' , 'priceHint' : 2 , 'tradeable' : False , 'exchange' : 'WCB' , 'sourceInterval' : 15 , 'region' : 'US' , 'shortName' : 'Russell 2000' , 'triggerable' : False , 'regularMarketPreviousClose' : { 'raw' : 1495.1012 , 'fmt' : '1,495.10' } }, { 'fullExchangeName' : 'NY Mercantile' , 'symbol' : 'CL=F' , 'gmtOffSetMilliseconds' : - 14400000 , 'headSymbolAsString' : 'CL=F' , 'language' : 'en-US' , 'regularMarketTime' : { 'raw' : 1596229198 , 'fmt' : '4:59PM EDT' }, 'regularMarketChangePercent' : { 'raw' : 1.2775606 , 'fmt' : '1.28%' }, 'quoteType' : 'FUTURE' , 'headSymbol' : True , 'contractSymbol' : False , 'tradeable' : False , 'regularMarketPreviousClose' : { 'raw' : 39.92 , 'fmt' : '39.92' }, 'exchangeTimezoneName' : 'America/New_York' , 'regularMarketChange' : { 'raw' : 0.51000214 , 'fmt' : '0.51' }, 'firstTradeDateMilliseconds' : 953701200000 , 'exchangeDataDelayedBy' : 30 , 'exchangeTimezoneShortName' : 'EDT' , 'marketState' : 'REGULAR' , 'regularMarketPrice' : { 'raw' : 40.43 , 'fmt' : '40.43' }, 'market' : 'us24_market' , 'sourceInterval' : 30 , 'exchange' : 'NYM' , 'shortName' : 'Crude Oil' , 'region' : 'US' , 'triggerable' : False }, { 'fullExchangeName' : 'COMEX' , 'symbol' : 'GC=F' , 'gmtOffSetMilliseconds' : - 14400000 , 'headSymbolAsString' : 'GC=F' , 'language' : 'en-US' , 'regularMarketTime' : { 'raw' : 1596229198 , 'fmt' : '4:59PM EDT' }, 'regularMarketChangePercent' : { 'raw' : 1.5960459 , 'fmt' : '1.60%' }, 'quoteType' : 'FUTURE' , 'headSymbol' : True , 'contractSymbol' : False , 'tradeable' : False , 'regularMarketPreviousClose' : { 'raw' : 1942.3 , 'fmt' : '1,942.30' }, 'exchangeTimezoneName' : 'America/New_York' , 'regularMarketChange' : { 'raw' : 31.0 , 'fmt' : '31.00' }, 'firstTradeDateMilliseconds' : 951714000000 , 'exchangeDataDelayedBy' : 30 , 'exchangeTimezoneShortName' : 'EDT' , 'marketState' : 'REGULAR' , 'regularMarketPrice' : { 'raw' : 1973.3 , 'fmt' : '1,973.30' }, 'market' : 'us24_market' , 'sourceInterval' : 15 , 'exchange' : 'CMX' , 'shortName' : 'Gold' , 'region' : 'US' , 'triggerable' : False }, { 'fullExchangeName' : 'COMEX' , 'symbol' : 'SI=F' , 'gmtOffSetMilliseconds' : - 14400000 , 'headSymbolAsString' : 'SI=F' , 'language' : 'en-US' , 'regularMarketTime' : { 'raw' : 1596229200 , 'fmt' : '5:00PM EDT' }, 'regularMarketChangePercent' : { 'raw' : 5.427616 , 'fmt' : '5.43%' }, 'quoteType' : 'FUTURE' , 'headSymbol' : True , 'contractSymbol' : False , 'tradeable' : False , 'regularMarketPreviousClose' : { 'raw' : 23.362 , 'fmt' : '23.36' }, 'exchangeTimezoneName' : 'America/New_York' , 'regularMarketChange' : { 'raw' : 1.2679996 , 'fmt' : '1.27' }, 'firstTradeDateMilliseconds' : 951714000000 , 'exchangeDataDelayedBy' : 30 , 'exchangeTimezoneShortName' : 'EDT' , 'marketState' : 'REGULAR' , 'regularMarketPrice' : { 'raw' : 24.63 , 'fmt' : '24.63' }, 'market' : 'us24_market' , 'sourceInterval' : 15 , 'exchange' : 'CMX' , 'shortName' : 'Silver' , 'region' : 'US' , 'triggerable' : False }, { 'fullExchangeName' : 'CCY' , 'symbol' : 'EURUSD=X' , 'gmtOffSetMilliseconds' : 3600000 , 'language' : 'en-US' , 'regularMarketTime' : { 'raw' : 1596234582 , 'fmt' : '11:29PM BST' }, 'regularMarketChangePercent' : { 'raw' : - 0.58878887 , 'fmt' : '-0.59%' }, 'quoteType' : 'CURRENCY' , 'tradeable' : False , 'currency' : 'USD' , 'regularMarketPreviousClose' : { 'raw' : 1.1845534 , 'fmt' : '1.1846' }, 'exchangeTimezoneName' : 'Europe/London' , 'regularMarketChange' : { 'raw' : - 0.0069744587 , 'fmt' : '-0.0070' }, 'exchangeDataDelayedBy' : 0 , 'firstTradeDateMilliseconds' : 1070236800000 , 'exchangeTimezoneShortName' : 'BST' , 'regularMarketPrice' : { 'raw' : 1.1775789 , 'fmt' : '1.1776' }, 'marketState' : 'CLOSED' , 'market' : 'ccy_market' , 'quoteSourceName' : 'Delayed Quote' , 'priceHint' : 4 , 'exchange' : 'CCY' , 'sourceInterval' : 15 , 'shortName' : 'EUR/USD' , 'region' : 'US' , 'triggerable' : False }, { 'exchangeTimezoneName' : 'America/New_York' , 'fullExchangeName' : 'NYBOT' , 'symbol' : '^TNX' , 'regularMarketChange' : { 'raw' : - 0.004999995 , 'fmt' : '-0.0050' }, 'gmtOffSetMilliseconds' : - 14400000 , 'exchangeDataDelayedBy' : 30 , 'firstTradeDateMilliseconds' : - 252356400000 , 'language' : 'en-US' , 'regularMarketTime' : { 'raw' : 1596221996 , 'fmt' : '2:59PM EDT' }, 'exchangeTimezoneShortName' : 'EDT' , 'regularMarketChangePercent' : { 'raw' : - 0.9242135 , 'fmt' : '-0.92%' }, 'quoteType' : 'INDEX' , 'marketState' : 'REGULAR' , 'regularMarketPrice' : { 'raw' : 0.536 , 'fmt' : '0.5360' }, 'market' : 'us24_market' , 'priceHint' : 4 , 'tradeable' : False , 'exchange' : 'NYB' , 'sourceInterval' : 30 , 'region' : 'US' , 'shortName' : '10-Yr Bond' , 'triggerable' : False , 'regularMarketPreviousClose' : { 'raw' : 0.541 , 'fmt' : '0.5410' }, 'longName' : 'Treasury Yield 10 Years' }, { 'exchangeTimezoneName' : 'America/New_York' , 'fullExchangeName' : 'Chicago Options' , 'symbol' : '^VIX' , 'regularMarketChange' : { 'raw' : - 0.30000114 , 'fmt' : '-0.30' }, 'gmtOffSetMilliseconds' : - 14400000 , 'exchangeDataDelayedBy' : 20 , 'firstTradeDateMilliseconds' : 631290600000 , 'language' : 'en-US' , 'regularMarketTime' : { 'raw' : 1596226490 , 'fmt' : '4:14PM EDT' }, 'exchangeTimezoneShortName' : 'EDT' , 'regularMarketChangePercent' : { 'raw' : - 1.2116362 , 'fmt' : '-1.21%' }, 'quoteType' : 'INDEX' , 'marketState' : 'POSTPOST' , 'regularMarketPrice' : { 'raw' : 24.46 , 'fmt' : '24.46' }, 'market' : 'us_market' , 'priceHint' : 2 , 'tradeable' : False , 'exchange' : 'WCB' , 'sourceInterval' : 15 , 'region' : 'US' , 'shortName' : 'Vix' , 'triggerable' : False , 'regularMarketPreviousClose' : { 'raw' : 24.76 , 'fmt' : '24.76' } }, { 'fullExchangeName' : 'CCY' , 'symbol' : 'GBPUSD=X' , 'gmtOffSetMilliseconds' : 3600000 , 'language' : 'en-US' , 'regularMarketTime' : { 'raw' : 1596234582 , 'fmt' : '11:29PM BST' }, 'regularMarketChangePercent' : { 'raw' : - 0.06541982 , 'fmt' : '-0.07%' }, 'quoteType' : 'CURRENCY' , 'tradeable' : False , 'currency' : 'USD' , 'regularMarketPreviousClose' : { 'raw' : 1.3091918 , 'fmt' : '1.3092' }, 'exchangeTimezoneName' : 'Europe/London' , 'regularMarketChange' : { 'raw' : - 0.00085651875 , 'fmt' : '-0.0009' }, 'exchangeDataDelayedBy' : 0 , 'firstTradeDateMilliseconds' : 1070236800000 , 'exchangeTimezoneShortName' : 'BST' , 'regularMarketPrice' : { 'raw' : 1.3083353 , 'fmt' : '1.3083' }, 'marketState' : 'CLOSED' , 'market' : 'ccy_market' , 'quoteSourceName' : 'Delayed Quote' , 'priceHint' : 4 , 'exchange' : 'CCY' , 'sourceInterval' : 15 , 'shortName' : 'GBP/USD' , 'region' : 'US' , 'triggerable' : False }, { 'fullExchangeName' : 'CCY' , 'symbol' : 'JPY=X' , 'gmtOffSetMilliseconds' : 3600000 , 'language' : 'en-US' , 'regularMarketTime' : { 'raw' : 1596232799 , 'fmt' : '10:59PM BST' }, 'regularMarketChangePercent' : { 'raw' : 1.078324 , 'fmt' : '1.08%' }, 'quoteType' : 'CURRENCY' , 'tradeable' : False , 'currency' : 'JPY' , 'regularMarketPreviousClose' : { 'raw' : 104.792 , 'fmt' : '104.7920' }, 'exchangeTimezoneName' : 'Europe/London' , 'regularMarketChange' : { 'raw' : 1.1299973 , 'fmt' : '1.1300' }, 'exchangeDataDelayedBy' : 0 , 'firstTradeDateMilliseconds' : 846633600000 , 'exchangeTimezoneShortName' : 'BST' , 'regularMarketPrice' : { 'raw' : 105.922 , 'fmt' : '105.9220' }, 'marketState' : 'CLOSED' , 'market' : 'ccy_market' , 'quoteSourceName' : 'Delayed Quote' , 'priceHint' : 4 , 'exchange' : 'CCY' , 'sourceInterval' : 15 , 'shortName' : 'USD/JPY' , 'region' : 'US' , 'triggerable' : False }, { 'exchangeTimezoneName' : 'Europe/London' , 'fullExchangeName' : 'CCC' , 'symbol' : 'BTC-USD' , 'regularMarketChange' : { 'raw' : - 2.7011719 , 'fmt' : '-2.70' }, 'gmtOffSetMilliseconds' : 3600000 , 'exchangeDataDelayedBy' : 0 , 'firstTradeDateMilliseconds' : 1410908400000 , 'language' : 'en-US' , 'regularMarketTime' : { 'raw' : 1596253293 , 'fmt' : '4:41AM BST' }, 'exchangeTimezoneShortName' : 'BST' , 'regularMarketChangePercent' : { 'raw' : - 0.023798062 , 'fmt' : '-0.02%' }, 'quoteType' : 'CRYPTOCURRENCY' , 'marketState' : 'REGULAR' , 'regularMarketPrice' : { 'raw' : 11347.686 , 'fmt' : '11,347.69' }, 'market' : 'ccc_market' , 'quoteSourceName' : 'CryptoCompare' , 'tradeable' : True , 'exchange' : 'CCC' , 'sourceInterval' : 15 , 'region' : 'US' , 'triggerable' : False , 'regularMarketPreviousClose' : { 'raw' : 11350.387 , 'fmt' : '11,350.39' } }, { 'exchangeTimezoneName' : 'America/New_York' , 'fullExchangeName' : 'Nasdaq GIDS' , 'symbol' : '^CMC200' , 'regularMarketChange' : { 'raw' : 0.0 , 'fmt' : '0.00' }, 'gmtOffSetMilliseconds' : - 14400000 , 'exchangeDataDelayedBy' : 0 , 'firstTradeDateMilliseconds' : 1546266600000 , 'language' : 'en-US' , 'regularMarketTime' : { 'raw' : 1594647950 , 'fmt' : '9:45AM EDT' }, 'exchangeTimezoneShortName' : 'EDT' , 'regularMarketChangePercent' : { 'raw' : 0.0 , 'fmt' : '0.00%' }, 'quoteType' : 'INDEX' , 'marketState' : 'POSTPOST' , 'regularMarketPrice' : { 'raw' : 156.7543 , 'fmt' : '156.75' }, 'market' : 'us_market' , 'quoteSourceName' : 'Delayed Quote' , 'priceHint' : 2 , 'tradeable' : False , 'exchange' : 'NIM' , 'sourceInterval' : 15 , 'region' : 'US' , 'shortName' : 'CMC Crypto 200' , 'triggerable' : False , 'regularMarketPreviousClose' : { 'raw' : 156.7543 , 'fmt' : '156.75' } }, { 'exchangeTimezoneName' : 'Europe/London' , 'fullExchangeName' : 'FTSE Index' , 'symbol' : '^FTSE' , 'regularMarketChange' : { 'raw' : - 92.23047 , 'fmt' : '-92.23' }, 'gmtOffSetMilliseconds' : 3600000 , 'exchangeDataDelayedBy' : 15 , 'firstTradeDateMilliseconds' : 441964800000 , 'language' : 'en-US' , 'regularMarketTime' : { 'raw' : 1596210339 , 'fmt' : '4:45PM BST' }, 'exchangeTimezoneShortName' : 'BST' , 'regularMarketChangePercent' : { 'raw' : - 1.5397432 , 'fmt' : '-1.54%' }, 'quoteType' : 'INDEX' , 'marketState' : 'CLOSED' , 'regularMarketPrice' : { 'raw' : 5897.76 , 'fmt' : '5,897.76' }, 'market' : 'gb_market' , 'priceHint' : 2 , 'tradeable' : False , 'exchange' : 'FGI' , 'sourceInterval' : 15 , 'region' : 'US' , 'shortName' : 'FTSE 100' , 'triggerable' : False , 'regularMarketPreviousClose' : { 'raw' : 5989.99 , 'fmt' : '5,989.99' } }, { 'exchangeTimezoneName' : 'Asia/Tokyo' , 'fullExchangeName' : 'Osaka' , 'symbol' : '^N225' , 'regularMarketChange' : { 'raw' : - 629.23047 , 'fmt' : '-629.23' }, 'gmtOffSetMilliseconds' : 32400000 , 'exchangeDataDelayedBy' : 0 , 'firstTradeDateMilliseconds' : - 157420800000 , 'language' : 'en-US' , 'regularMarketTime' : { 'raw' : 1596176103 , 'fmt' : '3:15PM JST' }, 'exchangeTimezoneShortName' : 'JST' , 'regularMarketChangePercent' : { 'raw' : - 2.8167062 , 'fmt' : '-2.82%' }, 'quoteType' : 'INDEX' , 'marketState' : 'CLOSED' , 'regularMarketPrice' : { 'raw' : 21710.0 , 'fmt' : '21,710.00' }, 'market' : 'jp_market' , 'priceHint' : 2 , 'tradeable' : False , 'exchange' : 'OSA' , 'sourceInterval' : 20 , 'region' : 'US' , 'shortName' : 'Nikkei 225' , 'triggerable' : False , 'regularMarketPreviousClose' : { 'raw' : 22339.23 , 'fmt' : '22,339.23' } }] get_trending \u00b6 Details Description : List of trending securities for specific country Returns : list Arguments Argument Description Type Default Required Options country Name of country str united states optional See below View Countries { 'france' : { 'lang' : 'fr-FR' , 'region' : 'FR' , 'corsDomain' : 'fr.finance.yahoo.com' }, 'india' : { 'lang' : 'en-IN' , 'region' : 'IN' , 'corsDomain' : 'in.finance.yahoo.com' }, 'hong kong' : { 'lang' : 'zh-Hant-HK' , 'region' : 'HK' , 'corsDomain' : 'hk.finance.yahoo.com' }, 'germany' : { 'lang' : 'de-DE' , 'region' : 'DE' , 'corsDomain' : 'de.finance.yahoo.com' }, 'canada' : { 'lang' : 'en-CA' , 'region' : 'CA' , 'corsDomain' : 'ca.finance.yahoo.com' }, 'spain' : { 'lang' : 'es-ES' , 'region' : 'ES' , 'corsDomain' : 'es.finance.yahoo.com' }, 'italy' : { 'lang' : 'it-IT' , 'region' : 'IT' , 'corsDomain' : 'it.finance.yahoo.com' }, 'united states' : { 'lang' : 'en-US' , 'region' : 'US' , 'corsDomain' : 'finance.yahoo.com' }, 'australia' : { 'lang' : 'en-AU' , 'region' : 'AU' , 'corsDomain' : 'au.finance.yahoo.com' }, 'united kingdom' : { 'lang' : 'en-GB' , 'region' : 'GB' , 'corsDomain' : 'uk.finance.yahoo.com' }, 'brazil' : { 'lang' : 'pt-BR' , 'region' : 'BR' , 'corsDomain' : 'br.financas.yahoo.com' }, 'new zealand' : { 'lang' : 'en-NZ' , 'region' : 'NZ' , 'corsDomain' : 'nz.finance.yahoo.com' }, 'singapore' : { 'lang' : 'en-SG' , 'region' : 'SG' , 'corsDomain' : 'sg.finance.yahoo.com' } } Example from yahooquery import get_trending data = get_trending () Data { 'count' : 20 , 'quotes' : [{ 'symbol' : 'PINS' }, { 'symbol' : 'MARA' }, { 'symbol' : '^DJI' }, { 'symbol' : '^GSPC' }, { 'symbol' : '^IXIC' }, { 'symbol' : 'MSFT' }, { 'symbol' : 'SNY' }, { 'symbol' : 'JWN' }, { 'symbol' : 'AC.TO' }, { 'symbol' : 'CRUS' }, { 'symbol' : 'GSK' }, { 'symbol' : 'IZEA' }, { 'symbol' : 'SONN' }, { 'symbol' : 'TLSA' }, { 'symbol' : '^RUT' }, { 'symbol' : 'RVVTF' }, { 'symbol' : 'CLX' }, { 'symbol' : 'FLDM' }, { 'symbol' : 'KSU' }, { 'symbol' : 'BTC-USD' }], 'jobTimestamp' : 1596251351296 , 'startInterval' : 202008010200 }","title":"Miscellaneous Functions"},{"location":"guide/misc/#miscellaneous-functions","text":"Additional data can be obtained from Yahoo Finance outside of the three classes. The following functions can be utilized to retrieve additional data unrelated to a ticker symbol:","title":"Miscellaneous Functions"},{"location":"guide/misc/#import-functions","text":"from yahooquery import get_currencies , get_exchanges , get_market_summary , get_trending","title":"Import Functions"},{"location":"guide/misc/#functions","text":"","title":"Functions"},{"location":"guide/misc/#get_currencies","text":"Details Description : List of currencies Yahoo Finance supports Returns : list Example from yahooquery import get_currencies data = get_currencies () Data [{ 'shortName' : 'FJD' , 'longName' : 'Fijian Dollar' , 'symbol' : 'FJD' , 'localLongName' : 'Fijian Dollar' }, { 'shortName' : 'MXN' , 'longName' : 'Mexican Peso' , 'symbol' : 'MXN' , 'localLongName' : 'Mexican Peso' }, { 'shortName' : 'STD' , 'longName' : 'S\u00e3o Tom\u00e9 and Pr\u00edncipe Dobra' , 'symbol' : 'STD' , 'localLongName' : 'S\u00e3o Tom\u00e9 and Pr\u00edncipe Dobra' }, { 'shortName' : 'LVL' , 'longName' : 'Latvian Lats' , 'symbol' : 'LVL' , 'localLongName' : 'Latvian Lats' }, { 'shortName' : 'SCR' , 'longName' : 'Seychellois Rupee' , 'symbol' : 'SCR' , 'localLongName' : 'Seychellois Rupee' }, { 'shortName' : 'CDF' , 'longName' : 'Congolese Franc' , 'symbol' : 'CDF' , 'localLongName' : 'Congolese Franc' }, { 'shortName' : 'BBD' , 'longName' : 'Barbadian Dollar' , 'symbol' : 'BBD' , 'localLongName' : 'Barbadian Dollar' }, { 'shortName' : 'GTQ' , 'longName' : 'Guatemalan Quetzal' , 'symbol' : 'GTQ' , 'localLongName' : 'Guatemalan Quetzal' }, { 'shortName' : 'CLP' , 'longName' : 'Chilean Peso' , 'symbol' : 'CLP' , 'localLongName' : 'Chilean Peso' }, { 'shortName' : 'UGX' , 'longName' : 'Ugandan Shilling' , 'symbol' : 'UGX' , 'localLongName' : 'Ugandan Shilling' }, { 'shortName' : 'HNL' , 'longName' : 'Honduran Lempira' , 'symbol' : 'HNL' , 'localLongName' : 'Honduran Lempira' }, { 'shortName' : 'ZAR' , 'longName' : 'South African Rand' , 'symbol' : 'ZAR' , 'localLongName' : 'South African Rand' }, { 'shortName' : 'MXV' , 'longName' : 'Mexican Investment Unit' , 'symbol' : 'MXV' , 'localLongName' : 'Mexican Investment Unit' }, { 'shortName' : 'TND' , 'longName' : 'Tunisian Dinar' , 'symbol' : 'TND' , 'localLongName' : 'Tunisian Dinar' }, { 'shortName' : 'STN' , 'longName' : 'S\u00e3o Tom\u00e9 and Pr\u00edncipe Dobra' , 'symbol' : 'STN' , 'localLongName' : 'S\u00e3o Tom\u00e9 and Pr\u00edncipe Dobra' }, { 'shortName' : 'CUC' , 'longName' : 'Cuban Convertible Peso' , 'symbol' : 'CUC' , 'localLongName' : 'Cuban Convertible Peso' }, { 'shortName' : 'BSD' , 'longName' : 'Bahamian Dollar' , 'symbol' : 'BSD' , 'localLongName' : 'Bahamian Dollar' }, { 'shortName' : 'SLL' , 'longName' : 'Sierra Leonean Leone' , 'symbol' : 'SLL' , 'localLongName' : 'Sierra Leonean Leone' }, { 'shortName' : 'SDG' , 'longName' : 'Sudanese Pound' , 'symbol' : 'SDG' , 'localLongName' : 'Sudanese Pound' }, { 'shortName' : 'IQD' , 'longName' : 'Iraqi Dinar' , 'symbol' : 'IQD' , 'localLongName' : 'Iraqi Dinar' }, { 'shortName' : 'CUP' , 'longName' : 'Cuban Peso' , 'symbol' : 'CUP' , 'localLongName' : 'Cuban Peso' }, { 'shortName' : 'GMD' , 'longName' : 'Gambian Dalasi' , 'symbol' : 'GMD' , 'localLongName' : 'Gambian Dalasi' }, { 'shortName' : 'TWD' , 'longName' : 'New Taiwan Dollar' , 'symbol' : 'TWD' , 'localLongName' : 'New Taiwan Dollar' }, { 'shortName' : 'RSD' , 'longName' : 'Serbian Dinar' , 'symbol' : 'RSD' , 'localLongName' : 'Serbian Dinar' }, { 'shortName' : 'DOP' , 'longName' : 'Dominican Peso' , 'symbol' : 'DOP' , 'localLongName' : 'Dominican Peso' }, { 'shortName' : 'KMF' , 'longName' : 'Comorian Franc' , 'symbol' : 'KMF' , 'localLongName' : 'Comorian Franc' }, { 'shortName' : 'MYR' , 'longName' : 'Malaysian Ringgit' , 'symbol' : 'MYR' , 'localLongName' : 'Malaysian Ringgit' }, { 'shortName' : 'FKP' , 'longName' : 'Falkland Islands Pound' , 'symbol' : 'FKP' , 'localLongName' : 'Falkland Islands Pound' }, { 'shortName' : 'XOF' , 'longName' : 'CFA Franc BCEAO' , 'symbol' : 'XOF' , 'localLongName' : 'CFA Franc BCEAO' }, { 'shortName' : 'GEL' , 'longName' : 'Georgian Lari' , 'symbol' : 'GEL' , 'localLongName' : 'Georgian Lari' }, { 'shortName' : 'UYU' , 'longName' : 'Uruguayan Peso' , 'symbol' : 'UYU' , 'localLongName' : 'Uruguayan Peso' }, { 'shortName' : 'MAD' , 'longName' : 'Moroccan Dirham' , 'symbol' : 'MAD' , 'localLongName' : 'Moroccan Dirham' }, { 'shortName' : 'CVE' , 'longName' : 'Cape Verdean Escudo' , 'symbol' : 'CVE' , 'localLongName' : 'Cape Verdean Escudo' }, { 'shortName' : 'TOP' , 'longName' : 'Tongan Pa\u02bbanga' , 'symbol' : 'TOP' , 'localLongName' : 'Tongan Pa\u02bbanga' }, { 'shortName' : 'PGK' , 'longName' : 'Papua New Guinean Kina' , 'symbol' : 'PGK' , 'localLongName' : 'Papua New Guinean Kina' }, { 'shortName' : 'AZN' , 'longName' : 'Azerbaijan Manat' , 'symbol' : 'AZN' , 'localLongName' : 'Azerbaijan Manat' }, { 'shortName' : 'OMR' , 'longName' : 'Omani Rial' , 'symbol' : 'OMR' , 'localLongName' : 'Omani Rial' }, { 'shortName' : 'SEK' , 'longName' : 'Swedish Krona' , 'symbol' : 'SEK' , 'localLongName' : 'Swedish Krona' }, { 'shortName' : 'KES' , 'longName' : 'Kenyan Shilling' , 'symbol' : 'KES' , 'localLongName' : 'Kenyan Shilling' }, { 'shortName' : 'BTN' , 'longName' : 'Bhutanese Ngultrum' , 'symbol' : 'BTN' , 'localLongName' : 'Bhutanese Ngultrum' }, { 'shortName' : 'UAH' , 'longName' : 'Ukrainian Hryvnia' , 'symbol' : 'UAH' , 'localLongName' : 'Ukrainian Hryvnia' }, { 'shortName' : 'GNF' , 'longName' : 'Guinean Franc' , 'symbol' : 'GNF' , 'localLongName' : 'Guinean Franc' }, { 'shortName' : 'ERN' , 'longName' : 'Eritrean Nakfa' , 'symbol' : 'ERN' , 'localLongName' : 'Eritrean Nakfa' }, { 'shortName' : 'MZN' , 'longName' : 'Mozambican Metical' , 'symbol' : 'MZN' , 'localLongName' : 'Mozambican Metical' }, { 'shortName' : 'SVC' , 'longName' : 'Salvadoran Col\u00f3n' , 'symbol' : 'SVC' , 'localLongName' : 'Salvadoran Col\u00f3n' }, { 'shortName' : 'ARS' , 'longName' : 'Argentine Peso' , 'symbol' : 'ARS' , 'localLongName' : 'Argentine Peso' }, { 'shortName' : 'QAR' , 'longName' : 'Qatari Rial' , 'symbol' : 'QAR' , 'localLongName' : 'Qatari Rial' }, { 'shortName' : 'IRR' , 'longName' : 'Iranian Rial' , 'symbol' : 'IRR' , 'localLongName' : 'Iranian Rial' }, { 'shortName' : 'MRO' , 'longName' : 'Mauritanian Ouguiya' , 'symbol' : 'MRO' , 'localLongName' : 'Mauritanian Ouguiya' }, { 'shortName' : 'XPD' , 'longName' : 'Palladium' , 'symbol' : 'XPD' , 'localLongName' : 'Palladium' }, { 'shortName' : 'THB' , 'longName' : 'Thai Baht' , 'symbol' : 'THB' , 'localLongName' : 'Thai Baht' }, { 'shortName' : 'UZS' , 'longName' : 'Uzbekistan Som' , 'symbol' : 'UZS' , 'localLongName' : 'Uzbekistan Som' }, { 'shortName' : 'XPF' , 'longName' : 'CFP Franc' , 'symbol' : 'XPF' , 'localLongName' : 'CFP Franc' }, { 'shortName' : 'CNY' , 'longName' : 'Chinese Yuan' , 'symbol' : 'CNY' , 'localLongName' : 'Chinese Yuan' }, { 'shortName' : 'MRU' , 'longName' : 'Mauritanian Ouguiya' , 'symbol' : 'MRU' , 'localLongName' : 'Mauritanian Ouguiya' }, { 'shortName' : 'BDT' , 'longName' : 'Bangladeshi Taka' , 'symbol' : 'BDT' , 'localLongName' : 'Bangladeshi Taka' }, { 'shortName' : 'LYD' , 'longName' : 'Libyan Dinar' , 'symbol' : 'LYD' , 'localLongName' : 'Libyan Dinar' }, { 'shortName' : 'BMD' , 'longName' : 'Bermudan Dollar' , 'symbol' : 'BMD' , 'localLongName' : 'Bermudan Dollar' }, { 'shortName' : 'PHP' , 'longName' : 'Philippine Peso' , 'symbol' : 'PHP' , 'localLongName' : 'Philippine Peso' }, { 'shortName' : 'KWD' , 'longName' : 'Kuwaiti Dinar' , 'symbol' : 'KWD' , 'localLongName' : 'Kuwaiti Dinar' }, { 'shortName' : 'XPT' , 'longName' : 'Platinum' , 'symbol' : 'XPT' , 'localLongName' : 'Platinum' }, { 'shortName' : 'RUB' , 'longName' : 'Russian Ruble' , 'symbol' : 'RUB' , 'localLongName' : 'Russian Ruble' }, { 'shortName' : 'PYG' , 'longName' : 'Paraguayan Guarani' , 'symbol' : 'PYG' , 'localLongName' : 'Paraguayan Guarani' }, { 'shortName' : 'JMD' , 'longName' : 'Jamaican Dollar' , 'symbol' : 'JMD' , 'localLongName' : 'Jamaican Dollar' }, { 'shortName' : 'ISK' , 'longName' : 'Icelandic Kr\u00f3na' , 'symbol' : 'ISK' , 'localLongName' : 'Icelandic Kr\u00f3na' }, { 'shortName' : 'COP' , 'longName' : 'Colombian Peso' , 'symbol' : 'COP' , 'localLongName' : 'Colombian Peso' }, { 'shortName' : 'USD' , 'longName' : 'US Dollar' , 'symbol' : 'USD' , 'localLongName' : 'US Dollar' }, { 'shortName' : 'MKD' , 'longName' : 'Macedonian Denar' , 'symbol' : 'MKD' , 'localLongName' : 'Macedonian Denar' }, { 'shortName' : 'DZD' , 'longName' : 'Algerian Dinar' , 'symbol' : 'DZD' , 'localLongName' : 'Algerian Dinar' }, { 'shortName' : 'PAB' , 'longName' : 'Panamanian Balboa' , 'symbol' : 'PAB' , 'localLongName' : 'Panamanian Balboa' }, { 'shortName' : 'SGD' , 'longName' : 'Singapore Dollar' , 'symbol' : 'SGD' , 'localLongName' : 'Singapore Dollar' }, { 'shortName' : 'ETB' , 'longName' : 'Ethiopian Birr' , 'symbol' : 'ETB' , 'localLongName' : 'Ethiopian Birr' }, { 'shortName' : 'VEF' , 'longName' : 'Venezuelan Bol\u00edvar' , 'symbol' : 'VEF' , 'localLongName' : 'Venezuelan Bol\u00edvar' }, { 'shortName' : 'KGS' , 'longName' : 'Kyrgystani Som' , 'symbol' : 'KGS' , 'localLongName' : 'Kyrgystani Som' }, { 'shortName' : 'SOS' , 'longName' : 'Somali Shilling' , 'symbol' : 'SOS' , 'localLongName' : 'Somali Shilling' }, { 'shortName' : 'VUV' , 'longName' : 'Vanuatu Vatu' , 'symbol' : 'VUV' , 'localLongName' : 'Vanuatu Vatu' }, { 'shortName' : 'LAK' , 'longName' : 'Lao Kip' , 'symbol' : 'LAK' , 'localLongName' : 'Lao Kip' }, { 'shortName' : 'BND' , 'longName' : 'Brunei Dollar' , 'symbol' : 'BND' , 'localLongName' : 'Brunei Dollar' }, { 'shortName' : 'ZMK' , 'longName' : 'Zambian Kwacha' , 'symbol' : 'ZMK' , 'localLongName' : 'Zambian Kwacha' }, { 'shortName' : 'XAF' , 'longName' : 'CFA Franc BEAC' , 'symbol' : 'XAF' , 'localLongName' : 'CFA Franc BEAC' }, { 'shortName' : 'LRD' , 'longName' : 'Liberian Dollar' , 'symbol' : 'LRD' , 'localLongName' : 'Liberian Dollar' }, { 'shortName' : 'XAG' , 'longName' : 'Silver' , 'symbol' : 'XAG' , 'localLongName' : 'Silver' }, { 'shortName' : 'CHF' , 'longName' : 'Swiss Franc' , 'symbol' : 'CHF' , 'localLongName' : 'Swiss Franc' }, { 'shortName' : 'ITL' , 'longName' : 'Italian Lira' , 'symbol' : 'ITL' , 'localLongName' : 'Italian Lira' }, { 'shortName' : 'HRK' , 'longName' : 'Kuna' , 'symbol' : 'HRK' , 'localLongName' : 'Kuna' }, { 'shortName' : 'ALL' , 'longName' : 'Albanian Lek' , 'symbol' : 'ALL' , 'localLongName' : 'Albanian Lek' }, { 'shortName' : 'DJF' , 'longName' : 'Djiboutian Franc' , 'symbol' : 'DJF' , 'localLongName' : 'Djiboutian Franc' }, { 'shortName' : 'ZMW' , 'longName' : 'ZMW' , 'symbol' : 'ZMW' , 'localLongName' : 'ZMW' }, { 'shortName' : 'VES' , 'longName' : 'Venezuelan Bol\u00edvar Soberano' , 'symbol' : 'VES' , 'localLongName' : 'Venezuelan Bol\u00edvar Soberano' }, { 'shortName' : 'TZS' , 'longName' : 'Tanzanian Shilling' , 'symbol' : 'TZS' , 'localLongName' : 'Tanzanian Shilling' }, { 'shortName' : 'XAU' , 'longName' : 'Gold' , 'symbol' : 'XAU' , 'localLongName' : 'Gold' }, { 'shortName' : 'VND' , 'longName' : 'Vietnamese Dong' , 'symbol' : 'VND' , 'localLongName' : 'Vietnamese Dong' }, { 'shortName' : 'AUD' , 'longName' : 'Australian Dollar' , 'symbol' : 'AUD' , 'localLongName' : 'Australian Dollar' }, { 'shortName' : 'ILS' , 'longName' : 'Israeli New Sheqel' , 'symbol' : 'ILS' , 'localLongName' : 'Israeli New Sheqel' }, { 'shortName' : 'KPW' , 'longName' : 'North Korean Won' , 'symbol' : 'KPW' , 'localLongName' : 'North Korean Won' }, { 'shortName' : 'GYD' , 'longName' : 'Guyanaese Dollar' , 'symbol' : 'GYD' , 'localLongName' : 'Guyanaese Dollar' }, { 'shortName' : 'GHS' , 'longName' : 'Ghanaian Cedi' , 'symbol' : 'GHS' , 'localLongName' : 'Ghanaian Cedi' }, { 'shortName' : 'KHR' , 'longName' : 'Cambodian Riel' , 'symbol' : 'KHR' , 'localLongName' : 'Cambodian Riel' }, { 'shortName' : 'MDL' , 'longName' : 'Moldovan Leu' , 'symbol' : 'MDL' , 'localLongName' : 'Moldovan Leu' }, { 'shortName' : 'BOB' , 'longName' : 'Bolivian Boliviano' , 'symbol' : 'BOB' , 'localLongName' : 'Bolivian Boliviano' }, { 'shortName' : 'IDR' , 'longName' : 'Indonesian Rupiah' , 'symbol' : 'IDR' , 'localLongName' : 'Indonesian Rupiah' }, { 'shortName' : 'KYD' , 'longName' : 'Cayman Islands Dollar' , 'symbol' : 'KYD' , 'localLongName' : 'Cayman Islands Dollar' }, { 'shortName' : 'AMD' , 'longName' : 'Armenian Dram' , 'symbol' : 'AMD' , 'localLongName' : 'Armenian Dram' }, { 'shortName' : 'SHP' , 'longName' : 'Saint Helena Pound' , 'symbol' : 'SHP' , 'localLongName' : 'Saint Helena Pound' }, { 'shortName' : 'BWP' , 'longName' : 'Botswanan Pula' , 'symbol' : 'BWP' , 'localLongName' : 'Botswanan Pula' }, { 'shortName' : 'TRY' , 'longName' : 'Turkish Lira' , 'symbol' : 'TRY' , 'localLongName' : 'Turkish Lira' }, { 'shortName' : 'LBP' , 'longName' : 'Lebanese Pound' , 'symbol' : 'LBP' , 'localLongName' : 'Lebanese Pound' }, { 'shortName' : 'CYP' , 'longName' : 'Cypriot Pound' , 'symbol' : 'CYP' , 'localLongName' : 'Cypriot Pound' }, { 'shortName' : 'TJS' , 'longName' : 'Tajikistani Somoni' , 'symbol' : 'TJS' , 'localLongName' : 'Tajikistani Somoni' }, { 'shortName' : 'JOD' , 'longName' : 'Jordanian Dinar' , 'symbol' : 'JOD' , 'localLongName' : 'Jordanian Dinar' }, { 'shortName' : 'AED' , 'longName' : 'United Arab Emirates Dirham' , 'symbol' : 'AED' , 'localLongName' : 'United Arab Emirates Dirham' }, { 'shortName' : 'HKD' , 'longName' : 'Hong Kong Dollar' , 'symbol' : 'HKD' , 'localLongName' : 'Hong Kong Dollar' }, { 'shortName' : 'RWF' , 'longName' : 'Rwandan Franc' , 'symbol' : 'RWF' , 'localLongName' : 'Rwandan Franc' }, { 'shortName' : 'EUR' , 'longName' : 'Euro' , 'symbol' : 'EUR' , 'localLongName' : 'Euro' }, { 'shortName' : 'LSL' , 'longName' : 'Lesotho Loti' , 'symbol' : 'LSL' , 'localLongName' : 'Lesotho Loti' }, { 'shortName' : 'DKK' , 'longName' : 'Danish Krone' , 'symbol' : 'DKK' , 'localLongName' : 'Danish Krone' }, { 'shortName' : 'CAD' , 'longName' : 'Canadian Dollar' , 'symbol' : 'CAD' , 'localLongName' : 'Canadian Dollar' }, { 'shortName' : 'BGN' , 'longName' : 'Bulgarian Lev' , 'symbol' : 'BGN' , 'localLongName' : 'Bulgarian Lev' }, { 'shortName' : 'MMK' , 'longName' : 'Myanma Kyat' , 'symbol' : 'MMK' , 'localLongName' : 'Myanma Kyat' }, { 'shortName' : 'NOK' , 'longName' : 'Norwegian Krone' , 'symbol' : 'NOK' , 'localLongName' : 'Norwegian Krone' }, { 'shortName' : 'SYP' , 'longName' : 'Syrian Pound' , 'symbol' : 'SYP' , 'localLongName' : 'Syrian Pound' }, { 'shortName' : 'MUR' , 'longName' : 'Mauritian Rupee' , 'symbol' : 'MUR' , 'localLongName' : 'Mauritian Rupee' }, { 'shortName' : 'ZWL' , 'longName' : 'Zimbabwean Dollar (2009)' , 'symbol' : 'ZWL' , 'localLongName' : 'Zimbabwean Dollar (2009)' }, { 'shortName' : 'GIP' , 'longName' : 'Gibraltar Pound' , 'symbol' : 'GIP' , 'localLongName' : 'Gibraltar Pound' }, { 'shortName' : 'RON' , 'longName' : 'Romanian Leu' , 'symbol' : 'RON' , 'localLongName' : 'Romanian Leu' }, { 'shortName' : 'LKR' , 'longName' : 'Sri Lankan Rupee' , 'symbol' : 'LKR' , 'localLongName' : 'Sri Lankan Rupee' }, { 'shortName' : 'NGN' , 'longName' : 'Nigerian Naira' , 'symbol' : 'NGN' , 'localLongName' : 'Nigerian Naira' }, { 'shortName' : 'IEP' , 'longName' : 'Irish Pound' , 'symbol' : 'IEP' , 'localLongName' : 'Irish Pound' }, { 'shortName' : 'CZK' , 'longName' : 'Czech Republic Koruna' , 'symbol' : 'CZK' , 'localLongName' : 'Czech Republic Koruna' }, { 'shortName' : 'CRC' , 'longName' : 'Costa Rican Col\u00f3n' , 'symbol' : 'CRC' , 'localLongName' : 'Costa Rican Col\u00f3n' }, { 'shortName' : 'PKR' , 'longName' : 'Pakistani Rupee' , 'symbol' : 'PKR' , 'localLongName' : 'Pakistani Rupee' }, { 'shortName' : 'XCD' , 'longName' : 'East Caribbean Dollar' , 'symbol' : 'XCD' , 'localLongName' : 'East Caribbean Dollar' }, { 'shortName' : 'ANG' , 'longName' : 'Netherlands Antillean Guilder' , 'symbol' : 'ANG' , 'localLongName' : 'Netherlands Antillean Guilder' }, { 'shortName' : 'HTG' , 'longName' : 'Haitian Gourde' , 'symbol' : 'HTG' , 'localLongName' : 'Haitian Gourde' }, { 'shortName' : 'BHD' , 'longName' : 'Bahraini Dinar' , 'symbol' : 'BHD' , 'localLongName' : 'Bahraini Dinar' }, { 'shortName' : 'SIT' , 'longName' : 'Slovenian Tolar' , 'symbol' : 'SIT' , 'localLongName' : 'Slovenian Tolar' }, { 'shortName' : 'SZL' , 'longName' : 'Swazi Lilangeni' , 'symbol' : 'SZL' , 'localLongName' : 'Swazi Lilangeni' }, { 'shortName' : 'SRD' , 'longName' : 'Surinamese Dollar' , 'symbol' : 'SRD' , 'localLongName' : 'Surinamese Dollar' }, { 'shortName' : 'KZT' , 'longName' : 'Kazakhstani Tenge' , 'symbol' : 'KZT' , 'localLongName' : 'Kazakhstani Tenge' }, { 'shortName' : 'SAR' , 'longName' : 'Saudi Riyal' , 'symbol' : 'SAR' , 'localLongName' : 'Saudi Riyal' }, { 'shortName' : 'LTL' , 'longName' : 'Lithuanian Litas' , 'symbol' : 'LTL' , 'localLongName' : 'Lithuanian Litas' }, { 'shortName' : 'TTD' , 'longName' : 'Trinidad and Tobago Dollar' , 'symbol' : 'TTD' , 'localLongName' : 'Trinidad and Tobago Dollar' }, { 'shortName' : 'YER' , 'longName' : 'Yemeni Rial' , 'symbol' : 'YER' , 'localLongName' : 'Yemeni Rial' }, { 'shortName' : 'MVR' , 'longName' : 'Maldivian Rufiyaa' , 'symbol' : 'MVR' , 'localLongName' : 'Maldivian Rufiyaa' }, { 'shortName' : 'AFN' , 'longName' : 'Afghan Afghani' , 'symbol' : 'AFN' , 'localLongName' : 'Afghan Afghani' }, { 'shortName' : 'INR' , 'longName' : 'Indian Rupee' , 'symbol' : 'INR' , 'localLongName' : 'Indian Rupee' }, { 'shortName' : 'NPR' , 'longName' : 'Nepalese Rupee' , 'symbol' : 'NPR' , 'localLongName' : 'Nepalese Rupee' }, { 'shortName' : 'KRW' , 'longName' : 'South Korean Won' , 'symbol' : 'KRW' , 'localLongName' : 'South Korean Won' }, { 'shortName' : 'AWG' , 'longName' : 'Aruban Florin' , 'symbol' : 'AWG' , 'localLongName' : 'Aruban Florin' }, { 'shortName' : 'MNT' , 'longName' : 'Mongolian Tugrik' , 'symbol' : 'MNT' , 'localLongName' : 'Mongolian Tugrik' }, { 'shortName' : 'JPY' , 'longName' : 'Japanese Yen' , 'symbol' : 'JPY' , 'localLongName' : 'Japanese Yen' }, { 'shortName' : 'AOA' , 'longName' : 'Angolan Kwanza' , 'symbol' : 'AOA' , 'localLongName' : 'Angolan Kwanza' }, { 'shortName' : 'PLN' , 'longName' : 'Polish Zloty' , 'symbol' : 'PLN' , 'localLongName' : 'Polish Zloty' }, { 'shortName' : 'SBD' , 'longName' : 'Solomon Islands Dollar' , 'symbol' : 'SBD' , 'localLongName' : 'Solomon Islands Dollar' }, { 'shortName' : 'GBP' , 'longName' : 'British Pound Sterling' , 'symbol' : 'GBP' , 'localLongName' : 'British Pound Sterling' }, { 'shortName' : 'BYN' , 'longName' : 'Belarusian Ruble' , 'symbol' : 'BYN' , 'localLongName' : 'Belarusian Ruble' }, { 'shortName' : 'HUF' , 'longName' : 'Hungarian Forint' , 'symbol' : 'HUF' , 'localLongName' : 'Hungarian Forint' }, { 'shortName' : 'BYR' , 'longName' : 'Belarusian Ruble (2000-2016)' , 'symbol' : 'BYR' , 'localLongName' : 'Belarusian Ruble (2000-2016)' }, { 'shortName' : 'BIF' , 'longName' : 'Burundian Franc' , 'symbol' : 'BIF' , 'localLongName' : 'Burundian Franc' }, { 'shortName' : 'MWK' , 'longName' : 'Malawian Malawi Kwacha' , 'symbol' : 'MWK' , 'localLongName' : 'Malawian Malawi Kwacha' }, { 'shortName' : 'MGA' , 'longName' : 'Malagasy Ariary' , 'symbol' : 'MGA' , 'localLongName' : 'Malagasy Ariary' }, { 'shortName' : 'XDR' , 'longName' : 'Special Drawing Rights' , 'symbol' : 'XDR' , 'localLongName' : 'Special Drawing Rights' }, { 'shortName' : 'BZD' , 'longName' : 'Belize Dollar' , 'symbol' : 'BZD' , 'localLongName' : 'Belize Dollar' }, { 'shortName' : 'DEM' , 'longName' : 'German Mark' , 'symbol' : 'DEM' , 'localLongName' : 'German Mark' }, { 'shortName' : 'BAM' , 'longName' : 'Bosnia-Herzegovina Convertible Mark' , 'symbol' : 'BAM' , 'localLongName' : 'Bosnia-Herzegovina Convertible Mark' }, { 'shortName' : 'MOP' , 'longName' : 'Macanese Pataca' , 'symbol' : 'MOP' , 'localLongName' : 'Macanese Pataca' }, { 'shortName' : 'EGP' , 'longName' : 'Egyptian Pound' , 'symbol' : 'EGP' , 'localLongName' : 'Egyptian Pound' }, { 'shortName' : 'NAD' , 'longName' : 'Namibian Dollar' , 'symbol' : 'NAD' , 'localLongName' : 'Namibian Dollar' }, { 'shortName' : 'NIO' , 'longName' : 'Nicaraguan C\u00f3rdoba' , 'symbol' : 'NIO' , 'localLongName' : 'Nicaraguan C\u00f3rdoba' }, { 'shortName' : 'PEN' , 'longName' : 'Peruvian Sol' , 'symbol' : 'PEN' , 'localLongName' : 'Peruvian Sol' }, { 'shortName' : 'NZD' , 'longName' : 'New Zealand Dollar' , 'symbol' : 'NZD' , 'localLongName' : 'New Zealand Dollar' }, { 'shortName' : 'WST' , 'longName' : 'Samoan Tala' , 'symbol' : 'WST' , 'localLongName' : 'Samoan Tala' }, { 'shortName' : 'TMT' , 'longName' : 'Turkmenistani Manat' , 'symbol' : 'TMT' , 'localLongName' : 'Turkmenistani Manat' }, { 'shortName' : 'FRF' , 'longName' : 'French Franc' , 'symbol' : 'FRF' , 'localLongName' : 'French Franc' }, { 'shortName' : 'CLF' , 'longName' : 'Chilean Unit of Account (UF)' , 'symbol' : 'CLF' , 'localLongName' : 'Chilean Unit of Account (UF)' }, { 'shortName' : 'BRL' , 'longName' : 'Brazilian Real' , 'symbol' : 'BRL' , 'localLongName' : 'Brazilian Real' }]","title":"get_currencies"},{"location":"guide/misc/#get_exchanges","text":"Details Description : List of exchanges and suffixes to use to to retrieve data on various exchanges Returns : pandas.DataFrame Example from yahooquery import get_currencies df = get_exchanges () df . head () Data Country Market, or Index Suffix Delay Data Provider 0 United States of America Chicago Board of Trade (CBOT) .CBT 10 min ICE Data Services 1 United States of America Chicago Mercantile Exchange (CME) .CME 10 min ICE Data Services 2 United States of America Dow Jones Indexes nan Real-time ICE Data Services 3 United States of America Nasdaq Stock Exchange nan Real-time ICE Data Services 4 United States of America ICE Futures US .NYB 30 min ICE Data Services","title":"get_exchanges"},{"location":"guide/misc/#get_market_summary","text":"Details Description : List of relevant exchanges for specific country Returns : list Arguments Argument Description Type Default Required Options country Name of country str United States optional See below View Countries { 'france' : { 'lang' : 'fr-FR' , 'region' : 'FR' , 'corsDomain' : 'fr.finance.yahoo.com' }, 'india' : { 'lang' : 'en-IN' , 'region' : 'IN' , 'corsDomain' : 'in.finance.yahoo.com' }, 'hong kong' : { 'lang' : 'zh-Hant-HK' , 'region' : 'HK' , 'corsDomain' : 'hk.finance.yahoo.com' }, 'germany' : { 'lang' : 'de-DE' , 'region' : 'DE' , 'corsDomain' : 'de.finance.yahoo.com' }, 'canada' : { 'lang' : 'en-CA' , 'region' : 'CA' , 'corsDomain' : 'ca.finance.yahoo.com' }, 'spain' : { 'lang' : 'es-ES' , 'region' : 'ES' , 'corsDomain' : 'es.finance.yahoo.com' }, 'italy' : { 'lang' : 'it-IT' , 'region' : 'IT' , 'corsDomain' : 'it.finance.yahoo.com' }, 'united states' : { 'lang' : 'en-US' , 'region' : 'US' , 'corsDomain' : 'finance.yahoo.com' }, 'australia' : { 'lang' : 'en-AU' , 'region' : 'AU' , 'corsDomain' : 'au.finance.yahoo.com' }, 'united kingdom' : { 'lang' : 'en-GB' , 'region' : 'GB' , 'corsDomain' : 'uk.finance.yahoo.com' }, 'brazil' : { 'lang' : 'pt-BR' , 'region' : 'BR' , 'corsDomain' : 'br.financas.yahoo.com' }, 'new zealand' : { 'lang' : 'en-NZ' , 'region' : 'NZ' , 'corsDomain' : 'nz.finance.yahoo.com' }, 'singapore' : { 'lang' : 'en-SG' , 'region' : 'SG' , 'corsDomain' : 'sg.finance.yahoo.com' } } Example from yahooquery import get_market_summary get_market_summary ( country = 'hong kong' ) Data [{ 'exchangeTimezoneName' : 'America/New_York' , 'fullExchangeName' : 'SNP' , 'symbol' : '^GSPC' , 'regularMarketChange' : { 'raw' : 24.900146 , 'fmt' : '24.90' }, 'gmtOffSetMilliseconds' : - 14400000 , 'exchangeDataDelayedBy' : 0 , 'firstTradeDateMilliseconds' : - 1325583000000 , 'language' : 'en-US' , 'regularMarketTime' : { 'raw' : 1596229659 , 'fmt' : '5:07PM EDT' }, 'exchangeTimezoneShortName' : 'EDT' , 'regularMarketChangePercent' : { 'raw' : 0.7670505 , 'fmt' : '0.77%' }, 'quoteType' : 'INDEX' , 'marketState' : 'POSTPOST' , 'regularMarketPrice' : { 'raw' : 3271.12 , 'fmt' : '3,271.12' }, 'market' : 'us_market' , 'quoteSourceName' : 'Delayed Quote' , 'priceHint' : 2 , 'tradeable' : False , 'exchange' : 'SNP' , 'sourceInterval' : 15 , 'region' : 'US' , 'shortName' : 'S&P 500' , 'triggerable' : False , 'regularMarketPreviousClose' : { 'raw' : 3246.22 , 'fmt' : '3,246.22' } }, { 'exchangeTimezoneName' : 'America/New_York' , 'fullExchangeName' : 'DJI' , 'symbol' : '^DJI' , 'regularMarketChange' : { 'raw' : 114.66992 , 'fmt' : '114.67' }, 'gmtOffSetMilliseconds' : - 14400000 , 'exchangeDataDelayedBy' : 0 , 'firstTradeDateMilliseconds' : 475857000000 , 'language' : 'en-US' , 'regularMarketTime' : { 'raw' : 1596229659 , 'fmt' : '5:07PM EDT' }, 'exchangeTimezoneShortName' : 'EDT' , 'regularMarketChangePercent' : { 'raw' : 0.43578112 , 'fmt' : '0.44%' }, 'quoteType' : 'INDEX' , 'marketState' : 'POSTPOST' , 'regularMarketPrice' : { 'raw' : 26428.32 , 'fmt' : '26,428.32' }, 'market' : 'us_market' , 'quoteSourceName' : 'Delayed Quote' , 'priceHint' : 2 , 'tradeable' : False , 'exchange' : 'DJI' , 'sourceInterval' : 120 , 'region' : 'US' , 'shortName' : 'Dow 30' , 'triggerable' : False , 'regularMarketPreviousClose' : { 'raw' : 26313.65 , 'fmt' : '26,313.65' } }, { 'exchangeTimezoneName' : 'America/New_York' , 'fullExchangeName' : 'Nasdaq GIDS' , 'symbol' : '^IXIC' , 'regularMarketChange' : { 'raw' : 157.46094 , 'fmt' : '157.46' }, 'gmtOffSetMilliseconds' : - 14400000 , 'exchangeDataDelayedBy' : 0 , 'firstTradeDateMilliseconds' : 34612200000 , 'language' : 'en-US' , 'regularMarketTime' : { 'raw' : 1596230159 , 'fmt' : '5:15PM EDT' }, 'exchangeTimezoneShortName' : 'EDT' , 'regularMarketChangePercent' : { 'raw' : 1.4871904 , 'fmt' : '1.49%' }, 'quoteType' : 'INDEX' , 'marketState' : 'POSTPOST' , 'regularMarketPrice' : { 'raw' : 10745.274 , 'fmt' : '10,745.27' }, 'market' : 'us_market' , 'quoteSourceName' : 'Delayed Quote' , 'priceHint' : 2 , 'tradeable' : False , 'exchange' : 'NIM' , 'sourceInterval' : 15 , 'region' : 'US' , 'shortName' : 'Nasdaq' , 'triggerable' : False , 'regularMarketPreviousClose' : { 'raw' : 10587.8 , 'fmt' : '10,587.80' } }, { 'exchangeTimezoneName' : 'America/New_York' , 'fullExchangeName' : 'Chicago Options' , 'symbol' : '^RUT' , 'regularMarketChange' : { 'raw' : - 14.674194 , 'fmt' : '-14.67' }, 'gmtOffSetMilliseconds' : - 14400000 , 'exchangeDataDelayedBy' : 20 , 'firstTradeDateMilliseconds' : 558279000000 , 'language' : 'en-US' , 'regularMarketTime' : { 'raw' : 1596227407 , 'fmt' : '4:30PM EDT' }, 'exchangeTimezoneShortName' : 'EDT' , 'regularMarketChangePercent' : { 'raw' : - 0.981485 , 'fmt' : '-0.98%' }, 'quoteType' : 'INDEX' , 'marketState' : 'POSTPOST' , 'regularMarketPrice' : { 'raw' : 1480.427 , 'fmt' : '1,480.43' }, 'market' : 'us_market' , 'priceHint' : 2 , 'tradeable' : False , 'exchange' : 'WCB' , 'sourceInterval' : 15 , 'region' : 'US' , 'shortName' : 'Russell 2000' , 'triggerable' : False , 'regularMarketPreviousClose' : { 'raw' : 1495.1012 , 'fmt' : '1,495.10' } }, { 'fullExchangeName' : 'NY Mercantile' , 'symbol' : 'CL=F' , 'gmtOffSetMilliseconds' : - 14400000 , 'headSymbolAsString' : 'CL=F' , 'language' : 'en-US' , 'regularMarketTime' : { 'raw' : 1596229198 , 'fmt' : '4:59PM EDT' }, 'regularMarketChangePercent' : { 'raw' : 1.2775606 , 'fmt' : '1.28%' }, 'quoteType' : 'FUTURE' , 'headSymbol' : True , 'contractSymbol' : False , 'tradeable' : False , 'regularMarketPreviousClose' : { 'raw' : 39.92 , 'fmt' : '39.92' }, 'exchangeTimezoneName' : 'America/New_York' , 'regularMarketChange' : { 'raw' : 0.51000214 , 'fmt' : '0.51' }, 'firstTradeDateMilliseconds' : 953701200000 , 'exchangeDataDelayedBy' : 30 , 'exchangeTimezoneShortName' : 'EDT' , 'marketState' : 'REGULAR' , 'regularMarketPrice' : { 'raw' : 40.43 , 'fmt' : '40.43' }, 'market' : 'us24_market' , 'sourceInterval' : 30 , 'exchange' : 'NYM' , 'shortName' : 'Crude Oil' , 'region' : 'US' , 'triggerable' : False }, { 'fullExchangeName' : 'COMEX' , 'symbol' : 'GC=F' , 'gmtOffSetMilliseconds' : - 14400000 , 'headSymbolAsString' : 'GC=F' , 'language' : 'en-US' , 'regularMarketTime' : { 'raw' : 1596229198 , 'fmt' : '4:59PM EDT' }, 'regularMarketChangePercent' : { 'raw' : 1.5960459 , 'fmt' : '1.60%' }, 'quoteType' : 'FUTURE' , 'headSymbol' : True , 'contractSymbol' : False , 'tradeable' : False , 'regularMarketPreviousClose' : { 'raw' : 1942.3 , 'fmt' : '1,942.30' }, 'exchangeTimezoneName' : 'America/New_York' , 'regularMarketChange' : { 'raw' : 31.0 , 'fmt' : '31.00' }, 'firstTradeDateMilliseconds' : 951714000000 , 'exchangeDataDelayedBy' : 30 , 'exchangeTimezoneShortName' : 'EDT' , 'marketState' : 'REGULAR' , 'regularMarketPrice' : { 'raw' : 1973.3 , 'fmt' : '1,973.30' }, 'market' : 'us24_market' , 'sourceInterval' : 15 , 'exchange' : 'CMX' , 'shortName' : 'Gold' , 'region' : 'US' , 'triggerable' : False }, { 'fullExchangeName' : 'COMEX' , 'symbol' : 'SI=F' , 'gmtOffSetMilliseconds' : - 14400000 , 'headSymbolAsString' : 'SI=F' , 'language' : 'en-US' , 'regularMarketTime' : { 'raw' : 1596229200 , 'fmt' : '5:00PM EDT' }, 'regularMarketChangePercent' : { 'raw' : 5.427616 , 'fmt' : '5.43%' }, 'quoteType' : 'FUTURE' , 'headSymbol' : True , 'contractSymbol' : False , 'tradeable' : False , 'regularMarketPreviousClose' : { 'raw' : 23.362 , 'fmt' : '23.36' }, 'exchangeTimezoneName' : 'America/New_York' , 'regularMarketChange' : { 'raw' : 1.2679996 , 'fmt' : '1.27' }, 'firstTradeDateMilliseconds' : 951714000000 , 'exchangeDataDelayedBy' : 30 , 'exchangeTimezoneShortName' : 'EDT' , 'marketState' : 'REGULAR' , 'regularMarketPrice' : { 'raw' : 24.63 , 'fmt' : '24.63' }, 'market' : 'us24_market' , 'sourceInterval' : 15 , 'exchange' : 'CMX' , 'shortName' : 'Silver' , 'region' : 'US' , 'triggerable' : False }, { 'fullExchangeName' : 'CCY' , 'symbol' : 'EURUSD=X' , 'gmtOffSetMilliseconds' : 3600000 , 'language' : 'en-US' , 'regularMarketTime' : { 'raw' : 1596234582 , 'fmt' : '11:29PM BST' }, 'regularMarketChangePercent' : { 'raw' : - 0.58878887 , 'fmt' : '-0.59%' }, 'quoteType' : 'CURRENCY' , 'tradeable' : False , 'currency' : 'USD' , 'regularMarketPreviousClose' : { 'raw' : 1.1845534 , 'fmt' : '1.1846' }, 'exchangeTimezoneName' : 'Europe/London' , 'regularMarketChange' : { 'raw' : - 0.0069744587 , 'fmt' : '-0.0070' }, 'exchangeDataDelayedBy' : 0 , 'firstTradeDateMilliseconds' : 1070236800000 , 'exchangeTimezoneShortName' : 'BST' , 'regularMarketPrice' : { 'raw' : 1.1775789 , 'fmt' : '1.1776' }, 'marketState' : 'CLOSED' , 'market' : 'ccy_market' , 'quoteSourceName' : 'Delayed Quote' , 'priceHint' : 4 , 'exchange' : 'CCY' , 'sourceInterval' : 15 , 'shortName' : 'EUR/USD' , 'region' : 'US' , 'triggerable' : False }, { 'exchangeTimezoneName' : 'America/New_York' , 'fullExchangeName' : 'NYBOT' , 'symbol' : '^TNX' , 'regularMarketChange' : { 'raw' : - 0.004999995 , 'fmt' : '-0.0050' }, 'gmtOffSetMilliseconds' : - 14400000 , 'exchangeDataDelayedBy' : 30 , 'firstTradeDateMilliseconds' : - 252356400000 , 'language' : 'en-US' , 'regularMarketTime' : { 'raw' : 1596221996 , 'fmt' : '2:59PM EDT' }, 'exchangeTimezoneShortName' : 'EDT' , 'regularMarketChangePercent' : { 'raw' : - 0.9242135 , 'fmt' : '-0.92%' }, 'quoteType' : 'INDEX' , 'marketState' : 'REGULAR' , 'regularMarketPrice' : { 'raw' : 0.536 , 'fmt' : '0.5360' }, 'market' : 'us24_market' , 'priceHint' : 4 , 'tradeable' : False , 'exchange' : 'NYB' , 'sourceInterval' : 30 , 'region' : 'US' , 'shortName' : '10-Yr Bond' , 'triggerable' : False , 'regularMarketPreviousClose' : { 'raw' : 0.541 , 'fmt' : '0.5410' }, 'longName' : 'Treasury Yield 10 Years' }, { 'exchangeTimezoneName' : 'America/New_York' , 'fullExchangeName' : 'Chicago Options' , 'symbol' : '^VIX' , 'regularMarketChange' : { 'raw' : - 0.30000114 , 'fmt' : '-0.30' }, 'gmtOffSetMilliseconds' : - 14400000 , 'exchangeDataDelayedBy' : 20 , 'firstTradeDateMilliseconds' : 631290600000 , 'language' : 'en-US' , 'regularMarketTime' : { 'raw' : 1596226490 , 'fmt' : '4:14PM EDT' }, 'exchangeTimezoneShortName' : 'EDT' , 'regularMarketChangePercent' : { 'raw' : - 1.2116362 , 'fmt' : '-1.21%' }, 'quoteType' : 'INDEX' , 'marketState' : 'POSTPOST' , 'regularMarketPrice' : { 'raw' : 24.46 , 'fmt' : '24.46' }, 'market' : 'us_market' , 'priceHint' : 2 , 'tradeable' : False , 'exchange' : 'WCB' , 'sourceInterval' : 15 , 'region' : 'US' , 'shortName' : 'Vix' , 'triggerable' : False , 'regularMarketPreviousClose' : { 'raw' : 24.76 , 'fmt' : '24.76' } }, { 'fullExchangeName' : 'CCY' , 'symbol' : 'GBPUSD=X' , 'gmtOffSetMilliseconds' : 3600000 , 'language' : 'en-US' , 'regularMarketTime' : { 'raw' : 1596234582 , 'fmt' : '11:29PM BST' }, 'regularMarketChangePercent' : { 'raw' : - 0.06541982 , 'fmt' : '-0.07%' }, 'quoteType' : 'CURRENCY' , 'tradeable' : False , 'currency' : 'USD' , 'regularMarketPreviousClose' : { 'raw' : 1.3091918 , 'fmt' : '1.3092' }, 'exchangeTimezoneName' : 'Europe/London' , 'regularMarketChange' : { 'raw' : - 0.00085651875 , 'fmt' : '-0.0009' }, 'exchangeDataDelayedBy' : 0 , 'firstTradeDateMilliseconds' : 1070236800000 , 'exchangeTimezoneShortName' : 'BST' , 'regularMarketPrice' : { 'raw' : 1.3083353 , 'fmt' : '1.3083' }, 'marketState' : 'CLOSED' , 'market' : 'ccy_market' , 'quoteSourceName' : 'Delayed Quote' , 'priceHint' : 4 , 'exchange' : 'CCY' , 'sourceInterval' : 15 , 'shortName' : 'GBP/USD' , 'region' : 'US' , 'triggerable' : False }, { 'fullExchangeName' : 'CCY' , 'symbol' : 'JPY=X' , 'gmtOffSetMilliseconds' : 3600000 , 'language' : 'en-US' , 'regularMarketTime' : { 'raw' : 1596232799 , 'fmt' : '10:59PM BST' }, 'regularMarketChangePercent' : { 'raw' : 1.078324 , 'fmt' : '1.08%' }, 'quoteType' : 'CURRENCY' , 'tradeable' : False , 'currency' : 'JPY' , 'regularMarketPreviousClose' : { 'raw' : 104.792 , 'fmt' : '104.7920' }, 'exchangeTimezoneName' : 'Europe/London' , 'regularMarketChange' : { 'raw' : 1.1299973 , 'fmt' : '1.1300' }, 'exchangeDataDelayedBy' : 0 , 'firstTradeDateMilliseconds' : 846633600000 , 'exchangeTimezoneShortName' : 'BST' , 'regularMarketPrice' : { 'raw' : 105.922 , 'fmt' : '105.9220' }, 'marketState' : 'CLOSED' , 'market' : 'ccy_market' , 'quoteSourceName' : 'Delayed Quote' , 'priceHint' : 4 , 'exchange' : 'CCY' , 'sourceInterval' : 15 , 'shortName' : 'USD/JPY' , 'region' : 'US' , 'triggerable' : False }, { 'exchangeTimezoneName' : 'Europe/London' , 'fullExchangeName' : 'CCC' , 'symbol' : 'BTC-USD' , 'regularMarketChange' : { 'raw' : - 2.7011719 , 'fmt' : '-2.70' }, 'gmtOffSetMilliseconds' : 3600000 , 'exchangeDataDelayedBy' : 0 , 'firstTradeDateMilliseconds' : 1410908400000 , 'language' : 'en-US' , 'regularMarketTime' : { 'raw' : 1596253293 , 'fmt' : '4:41AM BST' }, 'exchangeTimezoneShortName' : 'BST' , 'regularMarketChangePercent' : { 'raw' : - 0.023798062 , 'fmt' : '-0.02%' }, 'quoteType' : 'CRYPTOCURRENCY' , 'marketState' : 'REGULAR' , 'regularMarketPrice' : { 'raw' : 11347.686 , 'fmt' : '11,347.69' }, 'market' : 'ccc_market' , 'quoteSourceName' : 'CryptoCompare' , 'tradeable' : True , 'exchange' : 'CCC' , 'sourceInterval' : 15 , 'region' : 'US' , 'triggerable' : False , 'regularMarketPreviousClose' : { 'raw' : 11350.387 , 'fmt' : '11,350.39' } }, { 'exchangeTimezoneName' : 'America/New_York' , 'fullExchangeName' : 'Nasdaq GIDS' , 'symbol' : '^CMC200' , 'regularMarketChange' : { 'raw' : 0.0 , 'fmt' : '0.00' }, 'gmtOffSetMilliseconds' : - 14400000 , 'exchangeDataDelayedBy' : 0 , 'firstTradeDateMilliseconds' : 1546266600000 , 'language' : 'en-US' , 'regularMarketTime' : { 'raw' : 1594647950 , 'fmt' : '9:45AM EDT' }, 'exchangeTimezoneShortName' : 'EDT' , 'regularMarketChangePercent' : { 'raw' : 0.0 , 'fmt' : '0.00%' }, 'quoteType' : 'INDEX' , 'marketState' : 'POSTPOST' , 'regularMarketPrice' : { 'raw' : 156.7543 , 'fmt' : '156.75' }, 'market' : 'us_market' , 'quoteSourceName' : 'Delayed Quote' , 'priceHint' : 2 , 'tradeable' : False , 'exchange' : 'NIM' , 'sourceInterval' : 15 , 'region' : 'US' , 'shortName' : 'CMC Crypto 200' , 'triggerable' : False , 'regularMarketPreviousClose' : { 'raw' : 156.7543 , 'fmt' : '156.75' } }, { 'exchangeTimezoneName' : 'Europe/London' , 'fullExchangeName' : 'FTSE Index' , 'symbol' : '^FTSE' , 'regularMarketChange' : { 'raw' : - 92.23047 , 'fmt' : '-92.23' }, 'gmtOffSetMilliseconds' : 3600000 , 'exchangeDataDelayedBy' : 15 , 'firstTradeDateMilliseconds' : 441964800000 , 'language' : 'en-US' , 'regularMarketTime' : { 'raw' : 1596210339 , 'fmt' : '4:45PM BST' }, 'exchangeTimezoneShortName' : 'BST' , 'regularMarketChangePercent' : { 'raw' : - 1.5397432 , 'fmt' : '-1.54%' }, 'quoteType' : 'INDEX' , 'marketState' : 'CLOSED' , 'regularMarketPrice' : { 'raw' : 5897.76 , 'fmt' : '5,897.76' }, 'market' : 'gb_market' , 'priceHint' : 2 , 'tradeable' : False , 'exchange' : 'FGI' , 'sourceInterval' : 15 , 'region' : 'US' , 'shortName' : 'FTSE 100' , 'triggerable' : False , 'regularMarketPreviousClose' : { 'raw' : 5989.99 , 'fmt' : '5,989.99' } }, { 'exchangeTimezoneName' : 'Asia/Tokyo' , 'fullExchangeName' : 'Osaka' , 'symbol' : '^N225' , 'regularMarketChange' : { 'raw' : - 629.23047 , 'fmt' : '-629.23' }, 'gmtOffSetMilliseconds' : 32400000 , 'exchangeDataDelayedBy' : 0 , 'firstTradeDateMilliseconds' : - 157420800000 , 'language' : 'en-US' , 'regularMarketTime' : { 'raw' : 1596176103 , 'fmt' : '3:15PM JST' }, 'exchangeTimezoneShortName' : 'JST' , 'regularMarketChangePercent' : { 'raw' : - 2.8167062 , 'fmt' : '-2.82%' }, 'quoteType' : 'INDEX' , 'marketState' : 'CLOSED' , 'regularMarketPrice' : { 'raw' : 21710.0 , 'fmt' : '21,710.00' }, 'market' : 'jp_market' , 'priceHint' : 2 , 'tradeable' : False , 'exchange' : 'OSA' , 'sourceInterval' : 20 , 'region' : 'US' , 'shortName' : 'Nikkei 225' , 'triggerable' : False , 'regularMarketPreviousClose' : { 'raw' : 22339.23 , 'fmt' : '22,339.23' } }]","title":"get_market_summary"},{"location":"guide/misc/#get_trending","text":"Details Description : List of trending securities for specific country Returns : list Arguments Argument Description Type Default Required Options country Name of country str united states optional See below View Countries { 'france' : { 'lang' : 'fr-FR' , 'region' : 'FR' , 'corsDomain' : 'fr.finance.yahoo.com' }, 'india' : { 'lang' : 'en-IN' , 'region' : 'IN' , 'corsDomain' : 'in.finance.yahoo.com' }, 'hong kong' : { 'lang' : 'zh-Hant-HK' , 'region' : 'HK' , 'corsDomain' : 'hk.finance.yahoo.com' }, 'germany' : { 'lang' : 'de-DE' , 'region' : 'DE' , 'corsDomain' : 'de.finance.yahoo.com' }, 'canada' : { 'lang' : 'en-CA' , 'region' : 'CA' , 'corsDomain' : 'ca.finance.yahoo.com' }, 'spain' : { 'lang' : 'es-ES' , 'region' : 'ES' , 'corsDomain' : 'es.finance.yahoo.com' }, 'italy' : { 'lang' : 'it-IT' , 'region' : 'IT' , 'corsDomain' : 'it.finance.yahoo.com' }, 'united states' : { 'lang' : 'en-US' , 'region' : 'US' , 'corsDomain' : 'finance.yahoo.com' }, 'australia' : { 'lang' : 'en-AU' , 'region' : 'AU' , 'corsDomain' : 'au.finance.yahoo.com' }, 'united kingdom' : { 'lang' : 'en-GB' , 'region' : 'GB' , 'corsDomain' : 'uk.finance.yahoo.com' }, 'brazil' : { 'lang' : 'pt-BR' , 'region' : 'BR' , 'corsDomain' : 'br.financas.yahoo.com' }, 'new zealand' : { 'lang' : 'en-NZ' , 'region' : 'NZ' , 'corsDomain' : 'nz.finance.yahoo.com' }, 'singapore' : { 'lang' : 'en-SG' , 'region' : 'SG' , 'corsDomain' : 'sg.finance.yahoo.com' } } Example from yahooquery import get_trending data = get_trending () Data { 'count' : 20 , 'quotes' : [{ 'symbol' : 'PINS' }, { 'symbol' : 'MARA' }, { 'symbol' : '^DJI' }, { 'symbol' : '^GSPC' }, { 'symbol' : '^IXIC' }, { 'symbol' : 'MSFT' }, { 'symbol' : 'SNY' }, { 'symbol' : 'JWN' }, { 'symbol' : 'AC.TO' }, { 'symbol' : 'CRUS' }, { 'symbol' : 'GSK' }, { 'symbol' : 'IZEA' }, { 'symbol' : 'SONN' }, { 'symbol' : 'TLSA' }, { 'symbol' : '^RUT' }, { 'symbol' : 'RVVTF' }, { 'symbol' : 'CLX' }, { 'symbol' : 'FLDM' }, { 'symbol' : 'KSU' }, { 'symbol' : 'BTC-USD' }], 'jobTimestamp' : 1596251351296 , 'startInterval' : 202008010200 }","title":"get_trending"},{"location":"guide/research/","text":"The Research class is the access point to retrieve either research reports or trade ideas from Yahoo Finance. You must be a subscriber to Yahoo Finance Premium to utilize this class. Import \u00b6 from yahooquery import Research Create Instance \u00b6 r = Research ( username = 'username@yahoo.com' , password = password ) Research \u00b6 reports \u00b6 Details Description : Retrieve research reports from Yahoo Finance Return : pandas.DataFrame Arguments Argument Description Type Default Required Options size Number of trades to return int 100 optional investment_rating Type of investment rating str or list None optional See below sector Sector str or list None optional See below report_type Report types str or list None optional See below report_date Date range str None optional See below trend { 'options' : [ 'Bearish' , 'Bullish' ], 'multiple' : True } sector { 'options' : [ 'Basic Materials' , 'Communication Services' , 'Consumer Cyclical' , 'Consumer Defensive' , 'Energy' , 'Financial Services' , 'Healthcare' , 'Industrial' , 'Real Estate' , 'Technology' , 'Utilities' ], 'multiple' : True } report_type { 'options' : [ 'Analyst Report' , 'Insider Activity' , 'Market Outlook' , 'Market Summary' , 'Market Update' , 'Portfolio Ideas' , 'Quantitative Report' , 'Sector Watch' , 'Stock Picks' , 'Technical Analysis' , 'Thematic Portfolio' , 'Top/Bottom Insider Activity' ], 'multiple' : True } report_date { 'options' : { 'Last Week' : 7 , 'Last Month' : 30 , 'Last Year' : 365 }, 'multiple' : False } Warning If using a str for the arguments that can either be a str or list , they have to be comma separated, i.e. sector='Financial Services, Technology' . Example r = Research ( username = 'username@yahoo.com' , password = password ) r . reports ( report_type = 'Analyst Report, Insider Activity' , report_date = 'Last Week' ) Data Report Date Report type Report title Tickers Sector Rating Investment Rating Target Price Earnings Estimates 0 2020-07-31T00:00:00.000Z Analyst Report CME Group is a futures and derivatives exchange and clearing company. It operates exchanges such as the Chicago Mercantile Exchange (CME), Chicago Board of Trade (CBOT), New York Mercantile Exchange (NYMEX), Commodity Exchange (COMEX) and the Kansas City Board of Trade (KCBT). In addition, CME offers a range of market data and information services. CME shares are a component of the S&P 500. ['CME'] ['Financial Services'] Maintained Bullish Decreased Decreased 1 2020-07-31T00:00:00.000Z Analyst Report Mastercard operates the world's second-largest electronic payments network, providing processing services and payment product platforms, including credit, debit, ATM, prepaid and commercial payments under the Mastercard, Maestro, and Cirrus brands. Mastercard went public in 2006 and is a member of the S&P 500. ['MA'] ['Financial Services'] Maintained Bullish Increased Decreased 2 2020-07-31T00:00:00.000Z Analyst Report Blackstone Group is one of the world's leading managers of alternative assets, including private equity, real estate, hedge funds, credit-oriented funds, and closed-end mutual funds. In recent years, Blackstone has rapidly grown its fee-earning assets under management, and its assets are relatively well balanced among private equity, real estate, hedge funds, and credit. The company converted from a publicly traded partnership to a corporation on July 1, 2019. ['BX'] ['Financial Services'] Maintained Bullish Maintained Decreased 3 2020-07-31T00:00:00.000Z Analyst Report Northrop Grumman is a leading global defense contractor, providing systems integration, defense electronics, information technology, and advanced aircraft and space technology. The shares are a component of the S&P 500. The company has 90,000 employees. ['NOC'] ['Industrials'] Maintained Bullish Maintained Increased 4 2020-07-31T00:00:00.000Z Analyst Report Starbucks is a leading retailer of fresh-brewed coffee and branded merchandise. Its brands include Starbucks, Tazo Tea, and Frappuccino. With a market cap of more than $90 billion, SBUX shares are generally considered large-cap growth. ['SBUX'] ['Consumer Cyclical'] Maintained Bullish Maintained Decreased trades \u00b6 Details Description : Retrieve trade ideas from Yahoo Finance Return : pandas.DataFrame Arguments Argument Description Type Default Required Options size Number of trades to return int 100 optional trend Type of investment rating str or list None optional See below sector Sector str or list None optional See below term Term length (short, mid, long) str or list None optional See below startdatetime Date range str None optional See below trend { 'options' : [ 'Bearish' , 'Bullish' ], 'multiple' : True } sector { 'options' : [ 'Basic Materials' , 'Communication Services' , 'Consumer Cyclical' , 'Consumer Defensive' , 'Energy' , 'Financial Services' , 'Healthcare' , 'Industrial' , 'Real Estate' , 'Technology' , 'Utilities' ], 'multiple' : True } term { 'options' : [ 'Short term' , 'Mid term' , 'Long term' ], 'multiple' : True } startdatetime { 'options' : { 'Last Week' : 7 , 'Last Month' : 30 , 'Last Year' : 365 }, 'multiple' : False } Warning If using a str for the arguments that can either be a str or list , they have to be comma separated, i.e. sector='Financial Services, Technology' . Example r = Research ( username = 'username@yahoo.com' , password = password ) r . trades ( sector = [ 'Financial Services' , 'Technology' ], term = 'Short term' , startdatetime = 'Last Week' ) Data Idea Date Term Ticker Rating Price Target Rate of Return ID Image URL Company Name Price Timestamp Current Price Title Highlights Description 0 2020-07-30T00:00:00.000Z Short term BHLB Sell 8.3 -0.177134 tc_USvyP6AAPGJwApgABAACAAAD6CIg https://s.yimg.com/uc/fin/img/bearish-continuation-wedge.svg Berkshire Hills Bancorp, Inc. 1596225965000 9.96 Berkshire Hills Bancorp, Inc. - BHLB forms a Continuation Wedge (Bearish) pattern ['This stock has formed a pattern called Continuation Wedge (Bearish), providing a target price for the short-term in the range of 8.10 to 8.50.', 'The price recently crossed below its moving average signaling a new downtrend has been established.'] 1 2020-07-30T00:00:00.000Z Short term FISV Buy 107.82 0.070492 tc_USvyO_AAPKkQAGgABAACAAAD6CJg https://s.yimg.com/uc/fin/img/bullish-double-bottom.svg Fiserv, Inc. 1596225601000 99.79 Fiserv, Inc. - FISV forms a Double Bottom pattern ['This stock has formed a pattern called Double Bottom, providing a target price for the short-term in the range of 107.00 to 108.50.', 'The Intermediate-Term KST indicator has triggered a bullish signal by rising above its moving average.']","title":"Research"},{"location":"guide/research/#import","text":"from yahooquery import Research","title":"Import"},{"location":"guide/research/#create-instance","text":"r = Research ( username = 'username@yahoo.com' , password = password )","title":"Create Instance"},{"location":"guide/research/#research","text":"","title":"Research"},{"location":"guide/research/#reports","text":"Details Description : Retrieve research reports from Yahoo Finance Return : pandas.DataFrame Arguments Argument Description Type Default Required Options size Number of trades to return int 100 optional investment_rating Type of investment rating str or list None optional See below sector Sector str or list None optional See below report_type Report types str or list None optional See below report_date Date range str None optional See below trend { 'options' : [ 'Bearish' , 'Bullish' ], 'multiple' : True } sector { 'options' : [ 'Basic Materials' , 'Communication Services' , 'Consumer Cyclical' , 'Consumer Defensive' , 'Energy' , 'Financial Services' , 'Healthcare' , 'Industrial' , 'Real Estate' , 'Technology' , 'Utilities' ], 'multiple' : True } report_type { 'options' : [ 'Analyst Report' , 'Insider Activity' , 'Market Outlook' , 'Market Summary' , 'Market Update' , 'Portfolio Ideas' , 'Quantitative Report' , 'Sector Watch' , 'Stock Picks' , 'Technical Analysis' , 'Thematic Portfolio' , 'Top/Bottom Insider Activity' ], 'multiple' : True } report_date { 'options' : { 'Last Week' : 7 , 'Last Month' : 30 , 'Last Year' : 365 }, 'multiple' : False } Warning If using a str for the arguments that can either be a str or list , they have to be comma separated, i.e. sector='Financial Services, Technology' . Example r = Research ( username = 'username@yahoo.com' , password = password ) r . reports ( report_type = 'Analyst Report, Insider Activity' , report_date = 'Last Week' ) Data Report Date Report type Report title Tickers Sector Rating Investment Rating Target Price Earnings Estimates 0 2020-07-31T00:00:00.000Z Analyst Report CME Group is a futures and derivatives exchange and clearing company. It operates exchanges such as the Chicago Mercantile Exchange (CME), Chicago Board of Trade (CBOT), New York Mercantile Exchange (NYMEX), Commodity Exchange (COMEX) and the Kansas City Board of Trade (KCBT). In addition, CME offers a range of market data and information services. CME shares are a component of the S&P 500. ['CME'] ['Financial Services'] Maintained Bullish Decreased Decreased 1 2020-07-31T00:00:00.000Z Analyst Report Mastercard operates the world's second-largest electronic payments network, providing processing services and payment product platforms, including credit, debit, ATM, prepaid and commercial payments under the Mastercard, Maestro, and Cirrus brands. Mastercard went public in 2006 and is a member of the S&P 500. ['MA'] ['Financial Services'] Maintained Bullish Increased Decreased 2 2020-07-31T00:00:00.000Z Analyst Report Blackstone Group is one of the world's leading managers of alternative assets, including private equity, real estate, hedge funds, credit-oriented funds, and closed-end mutual funds. In recent years, Blackstone has rapidly grown its fee-earning assets under management, and its assets are relatively well balanced among private equity, real estate, hedge funds, and credit. The company converted from a publicly traded partnership to a corporation on July 1, 2019. ['BX'] ['Financial Services'] Maintained Bullish Maintained Decreased 3 2020-07-31T00:00:00.000Z Analyst Report Northrop Grumman is a leading global defense contractor, providing systems integration, defense electronics, information technology, and advanced aircraft and space technology. The shares are a component of the S&P 500. The company has 90,000 employees. ['NOC'] ['Industrials'] Maintained Bullish Maintained Increased 4 2020-07-31T00:00:00.000Z Analyst Report Starbucks is a leading retailer of fresh-brewed coffee and branded merchandise. Its brands include Starbucks, Tazo Tea, and Frappuccino. With a market cap of more than $90 billion, SBUX shares are generally considered large-cap growth. ['SBUX'] ['Consumer Cyclical'] Maintained Bullish Maintained Decreased","title":"reports"},{"location":"guide/research/#trades","text":"Details Description : Retrieve trade ideas from Yahoo Finance Return : pandas.DataFrame Arguments Argument Description Type Default Required Options size Number of trades to return int 100 optional trend Type of investment rating str or list None optional See below sector Sector str or list None optional See below term Term length (short, mid, long) str or list None optional See below startdatetime Date range str None optional See below trend { 'options' : [ 'Bearish' , 'Bullish' ], 'multiple' : True } sector { 'options' : [ 'Basic Materials' , 'Communication Services' , 'Consumer Cyclical' , 'Consumer Defensive' , 'Energy' , 'Financial Services' , 'Healthcare' , 'Industrial' , 'Real Estate' , 'Technology' , 'Utilities' ], 'multiple' : True } term { 'options' : [ 'Short term' , 'Mid term' , 'Long term' ], 'multiple' : True } startdatetime { 'options' : { 'Last Week' : 7 , 'Last Month' : 30 , 'Last Year' : 365 }, 'multiple' : False } Warning If using a str for the arguments that can either be a str or list , they have to be comma separated, i.e. sector='Financial Services, Technology' . Example r = Research ( username = 'username@yahoo.com' , password = password ) r . trades ( sector = [ 'Financial Services' , 'Technology' ], term = 'Short term' , startdatetime = 'Last Week' ) Data Idea Date Term Ticker Rating Price Target Rate of Return ID Image URL Company Name Price Timestamp Current Price Title Highlights Description 0 2020-07-30T00:00:00.000Z Short term BHLB Sell 8.3 -0.177134 tc_USvyP6AAPGJwApgABAACAAAD6CIg https://s.yimg.com/uc/fin/img/bearish-continuation-wedge.svg Berkshire Hills Bancorp, Inc. 1596225965000 9.96 Berkshire Hills Bancorp, Inc. - BHLB forms a Continuation Wedge (Bearish) pattern ['This stock has formed a pattern called Continuation Wedge (Bearish), providing a target price for the short-term in the range of 8.10 to 8.50.', 'The price recently crossed below its moving average signaling a new downtrend has been established.'] 1 2020-07-30T00:00:00.000Z Short term FISV Buy 107.82 0.070492 tc_USvyO_AAPKkQAGgABAACAAAD6CJg https://s.yimg.com/uc/fin/img/bullish-double-bottom.svg Fiserv, Inc. 1596225601000 99.79 Fiserv, Inc. - FISV forms a Double Bottom pattern ['This stock has formed a pattern called Double Bottom, providing a target price for the short-term in the range of 107.00 to 108.50.', 'The Intermediate-Term KST indicator has triggered a bullish signal by rising above its moving average.']","title":"trades"},{"location":"guide/screener/","text":"Currently, the Screener class allows the user to retrieve predefined screeners. Future versions will eventually allow for users to create screeners on the fly as well as utilize their own screeners they've created on Yahoo Finance. Import \u00b6 from yahooquery import Screener Create Instance \u00b6 s = Screener () Screener \u00b6 available_screeners \u00b6 Details Description : Return list of predefined screeners available to pass to get_screeners Return : dict Example s = Screener () s . available_screeners Data [ 'accident_health_insurance' , 'advertising_agencies' , 'aerospace_defense_major_diversified' , 'aerospace_defense_products_services' , 'aggressive_small_caps' , 'agricultural_chemicals' , 'air_delivery_freight_services' , 'air_services_other' , 'all_cryptocurrencies_au' , 'all_cryptocurrencies_ca' , 'all_cryptocurrencies_eu' , 'all_cryptocurrencies_gb' , 'all_cryptocurrencies_in' , 'all_cryptocurrencies_us' , 'aluminum' , 'apparel_stores' , 'appliances' , 'application_software' , 'asset_management' , 'auto_dealerships' , 'auto_manufacturers_major' , 'auto_parts' , 'auto_parts_stores' , 'auto_parts_wholesale' , 'basic_materials' , 'basic_materials_wholesale' , 'beverages_brewers' , 'beverages_soft_drinks' , 'beverages_wineries_distillers' , 'biotechnology' , 'broadcasting_radio' , 'broadcasting_tv' , 'building_materials_wholesale' , 'business_equipment' , 'business_services' , 'business_software_services' , 'catalog_mail_order_houses' , 'catv_systems' , 'cement' , 'chemicals_major_diversified' , 'cigarettes' , 'cleaning_products' , 'closedend_fund_debt' , 'closedend_fund_equity' , 'closedend_fund_foreign' , 'communication_equipment' , 'computer_based_systems' , 'computer_peripherals' , 'computers_wholesale' , 'confectioners' , 'conglomerates' , 'conservative_foreign_funds' , 'consumer_defensive' , 'consumer_goods' , 'consumer_services' , 'copper' , 'credit_services' , 'dairy_products' , 'data_storage_devices' , 'day_gainers' , 'day_gainers_americas' , 'day_gainers_asia' , 'day_gainers_au' , 'day_gainers_br' , 'day_gainers_ca' , 'day_gainers_de' , 'day_gainers_dji' , 'day_gainers_es' , 'day_gainers_europe' , 'day_gainers_fr' , 'day_gainers_gb' , 'day_gainers_hk' , 'day_gainers_in' , 'day_gainers_it' , 'day_gainers_ndx' , 'day_gainers_nz' , 'day_gainers_sg' , 'day_losers' , 'day_losers_americas' , 'day_losers_asia' , 'day_losers_au' , 'day_losers_br' , 'day_losers_ca' , 'day_losers_de' , 'day_losers_dji' , 'day_losers_es' , 'day_losers_europe' , 'day_losers_fr' , 'day_losers_gb' , 'day_losers_hk' , 'day_losers_in' , 'day_losers_it' , 'day_losers_ndx' , 'day_losers_nz' , 'day_losers_sg' , 'department_stores' , 'diagnostic_substances' , 'discount_variety_stores' , 'diversified_communication_services' , 'diversified_computer_systems' , 'diversified_electronics' , 'diversified_investments' , 'diversified_machinery' , 'diversified_utilities' , 'drug_delivery' , 'drug_manufacturers_major' , 'drug_manufacturers_other' , 'drug_related_products' , 'drug_stores' , 'drugs_generic' , 'drugs_wholesale' , 'education_training_services' , 'electric_utilities' , 'electronic_equipment' , 'electronics_stores' , 'electronics_wholesale' , 'entertainment_diversified' , 'fair_value_screener' , 'farm_construction_machinery' , 'farm_products' , 'financial' , 'food_major_diversified' , 'food_wholesale' , 'foreign_money_center_banks' , 'foreign_regional_banks' , 'foreign_utilities' , 'gaming_activities' , 'gas_utilities' , 'general_building_materials' , 'general_contractors' , 'general_entertainment' , 'gold' , 'grocery_stores' , 'growth_technology_stocks' , 'health_care_plans' , 'healthcare' , 'healthcare_information_services' , 'heavy_construction' , 'high_yield_bond' , 'home_furnishing_stores' , 'home_furnishings_fixtures' , 'home_health_care' , 'home_improvement_stores' , 'hospitals' , 'housewares_accessories' , 'independent_oil_gas' , 'industrial_electrical_equipment' , 'industrial_equipment_components' , 'industrial_equipment_wholesale' , 'industrial_goods' , 'industrial_metals_minerals' , 'information_delivery_services' , 'information_technology_services' , 'insurance_brokers' , 'internet_information_providers' , 'internet_service_providers' , 'internet_software_services' , 'investment_brokerage_national' , 'investment_brokerage_regional' , 'jewelry_stores' , 'life_insurance' , 'lodging' , 'long_distance_carriers' , 'longterm_care_facilities' , 'lumber_wood_production' , 'machine_tools_accessories' , 'major_airlines' , 'major_integrated_oil_gas' , 'management_services' , 'marketing_services' , 'meat_products' , 'medical_appliances_equipment' , 'medical_equipment_wholesale' , 'medical_instruments_supplies' , 'medical_laboratories_research' , 'mega_cap_hc' , 'metal_fabrication' , 'money_center_banks' , 'mortgage_investment' , 'most_actives' , 'most_actives_americas' , 'most_actives_asia' , 'most_actives_au' , 'most_actives_br' , 'most_actives_ca' , 'most_actives_de' , 'most_actives_dji' , 'most_actives_es' , 'most_actives_europe' , 'most_actives_fr' , 'most_actives_gb' , 'most_actives_hk' , 'most_actives_in' , 'most_actives_it' , 'most_actives_ndx' , 'most_actives_nz' , 'most_actives_sg' , 'most_watched_tickers' , 'movie_production_theaters' , 'ms_basic_materials' , 'ms_communication_services' , 'ms_consumer_cyclical' , 'ms_consumer_defensive' , 'ms_energy' , 'ms_financial_services' , 'ms_healthcare' , 'ms_industrials' , 'ms_real_estate' , 'ms_technology' , 'ms_utilities' , 'multimedia_graphics_software' , 'networking_communication_devices' , 'nonmetallic_mineral_mining' , 'office_supplies' , 'oil_gas_drilling_exploration' , 'oil_gas_equipment_services' , 'oil_gas_pipelines' , 'oil_gas_refining_marketing' , 'packaging_containers' , 'paper_paper_products' , 'personal_products' , 'personal_services' , 'photographic_equipment_supplies' , 'pollution_treatment_controls' , 'portfolio_anchors' , 'printed_circuit_boards' , 'processed_packaged_goods' , 'processing_systems_products' , 'property_casualty_insurance' , 'property_management' , 'publishing_books' , 'publishing_newspapers' , 'publishing_periodicals' , 'railroads' , 'real_estate_development' , 'recreational_goods_other' , 'recreational_vehicles' , 'regional_airlines' , 'regional_midatlantic_banks' , 'regional_midwest_banks' , 'regional_northeast_banks' , 'regional_pacific_banks' , 'regional_southeast_banks' , 'regional_southwest_banks' , 'reit_diversified' , 'reit_healthcare_facilities' , 'reit_hotel_motel' , 'reit_industrial' , 'reit_office' , 'reit_residential' , 'reit_retail' , 'rental_leasing_services' , 'research_services' , 'residential_construction' , 'resorts_casinos' , 'restaurants' , 'rubber_plastics' , 'savings_loans' , 'scientific_technical_instruments' , 'security_protection_services' , 'security_software_services' , 'semiconductor_broad_line' , 'semiconductor_equipment_materials' , 'semiconductor_integrated_circuits' , 'semiconductor_memory_chips' , 'semiconductor_specialized' , 'services' , 'shipping' , 'silver' , 'small_cap_gainers' , 'small_tools_accessories' , 'solid_large_growth_funds' , 'solid_midcap_growth_funds' , 'specialized_health_services' , 'specialty_chemicals' , 'specialty_eateries' , 'specialty_retail_other' , 'sporting_activities' , 'sporting_goods' , 'sporting_goods_stores' , 'staffing_outsourcing_services' , 'steel_iron' , 'surety_title_insurance' , 'synthetics' , 'technical_services' , 'technical_system_software' , 'technology' , 'telecom_services_domestic' , 'telecom_services_foreign' , 'textile_apparel_clothing' , 'textile_apparel_footwear_accessories' , 'textile_industrial' , 'tobacco_products_other' , 'top_energy_us' , 'top_etfs' , 'top_etfs_hk' , 'top_etfs_in' , 'top_etfs_us' , 'top_iv_options_us' , 'top_mutual_funds' , 'top_mutual_funds_au' , 'top_mutual_funds_br' , 'top_mutual_funds_ca' , 'top_mutual_funds_de' , 'top_mutual_funds_es' , 'top_mutual_funds_fr' , 'top_mutual_funds_gb' , 'top_mutual_funds_hk' , 'top_mutual_funds_in' , 'top_mutual_funds_it' , 'top_mutual_funds_nz' , 'top_mutual_funds_sg' , 'top_mutual_funds_us' , 'top_options_implied_volatality' , 'top_options_open_interest' , 'toy_hobby_stores' , 'toys_games' , 'trucking' , 'trucks_other_vehicles' , 'undervalued_growth_stocks' , 'undervalued_large_caps' , 'utilities' , 'waste_management' , 'water_utilities' , 'wireless_communications' ] get_screeners \u00b6 Details Description : List of securities from a predefined screener(s) Return : pandas.DataFrame Arguments Argument Type Default Required Options screen_ids str or list None Required See available screeners count int 25 optional Example s = Screener () s . get_screeners ([ 'most_actives' , 'day_gainers' ], 5 ) Data { 'most_actives' : { 'id' : '437465ef-980e-4d8c-a860-de7cbfbab373' , 'title' : 'Most Actives - US' , 'description' : 'Stocks ordered in descending order by intraday trade volume' , 'canonicalName' : 'MOST_ACTIVES' , 'criteriaMeta' : { 'size' : 5 , 'offset' : 0 , 'sortField' : 'dayvolume' , 'sortType' : 'DESC' , 'quoteType' : 'EQUITY' , 'topOperator' : 'AND' , 'criteria' : [{ 'field' : 'region' , 'operators' : [ 'EQ' ], 'values' : [], 'labelsSelected' : [ 53 ] }, { 'field' : 'intradaymarketcap' , 'operators' : [ 'EQ' ], 'values' : [], 'labelsSelected' : [ 1 , 2 , 3 ] }, { 'field' : 'dayvolume' , 'operators' : [ 'GT' ], 'values' : [ 5000000 ], 'labelsSelected' : [] }] }, 'rawCriteria' : '{\"offset\":0,\"size\":5,\"sortField\":\"dayvolume\",\"sortType\":\"DESC\",\"quoteType\":\"EQUITY\",\"query\":{\"operator\":\"AND\",\"operands\":[{\"operator\":\"eq\",\"operands\":[\"region\",\"us\"]},{\"operator\":\"or\",\"operands\":[{\"operator\":\"BTWN\",\"operands\":[\"intradaymarketcap\",2000000000,10000000000]},{\"operator\":\"BTWN\",\"operands\":[\"intradaymarketcap\",10000000000,100000000000]},{\"operator\":\"GT\",\"operands\":[\"intradaymarketcap\",100000000000]}]},{\"operator\":\"gt\",\"operands\":[\"dayvolume\",5000000]}]}}' , 'start' : 0 , 'count' : 5 , 'total' : 203 , 'quotes' : [{ 'language' : 'en-US' , 'region' : 'US' , 'quoteType' : 'EQUITY' , 'quoteSourceName' : 'Nasdaq Real Time Price' , 'triggerable' : False , 'currency' : 'USD' , 'firstTradeDateMilliseconds' : - 252322200000 , 'priceHint' : 2 , 'postMarketChangePercent' : 0.0 , 'postMarketTime' : 1596234164 , 'postMarketPrice' : 6.08 , 'postMarketChange' : 0.0 , 'regularMarketChange' : - 0.19000006 , 'regularMarketTime' : 1596225602 , 'regularMarketPrice' : 6.07 , 'regularMarketDayHigh' : 6.29 , 'regularMarketDayRange' : '6.0 - 6.29' , 'regularMarketDayLow' : 6.0 , 'regularMarketVolume' : 142268197 , 'regularMarketPreviousClose' : 6.26 , 'bid' : 6.07 , 'ask' : 6.08 , 'bidSize' : 473 , 'askSize' : 280 , 'exchange' : 'NYQ' , 'market' : 'us_market' , 'messageBoardId' : 'finmb_177031' , 'fullExchangeName' : 'NYSE' , 'shortName' : 'General Electric Company' , 'longName' : 'General Electric Company' , 'financialCurrency' : 'USD' , 'regularMarketOpen' : 6.25 , 'averageDailyVolume3Month' : 103055092 , 'averageDailyVolume10Day' : 86456425 , 'fiftyTwoWeekLowChange' : 0.59000015 , 'fiftyTwoWeekLowChangePercent' : 0.107664265 , 'fiftyTwoWeekRange' : '5.48 - 13.26' , 'fiftyTwoWeekHighChange' : - 7.19 , 'fiftyTwoWeekHighChangePercent' : - 0.5422323 , 'fiftyTwoWeekLow' : 5.48 , 'fiftyTwoWeekHigh' : 13.26 , 'dividendDate' : 1595808000 , 'earningsTimestamp' : 1603873800 , 'earningsTimestampStart' : 1603873800 , 'earningsTimestampEnd' : 1603873800 , 'trailingAnnualDividendRate' : 0.04 , 'trailingAnnualDividendYield' : 0.006389776 , 'marketState' : 'POST' , 'epsTrailingTwelveMonths' : - 0.561 , 'epsForward' : 0.38 , 'sharesOutstanding' : 8747089920 , 'bookValue' : 3.846 , 'fiftyDayAverage' : 6.9014287 , 'fiftyDayAverageChange' : - 0.8314285 , 'fiftyDayAverageChangePercent' : - 0.12047195 , 'twoHundredDayAverage' : 8.269568 , 'twoHundredDayAverageChange' : - 2.1995683 , 'twoHundredDayAverageChangePercent' : - 0.26598343 , 'marketCap' : 53094838272 , 'forwardPE' : 15.973685 , 'priceToBook' : 1.5782632 , 'sourceInterval' : 15 , 'exchangeDataDelayedBy' : 0 , 'exchangeTimezoneName' : 'America/New_York' , 'exchangeTimezoneShortName' : 'EDT' , 'gmtOffSetMilliseconds' : - 14400000 , 'esgPopulated' : False , 'tradeable' : True , 'regularMarketChangePercent' : - 3.0351446 , 'displayName' : 'General Electric' , 'symbol' : 'GE' }, { 'language' : 'en-US' , 'region' : 'US' , 'quoteType' : 'EQUITY' , 'quoteSourceName' : 'Nasdaq Real Time Price' , 'triggerable' : False , 'currency' : 'USD' , 'firstTradeDateMilliseconds' : 757607400000 , 'priceHint' : 4 , 'postMarketChangePercent' : - 0.7314493 , 'postMarketTime' : 1596234026 , 'postMarketPrice' : 4.75 , 'postMarketChange' : - 0.034999847 , 'regularMarketChange' : 0.3300004 , 'regularMarketTime' : 1596225601 , 'regularMarketPrice' : 4.78 , 'regularMarketDayHigh' : 4.95 , 'regularMarketDayRange' : '4.635 - 4.95' , 'regularMarketDayLow' : 4.635 , 'regularMarketVolume' : 117123629 , 'regularMarketPreviousClose' : 4.45 , 'bid' : 4.73 , 'ask' : 4.76 , 'bidSize' : 369 , 'askSize' : 400 , 'exchange' : 'NYQ' , 'market' : 'us_market' , 'messageBoardId' : 'finmb_205573' , 'fullExchangeName' : 'NYSE' , 'shortName' : 'Nokia Corporation Sponsored' , 'longName' : 'Nokia Corporation' , 'financialCurrency' : 'EUR' , 'regularMarketOpen' : 4.86 , 'averageDailyVolume3Month' : 30349318 , 'averageDailyVolume10Day' : 27909325 , 'fiftyTwoWeekLowChange' : 2.4400003 , 'fiftyTwoWeekLowChangePercent' : 1.0427352 , 'fiftyTwoWeekRange' : '2.34 - 5.45' , 'fiftyTwoWeekHighChange' : - 0.6699996 , 'fiftyTwoWeekHighChangePercent' : - 0.12293571 , 'fiftyTwoWeekLow' : 2.34 , 'fiftyTwoWeekHigh' : 5.45 , 'dividendDate' : 1565654400 , 'trailingAnnualDividendRate' : 0.221 , 'trailingAnnualDividendYield' : 0.049662925 , 'marketState' : 'POST' , 'epsTrailingTwelveMonths' : - 0.192 , 'epsForward' : 0.31 , 'sharesOutstanding' : 5618930176 , 'bookValue' : 3.119 , 'fiftyDayAverage' : 4.3285713 , 'fiftyDayAverageChange' : 0.4514289 , 'fiftyDayAverageChangePercent' : 0.10429051 , 'twoHundredDayAverage' : 3.8270504 , 'twoHundredDayAverageChange' : 0.95294976 , 'twoHundredDayAverageChangePercent' : 0.24900371 , 'marketCap' : 25653735424 , 'forwardPE' : 15.419355 , 'priceToBook' : 1.5325426 , 'sourceInterval' : 15 , 'exchangeDataDelayedBy' : 0 , 'exchangeTimezoneName' : 'America/New_York' , 'exchangeTimezoneShortName' : 'EDT' , 'gmtOffSetMilliseconds' : - 14400000 , 'esgPopulated' : False , 'tradeable' : True , 'regularMarketChangePercent' : 7.4157395 , 'displayName' : 'Nokia' , 'symbol' : 'NOK' }, { 'language' : 'en-US' , 'region' : 'US' , 'quoteType' : 'EQUITY' , 'quoteSourceName' : 'Delayed Quote' , 'triggerable' : False , 'currency' : 'USD' , 'firstTradeDateMilliseconds' : 76253400000 , 'priceHint' : 2 , 'postMarketChangePercent' : - 0.30257156 , 'postMarketTime' : 1596234024 , 'postMarketPrice' : 6.59 , 'postMarketChange' : - 0.01999998 , 'regularMarketChange' : - 0.12999964 , 'regularMarketTime' : 1596225883 , 'regularMarketPrice' : 6.61 , 'regularMarketDayHigh' : 6.9 , 'regularMarketDayRange' : '6.52 - 6.9' , 'regularMarketDayLow' : 6.52 , 'regularMarketVolume' : 115075556 , 'regularMarketPreviousClose' : 6.74 , 'bid' : 6.6 , 'ask' : 6.6 , 'bidSize' : 292 , 'askSize' : 18 , 'exchange' : 'NYQ' , 'market' : 'us_market' , 'messageBoardId' : 'finmb_106335' , 'fullExchangeName' : 'NYSE' , 'shortName' : 'Ford Motor Company' , 'longName' : 'Ford Motor Company' , 'financialCurrency' : 'USD' , 'regularMarketOpen' : 6.89 , 'averageDailyVolume3Month' : 87287634 , 'averageDailyVolume10Day' : 65583212 , 'fiftyTwoWeekLowChange' : 2.65 , 'fiftyTwoWeekLowChangePercent' : 0.66919196 , 'fiftyTwoWeekRange' : '3.96 - 9.65' , 'fiftyTwoWeekHighChange' : - 3.0399995 , 'fiftyTwoWeekHighChangePercent' : - 0.31502587 , 'fiftyTwoWeekLow' : 3.96 , 'fiftyTwoWeekHigh' : 9.65 , 'dividendDate' : 1583107200 , 'earningsTimestamp' : 1603814400 , 'earningsTimestampStart' : 1603814400 , 'earningsTimestampEnd' : 1603814400 , 'trailingAnnualDividendRate' : 0.6 , 'trailingAnnualDividendYield' : 0.08902078 , 'marketState' : 'POST' , 'epsTrailingTwelveMonths' : - 0.781 , 'epsForward' : 0.52 , 'sharesOutstanding' : 3906190080 , 'bookValue' : 7.455 , 'fiftyDayAverage' : 6.393429 , 'fiftyDayAverageChange' : 0.21657133 , 'fiftyDayAverageChangePercent' : 0.03387405 , 'twoHundredDayAverage' : 6.3716545 , 'twoHundredDayAverageChange' : 0.23834562 , 'twoHundredDayAverageChangePercent' : 0.03740718 , 'marketCap' : 26288234496 , 'forwardPE' : 12.711539 , 'priceToBook' : 0.8866533 , 'sourceInterval' : 15 , 'exchangeDataDelayedBy' : 0 , 'exchangeTimezoneName' : 'America/New_York' , 'exchangeTimezoneShortName' : 'EDT' , 'gmtOffSetMilliseconds' : - 14400000 , 'esgPopulated' : False , 'tradeable' : True , 'regularMarketChangePercent' : - 1.9287779 , 'displayName' : 'Ford Motor' , 'symbol' : 'F' }, { 'language' : 'en-US' , 'region' : 'US' , 'quoteType' : 'EQUITY' , 'quoteSourceName' : 'Delayed Quote' , 'triggerable' : False , 'currency' : 'USD' , 'firstTradeDateMilliseconds' : 1555594200000 , 'priceHint' : 2 , 'postMarketChangePercent' : 1.6622913 , 'postMarketTime' : 1596234159 , 'postMarketPrice' : 34.86 , 'postMarketChange' : 0.5699997 , 'regularMarketChange' : 9.1 , 'regularMarketTime' : 1596225602 , 'regularMarketPrice' : 34.29 , 'regularMarketDayHigh' : 34.5 , 'regularMarketDayRange' : '31.0 - 34.5' , 'regularMarketDayLow' : 31.0 , 'regularMarketVolume' : 111167386 , 'regularMarketPreviousClose' : 25.19 , 'bid' : 34.69 , 'ask' : 34.7 , 'bidSize' : 13 , 'askSize' : 18 , 'exchange' : 'NYQ' , 'market' : 'us_market' , 'messageBoardId' : 'finmb_139264388' , 'fullExchangeName' : 'NYSE' , 'shortName' : 'Pinterest, Inc.' , 'longName' : 'Pinterest, Inc.' , 'financialCurrency' : 'USD' , 'regularMarketOpen' : 33.56 , 'averageDailyVolume3Month' : 13862671 , 'averageDailyVolume10Day' : 9896450 , 'fiftyTwoWeekLowChange' : 24.19 , 'fiftyTwoWeekLowChangePercent' : 2.3950496 , 'fiftyTwoWeekRange' : '10.1 - 36.83' , 'fiftyTwoWeekHighChange' : - 2.540001 , 'fiftyTwoWeekHighChangePercent' : - 0.06896554 , 'fiftyTwoWeekLow' : 10.1 , 'fiftyTwoWeekHigh' : 36.83 , 'earningsTimestamp' : 1596184200 , 'earningsTimestampStart' : 1603987200 , 'earningsTimestampEnd' : 1604332800 , 'marketState' : 'POST' , 'epsTrailingTwelveMonths' : - 2.743 , 'epsForward' : 0.05 , 'sharesOutstanding' : 403489984 , 'bookValue' : 3.332 , 'fiftyDayAverage' : 24.036858 , 'fiftyDayAverageChange' : 10.253143 , 'fiftyDayAverageChangePercent' : 0.4265592 , 'twoHundredDayAverage' : 20.366547 , 'twoHundredDayAverageChange' : 13.923454 , 'twoHundredDayAverageChangePercent' : 0.68364334 , 'marketCap' : 20109576192 , 'forwardPE' : 685.8 , 'priceToBook' : 10.291117 , 'sourceInterval' : 15 , 'exchangeDataDelayedBy' : 0 , 'exchangeTimezoneName' : 'America/New_York' , 'exchangeTimezoneShortName' : 'EDT' , 'gmtOffSetMilliseconds' : - 14400000 , 'esgPopulated' : False , 'tradeable' : True , 'regularMarketChangePercent' : 36.12545 , 'displayName' : 'Pinterest' , 'symbol' : 'PINS' }, { 'language' : 'en-US' , 'region' : 'US' , 'quoteType' : 'EQUITY' , 'quoteSourceName' : 'Delayed Quote' , 'triggerable' : True , 'currency' : 'USD' , 'firstTradeDateMilliseconds' : 345479400000 , 'priceHint' : 2 , 'postMarketChangePercent' : 0.55289054 , 'postMarketTime' : 1596234080 , 'postMarketPrice' : 427.39 , 'postMarketChange' : 2.350006 , 'regularMarketChange' : 40.28 , 'regularMarketTime' : 1596225602 , 'regularMarketPrice' : 425.04 , 'regularMarketDayHigh' : 425.66 , 'regularMarketDayRange' : '403.36 - 425.66' , 'regularMarketDayLow' : 403.36 , 'regularMarketVolume' : 91201476 , 'regularMarketPreviousClose' : 384.76 , 'bid' : 427.26 , 'ask' : 426.2 , 'bidSize' : 30 , 'askSize' : 31 , 'exchange' : 'NMS' , 'market' : 'us_market' , 'messageBoardId' : 'finmb_24937' , 'fullExchangeName' : 'NasdaqGS' , 'shortName' : 'Apple Inc.' , 'longName' : 'Apple Inc.' , 'financialCurrency' : 'USD' , 'regularMarketOpen' : 411.535 , 'averageDailyVolume3Month' : 34664412 , 'averageDailyVolume10Day' : 32670312 , 'fiftyTwoWeekLowChange' : 232.46 , 'fiftyTwoWeekLowChangePercent' : 1.2070827 , 'fiftyTwoWeekRange' : '192.58 - 425.66' , 'fiftyTwoWeekHighChange' : - 0.6199951 , 'fiftyTwoWeekHighChangePercent' : - 0.0014565501 , 'fiftyTwoWeekLow' : 192.58 , 'fiftyTwoWeekHigh' : 425.66 , 'dividendDate' : 1589414400 , 'earningsTimestamp' : 1596124800 , 'earningsTimestampStart' : 1603868340 , 'earningsTimestampEnd' : 1604304000 , 'trailingAnnualDividendRate' : 3.08 , 'trailingPE' : 32.236633 , 'trailingAnnualDividendYield' : 0.0080049895 , 'marketState' : 'POST' , 'epsTrailingTwelveMonths' : 13.185 , 'epsForward' : 14.97 , 'sharesOutstanding' : 4334329856 , 'bookValue' : 16.761 , 'fiftyDayAverage' : 369.66028 , 'fiftyDayAverageChange' : 55.37973 , 'fiftyDayAverageChangePercent' : 0.1498125 , 'twoHundredDayAverage' : 313.8948 , 'twoHundredDayAverageChange' : 111.1452 , 'twoHundredDayAverageChangePercent' : 0.35408422 , 'marketCap' : 1842263621632 , 'forwardPE' : 28.392786 , 'priceToBook' : 25.35887 , 'sourceInterval' : 15 , 'exchangeDataDelayedBy' : 0 , 'exchangeTimezoneName' : 'America/New_York' , 'exchangeTimezoneShortName' : 'EDT' , 'gmtOffSetMilliseconds' : - 14400000 , 'esgPopulated' : False , 'tradeable' : True , 'regularMarketChangePercent' : 10.468863 , 'displayName' : 'Apple' , 'symbol' : 'AAPL' }], 'predefinedScr' : True , 'versionId' : 6 }, 'day_gainers' : { 'id' : 'ec5bebb9-b7b2-4474-9e5c-3e258b61cbe6' , 'title' : 'Day Gainers - US' , 'description' : 'Stocks ordered in descending order by price percent change greater than 3% with respect to the previous close' , 'canonicalName' : 'DAY_GAINERS' , 'criteriaMeta' : { 'size' : 5 , 'offset' : 0 , 'sortField' : 'percentchange' , 'sortType' : 'DESC' , 'quoteType' : 'EQUITY' , 'topOperator' : 'AND' , 'criteria' : [{ 'field' : 'percentchange' , 'operators' : [ 'GT' ], 'values' : [ 3.0 ], 'labelsSelected' : [] }, { 'field' : 'region' , 'operators' : [ 'EQ' ], 'values' : [], 'labelsSelected' : [ 53 ] }, { 'field' : 'intradaymarketcap' , 'operators' : [ 'EQ' ], 'values' : [], 'labelsSelected' : [ 1 , 2 , 3 ] }, { 'field' : 'dayvolume' , 'operators' : [ 'GT' ], 'values' : [ 15000 ], 'labelsSelected' : [] }] }, 'rawCriteria' : '{\"offset\":0,\"size\":5,\"sortField\":\"percentchange\",\"sortType\":\"DESC\",\"quoteType\":\"EQUITY\",\"query\":{\"operator\":\"AND\",\"operands\":[{\"operator\":\"GT\",\"operands\":[\"percentchange\",3.0]},{\"operator\":\"eq\",\"operands\":[\"region\",\"us\"]},{\"operator\":\"or\",\"operands\":[{\"operator\":\"BTWN\",\"operands\":[\"intradaymarketcap\",2000000000,10000000000]},{\"operator\":\"BTWN\",\"operands\":[\"intradaymarketcap\",10000000000,100000000000]},{\"operator\":\"GT\",\"operands\":[\"intradaymarketcap\",100000000000]}]},{\"operator\":\"gt\",\"operands\":[\"dayvolume\",15000]}]}}' , 'start' : 0 , 'count' : 5 , 'total' : 107 , 'quotes' : [{ 'language' : 'en-US' , 'region' : 'US' , 'quoteType' : 'EQUITY' , 'quoteSourceName' : 'Delayed Quote' , 'triggerable' : False , 'currency' : 'USD' , 'firstTradeDateMilliseconds' : 1555594200000 , 'priceHint' : 2 , 'postMarketChangePercent' : 1.6622913 , 'postMarketTime' : 1596234159 , 'postMarketPrice' : 34.86 , 'postMarketChange' : 0.5699997 , 'regularMarketChange' : 9.1 , 'regularMarketTime' : 1596225602 , 'regularMarketPrice' : 34.29 , 'regularMarketDayHigh' : 34.5 , 'regularMarketDayRange' : '31.0 - 34.5' , 'regularMarketDayLow' : 31.0 , 'regularMarketVolume' : 111167386 , 'regularMarketPreviousClose' : 25.19 , 'bid' : 34.69 , 'ask' : 34.7 , 'bidSize' : 13 , 'askSize' : 18 , 'exchange' : 'NYQ' , 'market' : 'us_market' , 'messageBoardId' : 'finmb_139264388' , 'fullExchangeName' : 'NYSE' , 'shortName' : 'Pinterest, Inc.' , 'longName' : 'Pinterest, Inc.' , 'financialCurrency' : 'USD' , 'regularMarketOpen' : 33.56 , 'averageDailyVolume3Month' : 13862671 , 'averageDailyVolume10Day' : 9896450 , 'fiftyTwoWeekLowChange' : 24.19 , 'fiftyTwoWeekLowChangePercent' : 2.3950496 , 'fiftyTwoWeekRange' : '10.1 - 36.83' , 'fiftyTwoWeekHighChange' : - 2.540001 , 'fiftyTwoWeekHighChangePercent' : - 0.06896554 , 'fiftyTwoWeekLow' : 10.1 , 'fiftyTwoWeekHigh' : 36.83 , 'earningsTimestamp' : 1596184200 , 'earningsTimestampStart' : 1603987200 , 'earningsTimestampEnd' : 1604332800 , 'marketState' : 'POST' , 'epsTrailingTwelveMonths' : - 2.743 , 'epsForward' : 0.05 , 'sharesOutstanding' : 403489984 , 'bookValue' : 3.332 , 'fiftyDayAverage' : 24.036858 , 'fiftyDayAverageChange' : 10.253143 , 'fiftyDayAverageChangePercent' : 0.4265592 , 'twoHundredDayAverage' : 20.366547 , 'twoHundredDayAverageChange' : 13.923454 , 'twoHundredDayAverageChangePercent' : 0.68364334 , 'marketCap' : 20109576192 , 'forwardPE' : 685.8 , 'priceToBook' : 10.291117 , 'sourceInterval' : 15 , 'exchangeDataDelayedBy' : 0 , 'exchangeTimezoneName' : 'America/New_York' , 'exchangeTimezoneShortName' : 'EDT' , 'gmtOffSetMilliseconds' : - 14400000 , 'esgPopulated' : False , 'tradeable' : True , 'regularMarketChangePercent' : 36.12545 , 'displayName' : 'Pinterest' , 'symbol' : 'PINS' }, { 'language' : 'en-US' , 'region' : 'US' , 'quoteType' : 'EQUITY' , 'quoteSourceName' : 'Delayed Quote' , 'triggerable' : False , 'currency' : 'USD' , 'firstTradeDateMilliseconds' : 1234535400000 , 'priceHint' : 4 , 'regularMarketChange' : 0.1509 , 'regularMarketTime' : 1596222445 , 'regularMarketPrice' : 0.7009 , 'regularMarketDayHigh' : 1.5 , 'regularMarketDayRange' : '0.7009 - 1.5' , 'regularMarketDayLow' : 0.7009 , 'regularMarketVolume' : 885738 , 'regularMarketPreviousClose' : 0.55 , 'bid' : 0.0 , 'ask' : 0.0 , 'bidSize' : 0 , 'askSize' : 0 , 'exchange' : 'PNK' , 'market' : 'us_market' , 'messageBoardId' : 'finmb_92126' , 'fullExchangeName' : 'Other OTC' , 'shortName' : 'GRUPO FINANCIERO INBURSA SAB DE' , 'longName' : 'Grupo Financiero Inbursa, S.A.B. de C.V.' , 'financialCurrency' : 'MXN' , 'regularMarketOpen' : 0.7144 , 'averageDailyVolume3Month' : 9864 , 'averageDailyVolume10Day' : 28712 , 'fiftyTwoWeekLowChange' : 0.20090002 , 'fiftyTwoWeekLowChangePercent' : 0.40180004 , 'fiftyTwoWeekRange' : '0.5 - 1.5' , 'fiftyTwoWeekHighChange' : - 0.7991 , 'fiftyTwoWeekHighChangePercent' : - 0.5327333 , 'fiftyTwoWeekLow' : 0.5 , 'fiftyTwoWeekHigh' : 1.5 , 'trailingAnnualDividendRate' : 0.024 , 'trailingPE' : 4.8673615 , 'trailingAnnualDividendYield' : 0.043636363 , 'marketState' : 'POST' , 'epsTrailingTwelveMonths' : 0.144 , 'sharesOutstanding' : 6594800128 , 'bookValue' : 1.078 , 'fiftyDayAverage' : 0.7088571 , 'fiftyDayAverageChange' : - 0.007957101 , 'fiftyDayAverageChangePercent' : - 0.011225253 , 'twoHundredDayAverage' : 0.83330935 , 'twoHundredDayAverageChange' : - 0.13240933 , 'twoHundredDayAverageChangePercent' : - 0.15889578 , 'marketCap' : 6064775680 , 'priceToBook' : 0.6501856 , 'sourceInterval' : 15 , 'exchangeDataDelayedBy' : 0 , 'exchangeTimezoneName' : 'America/New_York' , 'exchangeTimezoneShortName' : 'EDT' , 'gmtOffSetMilliseconds' : - 14400000 , 'esgPopulated' : False , 'tradeable' : True , 'regularMarketChangePercent' : 27.436363 , 'displayName' : 'Grupo Financiero Inbursa' , 'symbol' : 'GPFOF' }, { 'language' : 'en-US' , 'region' : 'US' , 'quoteType' : 'EQUITY' , 'quoteSourceName' : 'Nasdaq Real Time Price' , 'triggerable' : True , 'currency' : 'USD' , 'firstTradeDateMilliseconds' : 1524835800000 , 'priceHint' : 2 , 'postMarketChangePercent' : 0.000967242 , 'postMarketTime' : 1596225642 , 'postMarketPrice' : 103.331 , 'postMarketChange' : 0.000999451 , 'regularMarketChange' : 19.440002 , 'regularMarketTime' : 1596225602 , 'regularMarketPrice' : 103.33 , 'regularMarketDayHigh' : 105.98 , 'regularMarketDayRange' : '94.75 - 105.98' , 'regularMarketDayLow' : 94.75 , 'regularMarketVolume' : 739795 , 'regularMarketPreviousClose' : 83.89 , 'bid' : 96.0 , 'ask' : 103.23 , 'bidSize' : 8 , 'askSize' : 9 , 'exchange' : 'NMS' , 'market' : 'us_market' , 'messageBoardId' : 'finmb_557929974' , 'fullExchangeName' : 'NasdaqGS' , 'shortName' : 'Goosehead Insurance, Inc.' , 'longName' : 'Goosehead Insurance, Inc' , 'financialCurrency' : 'USD' , 'regularMarketOpen' : 96.6 , 'averageDailyVolume3Month' : 182756 , 'averageDailyVolume10Day' : 100200 , 'fiftyTwoWeekLowChange' : 66.07001 , 'fiftyTwoWeekLowChangePercent' : 1.7732155 , 'fiftyTwoWeekRange' : '37.26 - 105.98' , 'fiftyTwoWeekHighChange' : - 2.6500015 , 'fiftyTwoWeekHighChangePercent' : - 0.025004731 , 'fiftyTwoWeekLow' : 37.26 , 'fiftyTwoWeekHigh' : 105.98 , 'dividendDate' : 1554076800 , 'earningsTimestamp' : 1596124800 , 'earningsTimestampStart' : 1604041140 , 'earningsTimestampEnd' : 1604390400 , 'trailingAnnualDividendRate' : 0.0 , 'trailingPE' : 543.8421 , 'trailingAnnualDividendYield' : 0.0 , 'marketState' : 'POST' , 'epsTrailingTwelveMonths' : 0.19 , 'epsForward' : 0.75 , 'sharesOutstanding' : 17135800 , 'bookValue' : 0.072 , 'fiftyDayAverage' : 77.440285 , 'fiftyDayAverageChange' : 25.889717 , 'fiftyDayAverageChangePercent' : 0.33431846 , 'twoHundredDayAverage' : 58.403347 , 'twoHundredDayAverageChange' : 44.926655 , 'twoHundredDayAverageChangePercent' : 0.76924795 , 'marketCap' : 3862465024 , 'forwardPE' : 137.77333 , 'priceToBook' : 1435.1389 , 'sourceInterval' : 15 , 'exchangeDataDelayedBy' : 0 , 'exchangeTimezoneName' : 'America/New_York' , 'exchangeTimezoneShortName' : 'EDT' , 'gmtOffSetMilliseconds' : - 14400000 , 'esgPopulated' : False , 'tradeable' : True , 'regularMarketChangePercent' : 23.173206 , 'displayName' : 'Goosehead Insurance' , 'symbol' : 'GSHD' }, { 'language' : 'en-US' , 'region' : 'US' , 'quoteType' : 'EQUITY' , 'quoteSourceName' : 'Delayed Quote' , 'triggerable' : True , 'currency' : 'USD' , 'firstTradeDateMilliseconds' : 1469712600000 , 'priceHint' : 2 , 'postMarketChangePercent' : - 2.832169 , 'postMarketTime' : 1596225980 , 'postMarketPrice' : 189.3801 , 'postMarketChange' : - 5.5198975 , 'regularMarketChange' : 28.98999 , 'regularMarketTime' : 1596225601 , 'regularMarketPrice' : 194.9 , 'regularMarketDayHigh' : 194.94 , 'regularMarketDayRange' : '169.0 - 194.94' , 'regularMarketDayLow' : 169.0 , 'regularMarketVolume' : 337089 , 'regularMarketPreviousClose' : 165.91 , 'bid' : 192.0 , 'ask' : 199.11 , 'bidSize' : 10 , 'askSize' : 10 , 'exchange' : 'NMS' , 'market' : 'us_market' , 'messageBoardId' : 'finmb_216477057' , 'fullExchangeName' : 'NasdaqGS' , 'shortName' : 'Kinsale Capital Group, Inc.' , 'longName' : 'Kinsale Capital Group, Inc.' , 'financialCurrency' : 'USD' , 'regularMarketOpen' : 169.0 , 'averageDailyVolume3Month' : 157907 , 'averageDailyVolume10Day' : 95400 , 'fiftyTwoWeekLowChange' : 113.96999 , 'fiftyTwoWeekLowChangePercent' : 1.4082539 , 'fiftyTwoWeekRange' : '80.93 - 194.94' , 'fiftyTwoWeekHighChange' : - 0.040008545 , 'fiftyTwoWeekHighChangePercent' : - 0.00020523518 , 'fiftyTwoWeekLow' : 80.93 , 'fiftyTwoWeekHigh' : 194.94 , 'dividendDate' : 1591920000 , 'earningsTimestamp' : 1596124800 , 'earningsTimestampStart' : 1603987200 , 'earningsTimestampEnd' : 1604332800 , 'trailingAnnualDividendRate' : 0.33 , 'trailingPE' : 87.91159 , 'trailingAnnualDividendYield' : 0.0019890303 , 'marketState' : 'POST' , 'epsTrailingTwelveMonths' : 2.217 , 'epsForward' : 3.22 , 'sharesOutstanding' : 22254600 , 'bookValue' : 18.034 , 'fiftyDayAverage' : 157.56015 , 'fiftyDayAverageChange' : 37.339844 , 'fiftyDayAverageChangePercent' : 0.23698786 , 'twoHundredDayAverage' : 129.625 , 'twoHundredDayAverageChange' : 65.274994 , 'twoHundredDayAverageChangePercent' : 0.50356793 , 'marketCap' : 4337421312 , 'forwardPE' : 60.527946 , 'priceToBook' : 10.8073635 , 'sourceInterval' : 15 , 'exchangeDataDelayedBy' : 0 , 'exchangeTimezoneName' : 'America/New_York' , 'exchangeTimezoneShortName' : 'EDT' , 'gmtOffSetMilliseconds' : - 14400000 , 'esgPopulated' : False , 'tradeable' : True , 'regularMarketChangePercent' : 17.473322 , 'displayName' : 'Kinsale Capital' , 'symbol' : 'KNSL' }, { 'language' : 'en-US' , 'region' : 'US' , 'quoteType' : 'EQUITY' , 'quoteSourceName' : 'Nasdaq Real Time Price' , 'triggerable' : True , 'currency' : 'USD' , 'firstTradeDateMilliseconds' : 791735400000 , 'priceHint' : 2 , 'postMarketChangePercent' : 2.8466468 , 'postMarketTime' : 1596230968 , 'postMarketPrice' : 56.0 , 'postMarketChange' : 1.5499992 , 'regularMarketChange' : 7.1399994 , 'regularMarketTime' : 1596225602 , 'regularMarketPrice' : 54.45 , 'regularMarketDayHigh' : 54.53 , 'regularMarketDayRange' : '49.02 - 54.53' , 'regularMarketDayLow' : 49.02 , 'regularMarketVolume' : 1196752 , 'regularMarketPreviousClose' : 47.31 , 'bid' : 54.41 , 'ask' : 54.42 , 'bidSize' : 8 , 'askSize' : 8 , 'exchange' : 'NMS' , 'market' : 'us_market' , 'messageBoardId' : 'finmb_336648' , 'fullExchangeName' : 'NasdaqGS' , 'shortName' : 'Brooks Automation, Inc.' , 'longName' : 'Brooks Automation, Inc.' , 'financialCurrency' : 'USD' , 'regularMarketOpen' : 50.0 , 'averageDailyVolume3Month' : 505335 , 'averageDailyVolume10Day' : 407887 , 'fiftyTwoWeekLowChange' : 33.260002 , 'fiftyTwoWeekLowChangePercent' : 1.5696083 , 'fiftyTwoWeekRange' : '21.19 - 54.53' , 'fiftyTwoWeekHighChange' : - 0.07999802 , 'fiftyTwoWeekHighChangePercent' : - 0.001467046 , 'fiftyTwoWeekLow' : 21.19 , 'fiftyTwoWeekHigh' : 54.53 , 'dividendDate' : 1593129600 , 'earningsTimestamp' : 1596124800 , 'earningsTimestampStart' : 1596124800 , 'earningsTimestampEnd' : 1596124800 , 'trailingAnnualDividendRate' : 0.4 , 'trailingPE' : 8.9262295 , 'trailingAnnualDividendYield' : 0.008454872 , 'marketState' : 'POST' , 'epsTrailingTwelveMonths' : 6.1 , 'epsForward' : 1.21 , 'sharesOutstanding' : 73759000 , 'bookValue' : 15.928 , 'fiftyDayAverage' : 44.00857 , 'fiftyDayAverageChange' : 10.441429 , 'fiftyDayAverageChangePercent' : 0.23725899 , 'twoHundredDayAverage' : 38.295036 , 'twoHundredDayAverageChange' : 16.154964 , 'twoHundredDayAverageChangePercent' : 0.4218553 , 'marketCap' : 4016177664 , 'forwardPE' : 45.0 , 'priceToBook' : 3.4185083 , 'sourceInterval' : 15 , 'exchangeDataDelayedBy' : 0 , 'exchangeTimezoneName' : 'America/New_York' , 'exchangeTimezoneShortName' : 'EDT' , 'gmtOffSetMilliseconds' : - 14400000 , 'esgPopulated' : False , 'tradeable' : True , 'regularMarketChangePercent' : 15.091946 , 'displayName' : 'Brooks Automation' , 'symbol' : 'BRKS' }], 'predefinedScr' : True , 'versionId' : 6 } }","title":"Screener"},{"location":"guide/screener/#import","text":"from yahooquery import Screener","title":"Import"},{"location":"guide/screener/#create-instance","text":"s = Screener ()","title":"Create Instance"},{"location":"guide/screener/#screener","text":"","title":"Screener"},{"location":"guide/screener/#available_screeners","text":"Details Description : Return list of predefined screeners available to pass to get_screeners Return : dict Example s = Screener () s . available_screeners Data [ 'accident_health_insurance' , 'advertising_agencies' , 'aerospace_defense_major_diversified' , 'aerospace_defense_products_services' , 'aggressive_small_caps' , 'agricultural_chemicals' , 'air_delivery_freight_services' , 'air_services_other' , 'all_cryptocurrencies_au' , 'all_cryptocurrencies_ca' , 'all_cryptocurrencies_eu' , 'all_cryptocurrencies_gb' , 'all_cryptocurrencies_in' , 'all_cryptocurrencies_us' , 'aluminum' , 'apparel_stores' , 'appliances' , 'application_software' , 'asset_management' , 'auto_dealerships' , 'auto_manufacturers_major' , 'auto_parts' , 'auto_parts_stores' , 'auto_parts_wholesale' , 'basic_materials' , 'basic_materials_wholesale' , 'beverages_brewers' , 'beverages_soft_drinks' , 'beverages_wineries_distillers' , 'biotechnology' , 'broadcasting_radio' , 'broadcasting_tv' , 'building_materials_wholesale' , 'business_equipment' , 'business_services' , 'business_software_services' , 'catalog_mail_order_houses' , 'catv_systems' , 'cement' , 'chemicals_major_diversified' , 'cigarettes' , 'cleaning_products' , 'closedend_fund_debt' , 'closedend_fund_equity' , 'closedend_fund_foreign' , 'communication_equipment' , 'computer_based_systems' , 'computer_peripherals' , 'computers_wholesale' , 'confectioners' , 'conglomerates' , 'conservative_foreign_funds' , 'consumer_defensive' , 'consumer_goods' , 'consumer_services' , 'copper' , 'credit_services' , 'dairy_products' , 'data_storage_devices' , 'day_gainers' , 'day_gainers_americas' , 'day_gainers_asia' , 'day_gainers_au' , 'day_gainers_br' , 'day_gainers_ca' , 'day_gainers_de' , 'day_gainers_dji' , 'day_gainers_es' , 'day_gainers_europe' , 'day_gainers_fr' , 'day_gainers_gb' , 'day_gainers_hk' , 'day_gainers_in' , 'day_gainers_it' , 'day_gainers_ndx' , 'day_gainers_nz' , 'day_gainers_sg' , 'day_losers' , 'day_losers_americas' , 'day_losers_asia' , 'day_losers_au' , 'day_losers_br' , 'day_losers_ca' , 'day_losers_de' , 'day_losers_dji' , 'day_losers_es' , 'day_losers_europe' , 'day_losers_fr' , 'day_losers_gb' , 'day_losers_hk' , 'day_losers_in' , 'day_losers_it' , 'day_losers_ndx' , 'day_losers_nz' , 'day_losers_sg' , 'department_stores' , 'diagnostic_substances' , 'discount_variety_stores' , 'diversified_communication_services' , 'diversified_computer_systems' , 'diversified_electronics' , 'diversified_investments' , 'diversified_machinery' , 'diversified_utilities' , 'drug_delivery' , 'drug_manufacturers_major' , 'drug_manufacturers_other' , 'drug_related_products' , 'drug_stores' , 'drugs_generic' , 'drugs_wholesale' , 'education_training_services' , 'electric_utilities' , 'electronic_equipment' , 'electronics_stores' , 'electronics_wholesale' , 'entertainment_diversified' , 'fair_value_screener' , 'farm_construction_machinery' , 'farm_products' , 'financial' , 'food_major_diversified' , 'food_wholesale' , 'foreign_money_center_banks' , 'foreign_regional_banks' , 'foreign_utilities' , 'gaming_activities' , 'gas_utilities' , 'general_building_materials' , 'general_contractors' , 'general_entertainment' , 'gold' , 'grocery_stores' , 'growth_technology_stocks' , 'health_care_plans' , 'healthcare' , 'healthcare_information_services' , 'heavy_construction' , 'high_yield_bond' , 'home_furnishing_stores' , 'home_furnishings_fixtures' , 'home_health_care' , 'home_improvement_stores' , 'hospitals' , 'housewares_accessories' , 'independent_oil_gas' , 'industrial_electrical_equipment' , 'industrial_equipment_components' , 'industrial_equipment_wholesale' , 'industrial_goods' , 'industrial_metals_minerals' , 'information_delivery_services' , 'information_technology_services' , 'insurance_brokers' , 'internet_information_providers' , 'internet_service_providers' , 'internet_software_services' , 'investment_brokerage_national' , 'investment_brokerage_regional' , 'jewelry_stores' , 'life_insurance' , 'lodging' , 'long_distance_carriers' , 'longterm_care_facilities' , 'lumber_wood_production' , 'machine_tools_accessories' , 'major_airlines' , 'major_integrated_oil_gas' , 'management_services' , 'marketing_services' , 'meat_products' , 'medical_appliances_equipment' , 'medical_equipment_wholesale' , 'medical_instruments_supplies' , 'medical_laboratories_research' , 'mega_cap_hc' , 'metal_fabrication' , 'money_center_banks' , 'mortgage_investment' , 'most_actives' , 'most_actives_americas' , 'most_actives_asia' , 'most_actives_au' , 'most_actives_br' , 'most_actives_ca' , 'most_actives_de' , 'most_actives_dji' , 'most_actives_es' , 'most_actives_europe' , 'most_actives_fr' , 'most_actives_gb' , 'most_actives_hk' , 'most_actives_in' , 'most_actives_it' , 'most_actives_ndx' , 'most_actives_nz' , 'most_actives_sg' , 'most_watched_tickers' , 'movie_production_theaters' , 'ms_basic_materials' , 'ms_communication_services' , 'ms_consumer_cyclical' , 'ms_consumer_defensive' , 'ms_energy' , 'ms_financial_services' , 'ms_healthcare' , 'ms_industrials' , 'ms_real_estate' , 'ms_technology' , 'ms_utilities' , 'multimedia_graphics_software' , 'networking_communication_devices' , 'nonmetallic_mineral_mining' , 'office_supplies' , 'oil_gas_drilling_exploration' , 'oil_gas_equipment_services' , 'oil_gas_pipelines' , 'oil_gas_refining_marketing' , 'packaging_containers' , 'paper_paper_products' , 'personal_products' , 'personal_services' , 'photographic_equipment_supplies' , 'pollution_treatment_controls' , 'portfolio_anchors' , 'printed_circuit_boards' , 'processed_packaged_goods' , 'processing_systems_products' , 'property_casualty_insurance' , 'property_management' , 'publishing_books' , 'publishing_newspapers' , 'publishing_periodicals' , 'railroads' , 'real_estate_development' , 'recreational_goods_other' , 'recreational_vehicles' , 'regional_airlines' , 'regional_midatlantic_banks' , 'regional_midwest_banks' , 'regional_northeast_banks' , 'regional_pacific_banks' , 'regional_southeast_banks' , 'regional_southwest_banks' , 'reit_diversified' , 'reit_healthcare_facilities' , 'reit_hotel_motel' , 'reit_industrial' , 'reit_office' , 'reit_residential' , 'reit_retail' , 'rental_leasing_services' , 'research_services' , 'residential_construction' , 'resorts_casinos' , 'restaurants' , 'rubber_plastics' , 'savings_loans' , 'scientific_technical_instruments' , 'security_protection_services' , 'security_software_services' , 'semiconductor_broad_line' , 'semiconductor_equipment_materials' , 'semiconductor_integrated_circuits' , 'semiconductor_memory_chips' , 'semiconductor_specialized' , 'services' , 'shipping' , 'silver' , 'small_cap_gainers' , 'small_tools_accessories' , 'solid_large_growth_funds' , 'solid_midcap_growth_funds' , 'specialized_health_services' , 'specialty_chemicals' , 'specialty_eateries' , 'specialty_retail_other' , 'sporting_activities' , 'sporting_goods' , 'sporting_goods_stores' , 'staffing_outsourcing_services' , 'steel_iron' , 'surety_title_insurance' , 'synthetics' , 'technical_services' , 'technical_system_software' , 'technology' , 'telecom_services_domestic' , 'telecom_services_foreign' , 'textile_apparel_clothing' , 'textile_apparel_footwear_accessories' , 'textile_industrial' , 'tobacco_products_other' , 'top_energy_us' , 'top_etfs' , 'top_etfs_hk' , 'top_etfs_in' , 'top_etfs_us' , 'top_iv_options_us' , 'top_mutual_funds' , 'top_mutual_funds_au' , 'top_mutual_funds_br' , 'top_mutual_funds_ca' , 'top_mutual_funds_de' , 'top_mutual_funds_es' , 'top_mutual_funds_fr' , 'top_mutual_funds_gb' , 'top_mutual_funds_hk' , 'top_mutual_funds_in' , 'top_mutual_funds_it' , 'top_mutual_funds_nz' , 'top_mutual_funds_sg' , 'top_mutual_funds_us' , 'top_options_implied_volatality' , 'top_options_open_interest' , 'toy_hobby_stores' , 'toys_games' , 'trucking' , 'trucks_other_vehicles' , 'undervalued_growth_stocks' , 'undervalued_large_caps' , 'utilities' , 'waste_management' , 'water_utilities' , 'wireless_communications' ]","title":"available_screeners"},{"location":"guide/screener/#get_screeners","text":"Details Description : List of securities from a predefined screener(s) Return : pandas.DataFrame Arguments Argument Type Default Required Options screen_ids str or list None Required See available screeners count int 25 optional Example s = Screener () s . get_screeners ([ 'most_actives' , 'day_gainers' ], 5 ) Data { 'most_actives' : { 'id' : '437465ef-980e-4d8c-a860-de7cbfbab373' , 'title' : 'Most Actives - US' , 'description' : 'Stocks ordered in descending order by intraday trade volume' , 'canonicalName' : 'MOST_ACTIVES' , 'criteriaMeta' : { 'size' : 5 , 'offset' : 0 , 'sortField' : 'dayvolume' , 'sortType' : 'DESC' , 'quoteType' : 'EQUITY' , 'topOperator' : 'AND' , 'criteria' : [{ 'field' : 'region' , 'operators' : [ 'EQ' ], 'values' : [], 'labelsSelected' : [ 53 ] }, { 'field' : 'intradaymarketcap' , 'operators' : [ 'EQ' ], 'values' : [], 'labelsSelected' : [ 1 , 2 , 3 ] }, { 'field' : 'dayvolume' , 'operators' : [ 'GT' ], 'values' : [ 5000000 ], 'labelsSelected' : [] }] }, 'rawCriteria' : '{\"offset\":0,\"size\":5,\"sortField\":\"dayvolume\",\"sortType\":\"DESC\",\"quoteType\":\"EQUITY\",\"query\":{\"operator\":\"AND\",\"operands\":[{\"operator\":\"eq\",\"operands\":[\"region\",\"us\"]},{\"operator\":\"or\",\"operands\":[{\"operator\":\"BTWN\",\"operands\":[\"intradaymarketcap\",2000000000,10000000000]},{\"operator\":\"BTWN\",\"operands\":[\"intradaymarketcap\",10000000000,100000000000]},{\"operator\":\"GT\",\"operands\":[\"intradaymarketcap\",100000000000]}]},{\"operator\":\"gt\",\"operands\":[\"dayvolume\",5000000]}]}}' , 'start' : 0 , 'count' : 5 , 'total' : 203 , 'quotes' : [{ 'language' : 'en-US' , 'region' : 'US' , 'quoteType' : 'EQUITY' , 'quoteSourceName' : 'Nasdaq Real Time Price' , 'triggerable' : False , 'currency' : 'USD' , 'firstTradeDateMilliseconds' : - 252322200000 , 'priceHint' : 2 , 'postMarketChangePercent' : 0.0 , 'postMarketTime' : 1596234164 , 'postMarketPrice' : 6.08 , 'postMarketChange' : 0.0 , 'regularMarketChange' : - 0.19000006 , 'regularMarketTime' : 1596225602 , 'regularMarketPrice' : 6.07 , 'regularMarketDayHigh' : 6.29 , 'regularMarketDayRange' : '6.0 - 6.29' , 'regularMarketDayLow' : 6.0 , 'regularMarketVolume' : 142268197 , 'regularMarketPreviousClose' : 6.26 , 'bid' : 6.07 , 'ask' : 6.08 , 'bidSize' : 473 , 'askSize' : 280 , 'exchange' : 'NYQ' , 'market' : 'us_market' , 'messageBoardId' : 'finmb_177031' , 'fullExchangeName' : 'NYSE' , 'shortName' : 'General Electric Company' , 'longName' : 'General Electric Company' , 'financialCurrency' : 'USD' , 'regularMarketOpen' : 6.25 , 'averageDailyVolume3Month' : 103055092 , 'averageDailyVolume10Day' : 86456425 , 'fiftyTwoWeekLowChange' : 0.59000015 , 'fiftyTwoWeekLowChangePercent' : 0.107664265 , 'fiftyTwoWeekRange' : '5.48 - 13.26' , 'fiftyTwoWeekHighChange' : - 7.19 , 'fiftyTwoWeekHighChangePercent' : - 0.5422323 , 'fiftyTwoWeekLow' : 5.48 , 'fiftyTwoWeekHigh' : 13.26 , 'dividendDate' : 1595808000 , 'earningsTimestamp' : 1603873800 , 'earningsTimestampStart' : 1603873800 , 'earningsTimestampEnd' : 1603873800 , 'trailingAnnualDividendRate' : 0.04 , 'trailingAnnualDividendYield' : 0.006389776 , 'marketState' : 'POST' , 'epsTrailingTwelveMonths' : - 0.561 , 'epsForward' : 0.38 , 'sharesOutstanding' : 8747089920 , 'bookValue' : 3.846 , 'fiftyDayAverage' : 6.9014287 , 'fiftyDayAverageChange' : - 0.8314285 , 'fiftyDayAverageChangePercent' : - 0.12047195 , 'twoHundredDayAverage' : 8.269568 , 'twoHundredDayAverageChange' : - 2.1995683 , 'twoHundredDayAverageChangePercent' : - 0.26598343 , 'marketCap' : 53094838272 , 'forwardPE' : 15.973685 , 'priceToBook' : 1.5782632 , 'sourceInterval' : 15 , 'exchangeDataDelayedBy' : 0 , 'exchangeTimezoneName' : 'America/New_York' , 'exchangeTimezoneShortName' : 'EDT' , 'gmtOffSetMilliseconds' : - 14400000 , 'esgPopulated' : False , 'tradeable' : True , 'regularMarketChangePercent' : - 3.0351446 , 'displayName' : 'General Electric' , 'symbol' : 'GE' }, { 'language' : 'en-US' , 'region' : 'US' , 'quoteType' : 'EQUITY' , 'quoteSourceName' : 'Nasdaq Real Time Price' , 'triggerable' : False , 'currency' : 'USD' , 'firstTradeDateMilliseconds' : 757607400000 , 'priceHint' : 4 , 'postMarketChangePercent' : - 0.7314493 , 'postMarketTime' : 1596234026 , 'postMarketPrice' : 4.75 , 'postMarketChange' : - 0.034999847 , 'regularMarketChange' : 0.3300004 , 'regularMarketTime' : 1596225601 , 'regularMarketPrice' : 4.78 , 'regularMarketDayHigh' : 4.95 , 'regularMarketDayRange' : '4.635 - 4.95' , 'regularMarketDayLow' : 4.635 , 'regularMarketVolume' : 117123629 , 'regularMarketPreviousClose' : 4.45 , 'bid' : 4.73 , 'ask' : 4.76 , 'bidSize' : 369 , 'askSize' : 400 , 'exchange' : 'NYQ' , 'market' : 'us_market' , 'messageBoardId' : 'finmb_205573' , 'fullExchangeName' : 'NYSE' , 'shortName' : 'Nokia Corporation Sponsored' , 'longName' : 'Nokia Corporation' , 'financialCurrency' : 'EUR' , 'regularMarketOpen' : 4.86 , 'averageDailyVolume3Month' : 30349318 , 'averageDailyVolume10Day' : 27909325 , 'fiftyTwoWeekLowChange' : 2.4400003 , 'fiftyTwoWeekLowChangePercent' : 1.0427352 , 'fiftyTwoWeekRange' : '2.34 - 5.45' , 'fiftyTwoWeekHighChange' : - 0.6699996 , 'fiftyTwoWeekHighChangePercent' : - 0.12293571 , 'fiftyTwoWeekLow' : 2.34 , 'fiftyTwoWeekHigh' : 5.45 , 'dividendDate' : 1565654400 , 'trailingAnnualDividendRate' : 0.221 , 'trailingAnnualDividendYield' : 0.049662925 , 'marketState' : 'POST' , 'epsTrailingTwelveMonths' : - 0.192 , 'epsForward' : 0.31 , 'sharesOutstanding' : 5618930176 , 'bookValue' : 3.119 , 'fiftyDayAverage' : 4.3285713 , 'fiftyDayAverageChange' : 0.4514289 , 'fiftyDayAverageChangePercent' : 0.10429051 , 'twoHundredDayAverage' : 3.8270504 , 'twoHundredDayAverageChange' : 0.95294976 , 'twoHundredDayAverageChangePercent' : 0.24900371 , 'marketCap' : 25653735424 , 'forwardPE' : 15.419355 , 'priceToBook' : 1.5325426 , 'sourceInterval' : 15 , 'exchangeDataDelayedBy' : 0 , 'exchangeTimezoneName' : 'America/New_York' , 'exchangeTimezoneShortName' : 'EDT' , 'gmtOffSetMilliseconds' : - 14400000 , 'esgPopulated' : False , 'tradeable' : True , 'regularMarketChangePercent' : 7.4157395 , 'displayName' : 'Nokia' , 'symbol' : 'NOK' }, { 'language' : 'en-US' , 'region' : 'US' , 'quoteType' : 'EQUITY' , 'quoteSourceName' : 'Delayed Quote' , 'triggerable' : False , 'currency' : 'USD' , 'firstTradeDateMilliseconds' : 76253400000 , 'priceHint' : 2 , 'postMarketChangePercent' : - 0.30257156 , 'postMarketTime' : 1596234024 , 'postMarketPrice' : 6.59 , 'postMarketChange' : - 0.01999998 , 'regularMarketChange' : - 0.12999964 , 'regularMarketTime' : 1596225883 , 'regularMarketPrice' : 6.61 , 'regularMarketDayHigh' : 6.9 , 'regularMarketDayRange' : '6.52 - 6.9' , 'regularMarketDayLow' : 6.52 , 'regularMarketVolume' : 115075556 , 'regularMarketPreviousClose' : 6.74 , 'bid' : 6.6 , 'ask' : 6.6 , 'bidSize' : 292 , 'askSize' : 18 , 'exchange' : 'NYQ' , 'market' : 'us_market' , 'messageBoardId' : 'finmb_106335' , 'fullExchangeName' : 'NYSE' , 'shortName' : 'Ford Motor Company' , 'longName' : 'Ford Motor Company' , 'financialCurrency' : 'USD' , 'regularMarketOpen' : 6.89 , 'averageDailyVolume3Month' : 87287634 , 'averageDailyVolume10Day' : 65583212 , 'fiftyTwoWeekLowChange' : 2.65 , 'fiftyTwoWeekLowChangePercent' : 0.66919196 , 'fiftyTwoWeekRange' : '3.96 - 9.65' , 'fiftyTwoWeekHighChange' : - 3.0399995 , 'fiftyTwoWeekHighChangePercent' : - 0.31502587 , 'fiftyTwoWeekLow' : 3.96 , 'fiftyTwoWeekHigh' : 9.65 , 'dividendDate' : 1583107200 , 'earningsTimestamp' : 1603814400 , 'earningsTimestampStart' : 1603814400 , 'earningsTimestampEnd' : 1603814400 , 'trailingAnnualDividendRate' : 0.6 , 'trailingAnnualDividendYield' : 0.08902078 , 'marketState' : 'POST' , 'epsTrailingTwelveMonths' : - 0.781 , 'epsForward' : 0.52 , 'sharesOutstanding' : 3906190080 , 'bookValue' : 7.455 , 'fiftyDayAverage' : 6.393429 , 'fiftyDayAverageChange' : 0.21657133 , 'fiftyDayAverageChangePercent' : 0.03387405 , 'twoHundredDayAverage' : 6.3716545 , 'twoHundredDayAverageChange' : 0.23834562 , 'twoHundredDayAverageChangePercent' : 0.03740718 , 'marketCap' : 26288234496 , 'forwardPE' : 12.711539 , 'priceToBook' : 0.8866533 , 'sourceInterval' : 15 , 'exchangeDataDelayedBy' : 0 , 'exchangeTimezoneName' : 'America/New_York' , 'exchangeTimezoneShortName' : 'EDT' , 'gmtOffSetMilliseconds' : - 14400000 , 'esgPopulated' : False , 'tradeable' : True , 'regularMarketChangePercent' : - 1.9287779 , 'displayName' : 'Ford Motor' , 'symbol' : 'F' }, { 'language' : 'en-US' , 'region' : 'US' , 'quoteType' : 'EQUITY' , 'quoteSourceName' : 'Delayed Quote' , 'triggerable' : False , 'currency' : 'USD' , 'firstTradeDateMilliseconds' : 1555594200000 , 'priceHint' : 2 , 'postMarketChangePercent' : 1.6622913 , 'postMarketTime' : 1596234159 , 'postMarketPrice' : 34.86 , 'postMarketChange' : 0.5699997 , 'regularMarketChange' : 9.1 , 'regularMarketTime' : 1596225602 , 'regularMarketPrice' : 34.29 , 'regularMarketDayHigh' : 34.5 , 'regularMarketDayRange' : '31.0 - 34.5' , 'regularMarketDayLow' : 31.0 , 'regularMarketVolume' : 111167386 , 'regularMarketPreviousClose' : 25.19 , 'bid' : 34.69 , 'ask' : 34.7 , 'bidSize' : 13 , 'askSize' : 18 , 'exchange' : 'NYQ' , 'market' : 'us_market' , 'messageBoardId' : 'finmb_139264388' , 'fullExchangeName' : 'NYSE' , 'shortName' : 'Pinterest, Inc.' , 'longName' : 'Pinterest, Inc.' , 'financialCurrency' : 'USD' , 'regularMarketOpen' : 33.56 , 'averageDailyVolume3Month' : 13862671 , 'averageDailyVolume10Day' : 9896450 , 'fiftyTwoWeekLowChange' : 24.19 , 'fiftyTwoWeekLowChangePercent' : 2.3950496 , 'fiftyTwoWeekRange' : '10.1 - 36.83' , 'fiftyTwoWeekHighChange' : - 2.540001 , 'fiftyTwoWeekHighChangePercent' : - 0.06896554 , 'fiftyTwoWeekLow' : 10.1 , 'fiftyTwoWeekHigh' : 36.83 , 'earningsTimestamp' : 1596184200 , 'earningsTimestampStart' : 1603987200 , 'earningsTimestampEnd' : 1604332800 , 'marketState' : 'POST' , 'epsTrailingTwelveMonths' : - 2.743 , 'epsForward' : 0.05 , 'sharesOutstanding' : 403489984 , 'bookValue' : 3.332 , 'fiftyDayAverage' : 24.036858 , 'fiftyDayAverageChange' : 10.253143 , 'fiftyDayAverageChangePercent' : 0.4265592 , 'twoHundredDayAverage' : 20.366547 , 'twoHundredDayAverageChange' : 13.923454 , 'twoHundredDayAverageChangePercent' : 0.68364334 , 'marketCap' : 20109576192 , 'forwardPE' : 685.8 , 'priceToBook' : 10.291117 , 'sourceInterval' : 15 , 'exchangeDataDelayedBy' : 0 , 'exchangeTimezoneName' : 'America/New_York' , 'exchangeTimezoneShortName' : 'EDT' , 'gmtOffSetMilliseconds' : - 14400000 , 'esgPopulated' : False , 'tradeable' : True , 'regularMarketChangePercent' : 36.12545 , 'displayName' : 'Pinterest' , 'symbol' : 'PINS' }, { 'language' : 'en-US' , 'region' : 'US' , 'quoteType' : 'EQUITY' , 'quoteSourceName' : 'Delayed Quote' , 'triggerable' : True , 'currency' : 'USD' , 'firstTradeDateMilliseconds' : 345479400000 , 'priceHint' : 2 , 'postMarketChangePercent' : 0.55289054 , 'postMarketTime' : 1596234080 , 'postMarketPrice' : 427.39 , 'postMarketChange' : 2.350006 , 'regularMarketChange' : 40.28 , 'regularMarketTime' : 1596225602 , 'regularMarketPrice' : 425.04 , 'regularMarketDayHigh' : 425.66 , 'regularMarketDayRange' : '403.36 - 425.66' , 'regularMarketDayLow' : 403.36 , 'regularMarketVolume' : 91201476 , 'regularMarketPreviousClose' : 384.76 , 'bid' : 427.26 , 'ask' : 426.2 , 'bidSize' : 30 , 'askSize' : 31 , 'exchange' : 'NMS' , 'market' : 'us_market' , 'messageBoardId' : 'finmb_24937' , 'fullExchangeName' : 'NasdaqGS' , 'shortName' : 'Apple Inc.' , 'longName' : 'Apple Inc.' , 'financialCurrency' : 'USD' , 'regularMarketOpen' : 411.535 , 'averageDailyVolume3Month' : 34664412 , 'averageDailyVolume10Day' : 32670312 , 'fiftyTwoWeekLowChange' : 232.46 , 'fiftyTwoWeekLowChangePercent' : 1.2070827 , 'fiftyTwoWeekRange' : '192.58 - 425.66' , 'fiftyTwoWeekHighChange' : - 0.6199951 , 'fiftyTwoWeekHighChangePercent' : - 0.0014565501 , 'fiftyTwoWeekLow' : 192.58 , 'fiftyTwoWeekHigh' : 425.66 , 'dividendDate' : 1589414400 , 'earningsTimestamp' : 1596124800 , 'earningsTimestampStart' : 1603868340 , 'earningsTimestampEnd' : 1604304000 , 'trailingAnnualDividendRate' : 3.08 , 'trailingPE' : 32.236633 , 'trailingAnnualDividendYield' : 0.0080049895 , 'marketState' : 'POST' , 'epsTrailingTwelveMonths' : 13.185 , 'epsForward' : 14.97 , 'sharesOutstanding' : 4334329856 , 'bookValue' : 16.761 , 'fiftyDayAverage' : 369.66028 , 'fiftyDayAverageChange' : 55.37973 , 'fiftyDayAverageChangePercent' : 0.1498125 , 'twoHundredDayAverage' : 313.8948 , 'twoHundredDayAverageChange' : 111.1452 , 'twoHundredDayAverageChangePercent' : 0.35408422 , 'marketCap' : 1842263621632 , 'forwardPE' : 28.392786 , 'priceToBook' : 25.35887 , 'sourceInterval' : 15 , 'exchangeDataDelayedBy' : 0 , 'exchangeTimezoneName' : 'America/New_York' , 'exchangeTimezoneShortName' : 'EDT' , 'gmtOffSetMilliseconds' : - 14400000 , 'esgPopulated' : False , 'tradeable' : True , 'regularMarketChangePercent' : 10.468863 , 'displayName' : 'Apple' , 'symbol' : 'AAPL' }], 'predefinedScr' : True , 'versionId' : 6 }, 'day_gainers' : { 'id' : 'ec5bebb9-b7b2-4474-9e5c-3e258b61cbe6' , 'title' : 'Day Gainers - US' , 'description' : 'Stocks ordered in descending order by price percent change greater than 3% with respect to the previous close' , 'canonicalName' : 'DAY_GAINERS' , 'criteriaMeta' : { 'size' : 5 , 'offset' : 0 , 'sortField' : 'percentchange' , 'sortType' : 'DESC' , 'quoteType' : 'EQUITY' , 'topOperator' : 'AND' , 'criteria' : [{ 'field' : 'percentchange' , 'operators' : [ 'GT' ], 'values' : [ 3.0 ], 'labelsSelected' : [] }, { 'field' : 'region' , 'operators' : [ 'EQ' ], 'values' : [], 'labelsSelected' : [ 53 ] }, { 'field' : 'intradaymarketcap' , 'operators' : [ 'EQ' ], 'values' : [], 'labelsSelected' : [ 1 , 2 , 3 ] }, { 'field' : 'dayvolume' , 'operators' : [ 'GT' ], 'values' : [ 15000 ], 'labelsSelected' : [] }] }, 'rawCriteria' : '{\"offset\":0,\"size\":5,\"sortField\":\"percentchange\",\"sortType\":\"DESC\",\"quoteType\":\"EQUITY\",\"query\":{\"operator\":\"AND\",\"operands\":[{\"operator\":\"GT\",\"operands\":[\"percentchange\",3.0]},{\"operator\":\"eq\",\"operands\":[\"region\",\"us\"]},{\"operator\":\"or\",\"operands\":[{\"operator\":\"BTWN\",\"operands\":[\"intradaymarketcap\",2000000000,10000000000]},{\"operator\":\"BTWN\",\"operands\":[\"intradaymarketcap\",10000000000,100000000000]},{\"operator\":\"GT\",\"operands\":[\"intradaymarketcap\",100000000000]}]},{\"operator\":\"gt\",\"operands\":[\"dayvolume\",15000]}]}}' , 'start' : 0 , 'count' : 5 , 'total' : 107 , 'quotes' : [{ 'language' : 'en-US' , 'region' : 'US' , 'quoteType' : 'EQUITY' , 'quoteSourceName' : 'Delayed Quote' , 'triggerable' : False , 'currency' : 'USD' , 'firstTradeDateMilliseconds' : 1555594200000 , 'priceHint' : 2 , 'postMarketChangePercent' : 1.6622913 , 'postMarketTime' : 1596234159 , 'postMarketPrice' : 34.86 , 'postMarketChange' : 0.5699997 , 'regularMarketChange' : 9.1 , 'regularMarketTime' : 1596225602 , 'regularMarketPrice' : 34.29 , 'regularMarketDayHigh' : 34.5 , 'regularMarketDayRange' : '31.0 - 34.5' , 'regularMarketDayLow' : 31.0 , 'regularMarketVolume' : 111167386 , 'regularMarketPreviousClose' : 25.19 , 'bid' : 34.69 , 'ask' : 34.7 , 'bidSize' : 13 , 'askSize' : 18 , 'exchange' : 'NYQ' , 'market' : 'us_market' , 'messageBoardId' : 'finmb_139264388' , 'fullExchangeName' : 'NYSE' , 'shortName' : 'Pinterest, Inc.' , 'longName' : 'Pinterest, Inc.' , 'financialCurrency' : 'USD' , 'regularMarketOpen' : 33.56 , 'averageDailyVolume3Month' : 13862671 , 'averageDailyVolume10Day' : 9896450 , 'fiftyTwoWeekLowChange' : 24.19 , 'fiftyTwoWeekLowChangePercent' : 2.3950496 , 'fiftyTwoWeekRange' : '10.1 - 36.83' , 'fiftyTwoWeekHighChange' : - 2.540001 , 'fiftyTwoWeekHighChangePercent' : - 0.06896554 , 'fiftyTwoWeekLow' : 10.1 , 'fiftyTwoWeekHigh' : 36.83 , 'earningsTimestamp' : 1596184200 , 'earningsTimestampStart' : 1603987200 , 'earningsTimestampEnd' : 1604332800 , 'marketState' : 'POST' , 'epsTrailingTwelveMonths' : - 2.743 , 'epsForward' : 0.05 , 'sharesOutstanding' : 403489984 , 'bookValue' : 3.332 , 'fiftyDayAverage' : 24.036858 , 'fiftyDayAverageChange' : 10.253143 , 'fiftyDayAverageChangePercent' : 0.4265592 , 'twoHundredDayAverage' : 20.366547 , 'twoHundredDayAverageChange' : 13.923454 , 'twoHundredDayAverageChangePercent' : 0.68364334 , 'marketCap' : 20109576192 , 'forwardPE' : 685.8 , 'priceToBook' : 10.291117 , 'sourceInterval' : 15 , 'exchangeDataDelayedBy' : 0 , 'exchangeTimezoneName' : 'America/New_York' , 'exchangeTimezoneShortName' : 'EDT' , 'gmtOffSetMilliseconds' : - 14400000 , 'esgPopulated' : False , 'tradeable' : True , 'regularMarketChangePercent' : 36.12545 , 'displayName' : 'Pinterest' , 'symbol' : 'PINS' }, { 'language' : 'en-US' , 'region' : 'US' , 'quoteType' : 'EQUITY' , 'quoteSourceName' : 'Delayed Quote' , 'triggerable' : False , 'currency' : 'USD' , 'firstTradeDateMilliseconds' : 1234535400000 , 'priceHint' : 4 , 'regularMarketChange' : 0.1509 , 'regularMarketTime' : 1596222445 , 'regularMarketPrice' : 0.7009 , 'regularMarketDayHigh' : 1.5 , 'regularMarketDayRange' : '0.7009 - 1.5' , 'regularMarketDayLow' : 0.7009 , 'regularMarketVolume' : 885738 , 'regularMarketPreviousClose' : 0.55 , 'bid' : 0.0 , 'ask' : 0.0 , 'bidSize' : 0 , 'askSize' : 0 , 'exchange' : 'PNK' , 'market' : 'us_market' , 'messageBoardId' : 'finmb_92126' , 'fullExchangeName' : 'Other OTC' , 'shortName' : 'GRUPO FINANCIERO INBURSA SAB DE' , 'longName' : 'Grupo Financiero Inbursa, S.A.B. de C.V.' , 'financialCurrency' : 'MXN' , 'regularMarketOpen' : 0.7144 , 'averageDailyVolume3Month' : 9864 , 'averageDailyVolume10Day' : 28712 , 'fiftyTwoWeekLowChange' : 0.20090002 , 'fiftyTwoWeekLowChangePercent' : 0.40180004 , 'fiftyTwoWeekRange' : '0.5 - 1.5' , 'fiftyTwoWeekHighChange' : - 0.7991 , 'fiftyTwoWeekHighChangePercent' : - 0.5327333 , 'fiftyTwoWeekLow' : 0.5 , 'fiftyTwoWeekHigh' : 1.5 , 'trailingAnnualDividendRate' : 0.024 , 'trailingPE' : 4.8673615 , 'trailingAnnualDividendYield' : 0.043636363 , 'marketState' : 'POST' , 'epsTrailingTwelveMonths' : 0.144 , 'sharesOutstanding' : 6594800128 , 'bookValue' : 1.078 , 'fiftyDayAverage' : 0.7088571 , 'fiftyDayAverageChange' : - 0.007957101 , 'fiftyDayAverageChangePercent' : - 0.011225253 , 'twoHundredDayAverage' : 0.83330935 , 'twoHundredDayAverageChange' : - 0.13240933 , 'twoHundredDayAverageChangePercent' : - 0.15889578 , 'marketCap' : 6064775680 , 'priceToBook' : 0.6501856 , 'sourceInterval' : 15 , 'exchangeDataDelayedBy' : 0 , 'exchangeTimezoneName' : 'America/New_York' , 'exchangeTimezoneShortName' : 'EDT' , 'gmtOffSetMilliseconds' : - 14400000 , 'esgPopulated' : False , 'tradeable' : True , 'regularMarketChangePercent' : 27.436363 , 'displayName' : 'Grupo Financiero Inbursa' , 'symbol' : 'GPFOF' }, { 'language' : 'en-US' , 'region' : 'US' , 'quoteType' : 'EQUITY' , 'quoteSourceName' : 'Nasdaq Real Time Price' , 'triggerable' : True , 'currency' : 'USD' , 'firstTradeDateMilliseconds' : 1524835800000 , 'priceHint' : 2 , 'postMarketChangePercent' : 0.000967242 , 'postMarketTime' : 1596225642 , 'postMarketPrice' : 103.331 , 'postMarketChange' : 0.000999451 , 'regularMarketChange' : 19.440002 , 'regularMarketTime' : 1596225602 , 'regularMarketPrice' : 103.33 , 'regularMarketDayHigh' : 105.98 , 'regularMarketDayRange' : '94.75 - 105.98' , 'regularMarketDayLow' : 94.75 , 'regularMarketVolume' : 739795 , 'regularMarketPreviousClose' : 83.89 , 'bid' : 96.0 , 'ask' : 103.23 , 'bidSize' : 8 , 'askSize' : 9 , 'exchange' : 'NMS' , 'market' : 'us_market' , 'messageBoardId' : 'finmb_557929974' , 'fullExchangeName' : 'NasdaqGS' , 'shortName' : 'Goosehead Insurance, Inc.' , 'longName' : 'Goosehead Insurance, Inc' , 'financialCurrency' : 'USD' , 'regularMarketOpen' : 96.6 , 'averageDailyVolume3Month' : 182756 , 'averageDailyVolume10Day' : 100200 , 'fiftyTwoWeekLowChange' : 66.07001 , 'fiftyTwoWeekLowChangePercent' : 1.7732155 , 'fiftyTwoWeekRange' : '37.26 - 105.98' , 'fiftyTwoWeekHighChange' : - 2.6500015 , 'fiftyTwoWeekHighChangePercent' : - 0.025004731 , 'fiftyTwoWeekLow' : 37.26 , 'fiftyTwoWeekHigh' : 105.98 , 'dividendDate' : 1554076800 , 'earningsTimestamp' : 1596124800 , 'earningsTimestampStart' : 1604041140 , 'earningsTimestampEnd' : 1604390400 , 'trailingAnnualDividendRate' : 0.0 , 'trailingPE' : 543.8421 , 'trailingAnnualDividendYield' : 0.0 , 'marketState' : 'POST' , 'epsTrailingTwelveMonths' : 0.19 , 'epsForward' : 0.75 , 'sharesOutstanding' : 17135800 , 'bookValue' : 0.072 , 'fiftyDayAverage' : 77.440285 , 'fiftyDayAverageChange' : 25.889717 , 'fiftyDayAverageChangePercent' : 0.33431846 , 'twoHundredDayAverage' : 58.403347 , 'twoHundredDayAverageChange' : 44.926655 , 'twoHundredDayAverageChangePercent' : 0.76924795 , 'marketCap' : 3862465024 , 'forwardPE' : 137.77333 , 'priceToBook' : 1435.1389 , 'sourceInterval' : 15 , 'exchangeDataDelayedBy' : 0 , 'exchangeTimezoneName' : 'America/New_York' , 'exchangeTimezoneShortName' : 'EDT' , 'gmtOffSetMilliseconds' : - 14400000 , 'esgPopulated' : False , 'tradeable' : True , 'regularMarketChangePercent' : 23.173206 , 'displayName' : 'Goosehead Insurance' , 'symbol' : 'GSHD' }, { 'language' : 'en-US' , 'region' : 'US' , 'quoteType' : 'EQUITY' , 'quoteSourceName' : 'Delayed Quote' , 'triggerable' : True , 'currency' : 'USD' , 'firstTradeDateMilliseconds' : 1469712600000 , 'priceHint' : 2 , 'postMarketChangePercent' : - 2.832169 , 'postMarketTime' : 1596225980 , 'postMarketPrice' : 189.3801 , 'postMarketChange' : - 5.5198975 , 'regularMarketChange' : 28.98999 , 'regularMarketTime' : 1596225601 , 'regularMarketPrice' : 194.9 , 'regularMarketDayHigh' : 194.94 , 'regularMarketDayRange' : '169.0 - 194.94' , 'regularMarketDayLow' : 169.0 , 'regularMarketVolume' : 337089 , 'regularMarketPreviousClose' : 165.91 , 'bid' : 192.0 , 'ask' : 199.11 , 'bidSize' : 10 , 'askSize' : 10 , 'exchange' : 'NMS' , 'market' : 'us_market' , 'messageBoardId' : 'finmb_216477057' , 'fullExchangeName' : 'NasdaqGS' , 'shortName' : 'Kinsale Capital Group, Inc.' , 'longName' : 'Kinsale Capital Group, Inc.' , 'financialCurrency' : 'USD' , 'regularMarketOpen' : 169.0 , 'averageDailyVolume3Month' : 157907 , 'averageDailyVolume10Day' : 95400 , 'fiftyTwoWeekLowChange' : 113.96999 , 'fiftyTwoWeekLowChangePercent' : 1.4082539 , 'fiftyTwoWeekRange' : '80.93 - 194.94' , 'fiftyTwoWeekHighChange' : - 0.040008545 , 'fiftyTwoWeekHighChangePercent' : - 0.00020523518 , 'fiftyTwoWeekLow' : 80.93 , 'fiftyTwoWeekHigh' : 194.94 , 'dividendDate' : 1591920000 , 'earningsTimestamp' : 1596124800 , 'earningsTimestampStart' : 1603987200 , 'earningsTimestampEnd' : 1604332800 , 'trailingAnnualDividendRate' : 0.33 , 'trailingPE' : 87.91159 , 'trailingAnnualDividendYield' : 0.0019890303 , 'marketState' : 'POST' , 'epsTrailingTwelveMonths' : 2.217 , 'epsForward' : 3.22 , 'sharesOutstanding' : 22254600 , 'bookValue' : 18.034 , 'fiftyDayAverage' : 157.56015 , 'fiftyDayAverageChange' : 37.339844 , 'fiftyDayAverageChangePercent' : 0.23698786 , 'twoHundredDayAverage' : 129.625 , 'twoHundredDayAverageChange' : 65.274994 , 'twoHundredDayAverageChangePercent' : 0.50356793 , 'marketCap' : 4337421312 , 'forwardPE' : 60.527946 , 'priceToBook' : 10.8073635 , 'sourceInterval' : 15 , 'exchangeDataDelayedBy' : 0 , 'exchangeTimezoneName' : 'America/New_York' , 'exchangeTimezoneShortName' : 'EDT' , 'gmtOffSetMilliseconds' : - 14400000 , 'esgPopulated' : False , 'tradeable' : True , 'regularMarketChangePercent' : 17.473322 , 'displayName' : 'Kinsale Capital' , 'symbol' : 'KNSL' }, { 'language' : 'en-US' , 'region' : 'US' , 'quoteType' : 'EQUITY' , 'quoteSourceName' : 'Nasdaq Real Time Price' , 'triggerable' : True , 'currency' : 'USD' , 'firstTradeDateMilliseconds' : 791735400000 , 'priceHint' : 2 , 'postMarketChangePercent' : 2.8466468 , 'postMarketTime' : 1596230968 , 'postMarketPrice' : 56.0 , 'postMarketChange' : 1.5499992 , 'regularMarketChange' : 7.1399994 , 'regularMarketTime' : 1596225602 , 'regularMarketPrice' : 54.45 , 'regularMarketDayHigh' : 54.53 , 'regularMarketDayRange' : '49.02 - 54.53' , 'regularMarketDayLow' : 49.02 , 'regularMarketVolume' : 1196752 , 'regularMarketPreviousClose' : 47.31 , 'bid' : 54.41 , 'ask' : 54.42 , 'bidSize' : 8 , 'askSize' : 8 , 'exchange' : 'NMS' , 'market' : 'us_market' , 'messageBoardId' : 'finmb_336648' , 'fullExchangeName' : 'NasdaqGS' , 'shortName' : 'Brooks Automation, Inc.' , 'longName' : 'Brooks Automation, Inc.' , 'financialCurrency' : 'USD' , 'regularMarketOpen' : 50.0 , 'averageDailyVolume3Month' : 505335 , 'averageDailyVolume10Day' : 407887 , 'fiftyTwoWeekLowChange' : 33.260002 , 'fiftyTwoWeekLowChangePercent' : 1.5696083 , 'fiftyTwoWeekRange' : '21.19 - 54.53' , 'fiftyTwoWeekHighChange' : - 0.07999802 , 'fiftyTwoWeekHighChangePercent' : - 0.001467046 , 'fiftyTwoWeekLow' : 21.19 , 'fiftyTwoWeekHigh' : 54.53 , 'dividendDate' : 1593129600 , 'earningsTimestamp' : 1596124800 , 'earningsTimestampStart' : 1596124800 , 'earningsTimestampEnd' : 1596124800 , 'trailingAnnualDividendRate' : 0.4 , 'trailingPE' : 8.9262295 , 'trailingAnnualDividendYield' : 0.008454872 , 'marketState' : 'POST' , 'epsTrailingTwelveMonths' : 6.1 , 'epsForward' : 1.21 , 'sharesOutstanding' : 73759000 , 'bookValue' : 15.928 , 'fiftyDayAverage' : 44.00857 , 'fiftyDayAverageChange' : 10.441429 , 'fiftyDayAverageChangePercent' : 0.23725899 , 'twoHundredDayAverage' : 38.295036 , 'twoHundredDayAverageChange' : 16.154964 , 'twoHundredDayAverageChangePercent' : 0.4218553 , 'marketCap' : 4016177664 , 'forwardPE' : 45.0 , 'priceToBook' : 3.4185083 , 'sourceInterval' : 15 , 'exchangeDataDelayedBy' : 0 , 'exchangeTimezoneName' : 'America/New_York' , 'exchangeTimezoneShortName' : 'EDT' , 'gmtOffSetMilliseconds' : - 14400000 , 'esgPopulated' : False , 'tradeable' : True , 'regularMarketChangePercent' : 15.091946 , 'displayName' : 'Brooks Automation' , 'symbol' : 'BRKS' }], 'predefinedScr' : True , 'versionId' : 6 } }","title":"get_screeners"},{"location":"guide/ticker/financials/","text":"Individual \u00b6 balance_sheet \u00b6 Details Description : Retrieves balance sheet data for most recent four quarters or most recent four years as well as trailing 12 months. Return : pandas.DataFrame Arguments Argument Type Default Required Options frequency str a optional Annual - a Quarter - q trailing bool True optional True False Example aapl = Ticker ( 'aapl' ) aapl . balance_sheet () Data symbol asOfDate periodType AccountsPayable AccountsReceivable AccumulatedDepreciation AllowanceForDoubtfulAccountsReceivable AvailableForSaleSecurities CapitalStock CashAndCashEquivalents CashCashEquivalentsAndShortTermInvestments CashEquivalents CashFinancial CommercialPaper CommonStock CommonStockEquity CurrentAccruedExpenses CurrentAssets CurrentDebt CurrentDebtAndCapitalLeaseObligation CurrentDeferredLiabilities CurrentDeferredRevenue CurrentLiabilities GainsLossesNotAffectingRetainedEarnings Goodwill GoodwillAndOtherIntangibleAssets GrossAccountsReceivable GrossPPE Inventory InvestedCapital InvestmentinFinancialAssets InvestmentsAndAdvances LandAndImprovements Leases LongTermDebt LongTermDebtAndCapitalLeaseObligation MachineryFurnitureEquipment NetDebt NetPPE NetTangibleAssets NonCurrentDeferredLiabilities NonCurrentDeferredRevenue NonCurrentDeferredTaxesLiabilities OrdinarySharesNumber OtherCurrentAssets OtherCurrentBorrowings OtherCurrentLiabilities OtherIntangibleAssets OtherNonCurrentAssets OtherNonCurrentLiabilities OtherReceivables OtherShortTermInvestments Payables PayablesAndAccruedExpenses Properties Receivables RetainedEarnings ShareIssued StockholdersEquity TangibleBookValue TotalAssets TotalCapitalization TotalDebt TotalEquityGrossMinorityInterest TotalLiabilitiesNetMinorityInterest TotalNonCurrentAssets TotalNonCurrentLiabilitiesNetMinorityInterest TradeandOtherPayablesNonCurrent WorkingCapital aapl 2016-09-30 00:00:00 12M 3.7294e+10 1.5754e+10 -3.4235e+10 -5.3e+07 1.7043e+11 3.1251e+10 2.0484e+10 6.7155e+10 1.1883e+10 8.601e+09 8.105e+09 3.1251e+10 1.28249e+11 2.2027e+10 1.06869e+11 1.1605e+10 1.1605e+10 8.08e+09 8.08e+09 7.9006e+10 6.34e+08 5.414e+09 8.62e+09 1.5807e+10 6.1245e+10 2.132e+09 2.15281e+11 1.7043e+11 1.7043e+11 1.0185e+10 6.517e+09 7.5427e+10 7.5427e+10 4.4543e+10 6.6548e+10 2.701e+10 1.19629e+11 2.8949e+10 2.93e+09 2.6019e+10 5.33617e+09 8.283e+09 3.5e+09 nan 3.206e+09 8.757e+09 1.0055e+10 1.3545e+10 4.6671e+10 3.7294e+10 5.9321e+10 0 2.9299e+10 9.6364e+10 5.33617e+09 1.28249e+11 1.19629e+11 3.21686e+11 2.03676e+11 8.7032e+10 1.28249e+11 1.93437e+11 2.14817e+11 1.14431e+11 nan 2.7863e+10 aapl 2017-09-30 00:00:00 12M 4.9049e+10 1.7874e+10 -4.1293e+10 -5.8e+07 1.94714e+11 3.5867e+10 2.0289e+10 7.4181e+10 1.2307e+10 7.982e+09 1.1977e+10 3.5867e+10 1.34047e+11 2.5744e+10 1.28645e+11 1.8473e+10 1.8473e+10 7.548e+09 7.548e+09 1.00814e+11 -1.5e+08 5.717e+09 8.015e+09 1.7932e+10 7.5076e+10 4.855e+09 2.49727e+11 1.94714e+11 1.94714e+11 1.3587e+10 7.279e+09 9.7207e+10 9.7207e+10 5.421e+10 9.5391e+10 3.3783e+10 1.26032e+11 3.434e+10 2.836e+09 3.1504e+10 5.1262e+09 1.3936e+10 6.496e+09 nan 2.298e+09 1.0162e+10 8.911e+09 1.7799e+10 5.3892e+10 4.9049e+10 7.4793e+10 0 3.5673e+10 9.833e+10 5.1262e+09 1.34047e+11 1.26032e+11 3.75319e+11 2.31254e+11 1.1568e+11 1.34047e+11 2.41272e+11 2.46674e+11 1.40458e+11 nan 2.7831e+10 aapl 2018-09-30 00:00:00 12M 5.5888e+10 2.3186e+10 -4.9099e+10 nan 1.70799e+11 4.0201e+10 2.5913e+10 6.6301e+10 1.4338e+10 1.1575e+10 1.1964e+10 4.0201e+10 1.07147e+11 nan 1.31339e+11 2.0748e+10 2.0748e+10 7.543e+09 7.543e+09 1.16866e+11 -3.454e+09 nan nan nan 9.0403e+10 3.956e+09 2.2163e+11 1.70799e+11 1.70799e+11 1.6216e+10 8.205e+09 9.3735e+10 9.3735e+10 6.5982e+10 8.857e+10 4.1304e+10 1.07147e+11 3.223e+09 2.797e+09 4.26e+08 4.75499e+09 1.2087e+10 8.784e+09 3.2687e+10 nan 2.2283e+10 1.1165e+10 2.5809e+10 4.0388e+10 5.5888e+10 5.5888e+10 0 4.8995e+10 7.04e+10 4.75499e+09 1.07147e+11 1.07147e+11 3.65725e+11 2.00882e+11 1.14483e+11 1.07147e+11 2.58578e+11 2.34386e+11 1.41712e+11 3.3589e+10 1.4473e+10 aapl 2019-09-30 00:00:00 12M 4.6236e+10 2.2926e+10 -5.8579e+10 nan 1.05341e+11 4.5174e+10 4.8844e+10 1.00557e+11 3.664e+10 1.2204e+10 5.98e+09 4.5174e+10 9.0488e+10 nan 1.62819e+11 1.624e+10 1.624e+10 5.522e+09 5.522e+09 1.05718e+11 -5.84e+08 nan nan nan 9.5957e+10 4.106e+09 1.98535e+11 1.05341e+11 1.05341e+11 1.7085e+10 9.075e+09 9.1807e+10 9.1807e+10 6.9797e+10 5.9203e+10 3.7378e+10 9.0488e+10 nan nan nan 4.44324e+09 1.2352e+10 1.026e+10 3.772e+10 nan 3.2978e+10 2.0958e+10 2.2878e+10 5.1713e+10 4.6236e+10 4.6236e+10 0 4.5804e+10 4.5898e+10 4.44324e+09 9.0488e+10 9.0488e+10 3.38516e+11 1.82295e+11 1.08047e+11 9.0488e+10 2.48028e+11 1.75697e+11 1.4231e+11 2.9545e+10 5.7101e+10 cash_flow \u00b6 Details Description : Retrieves cash flow data for most recent four quarters or most recent four years as well as the trailing 12 months Return : pandas.DataFrame Arguments Argument Type Default Required Options frequency str a optional Annual - a Quarter - q trailing bool True optional True False Example aapl = Ticker ( 'aapl' ) aapl . cash_flow ( trailing = False ) Data symbol asOfDate periodType BeginningCashPosition CapitalExpenditure CashDividendsPaid CashFlowFromContinuingFinancingActivities ChangeInAccountPayable ChangeInCashSupplementalAsReported ChangeInInventory ChangeInWorkingCapital ChangesInAccountReceivables CommonStockIssuance DeferredIncomeTax DepreciationAndAmortization EndCashPosition FreeCashFlow InvestingCashFlow NetIncome NetOtherFinancingCharges NetOtherInvestingChanges OperatingCashFlow OtherNonCashItems PurchaseOfBusiness PurchaseOfInvestment RepaymentOfDebt RepurchaseOfCapitalStock SaleOfInvestment StockBasedCompensation aapl 2016-09-30 00:00:00 12M 2.112e+10 -1.3548e+10 -1.215e+10 -2.0483e+10 1.791e+09 -6.36e+08 2.17e+08 4.84e+08 1.095e+09 4.95e+08 4.938e+09 1.0505e+10 2.0484e+10 5.2276e+10 -4.5977e+10 4.5687e+10 -1.163e+09 -1.1e+08 6.5824e+10 nan -2.97e+08 -1.43816e+11 -2.5e+09 -2.9722e+10 1.11794e+11 4.21e+09 aapl 2017-09-30 00:00:00 12M 2.0484e+10 -1.2795e+10 -1.2769e+10 -1.7347e+10 9.618e+09 -1.95e+08 -2.723e+09 -5.55e+09 -2.093e+09 5.55e+08 5.966e+09 1.0157e+10 2.0289e+10 5.0803e+10 -4.6446e+10 4.8351e+10 -1.247e+09 2.2e+08 6.3598e+10 -1.66e+08 -3.29e+08 -1.59881e+11 -3.5e+09 -3.29e+10 1.26339e+11 4.84e+09 aapl 2018-09-30 00:00:00 12M 2.0289e+10 -1.3313e+10 -1.3712e+10 -8.7876e+10 9.175e+09 5.624e+09 8.28e+08 3.4694e+10 -5.322e+09 6.69e+08 -3.259e+10 1.0903e+10 2.5913e+10 6.4121e+10 1.6066e+10 5.9531e+10 -2.527e+09 -7.45e+08 7.7434e+10 -4.44e+08 -7.21e+08 -7.3227e+10 -6.5e+09 -7.2738e+10 1.04072e+11 5.34e+09 aapl 2019-09-30 00:00:00 12M 2.5913e+10 -1.0495e+10 -1.4119e+10 -9.0976e+10 -1.923e+09 2.4311e+10 -2.89e+08 -3.488e+09 2.45e+08 7.81e+08 -3.4e+08 1.2547e+10 5.0224e+10 5.8896e+10 4.5896e+10 5.5256e+10 -2.922e+09 -1.078e+09 6.9391e+10 -6.52e+08 -6.24e+08 -4.0631e+10 -8.805e+09 -6.6897e+10 9.8724e+10 6.068e+09 income_statement \u00b6 Details Description : Retrieves income statement data for most recent four quarters or most recent four years as well as trailing 12 months. Return : pandas.DataFrame Arguments Argument Type Default Required Options frequency str a optional Annual - a Quarter - q trailing bool True optional True False Example aapl = Ticker ( 'aapl' ) aapl . income_statement () Data symbol asOfDate periodType BasicAverageShares BasicEPS CostOfRevenue DilutedAverageShares DilutedEPS DilutedNIAvailtoComStockholders EBIT EBITDA GrossProfit InterestExpense InterestExpenseNonOperating InterestIncome InterestIncomeNonOperating NetIncome NetIncomeCommonStockholders NetIncomeContinuousOperations NetIncomeFromContinuingAndDiscontinuedOperation NetIncomeFromContinuingOperationNetMinorityInterest NetIncomeIncludingNoncontrollingInterests NetInterestIncome NetNonOperatingInterestIncomeExpense NormalizedEBITDA NormalizedIncome OperatingExpense OperatingIncome OperatingRevenue OtherIncomeExpense OtherNonOperatingIncomeExpenses PretaxIncome ReconciledCostOfRevenue ReconciledDepreciation ResearchAndDevelopment SellingGeneralAndAdministration TaxEffectOfUnusualItems TaxProvision TaxRateForCalcs TotalExpenses TotalOperatingIncomeAsReported TotalRevenue aapl 2016-09-30 00:00:00 12M 5.47082e+09 8.35 1.31376e+11 5.50028e+09 8.31 4.5687e+10 6.2828e+10 nan 8.4263e+10 1.456e+09 1.456e+09 3.999e+09 3.999e+09 4.5687e+10 4.5687e+10 4.5687e+10 4.5687e+10 4.5687e+10 4.5687e+10 2.543e+09 2.543e+09 7.3333e+10 4.5687e+10 2.4239e+10 6.0024e+10 2.15639e+11 -1.195e+09 -1.195e+09 6.1372e+10 1.31376e+11 1.0505e+10 1.0045e+10 1.4194e+10 0 1.5685e+10 0.256 1.55615e+11 6.0024e+10 2.15639e+11 aapl 2017-09-30 00:00:00 12M 5.21724e+09 9.27 1.41048e+11 5.25169e+09 9.21 4.8351e+10 6.6412e+10 nan 8.8186e+10 2.323e+09 2.323e+09 5.201e+09 5.201e+09 4.8351e+10 4.8351e+10 4.8351e+10 4.8351e+10 4.8351e+10 4.8351e+10 2.878e+09 2.878e+09 7.6569e+10 4.8351e+10 2.6842e+10 6.1344e+10 2.29234e+11 -1.33e+08 -1.33e+08 6.4089e+10 1.41048e+11 1.0157e+10 1.1581e+10 1.5261e+10 0 1.5738e+10 0.246 1.6789e+11 6.1344e+10 2.29234e+11 aapl 2018-09-30 00:00:00 12M 4.95538e+09 12.01 1.63756e+11 5.00011e+09 11.91 5.9531e+10 7.6143e+10 nan 1.01839e+11 3.24e+09 3.24e+09 5.686e+09 5.686e+09 5.9531e+10 5.9531e+10 5.9531e+10 5.9531e+10 5.9531e+10 5.9531e+10 2.446e+09 2.446e+09 8.7046e+10 5.9531e+10 3.0941e+10 7.0898e+10 2.65595e+11 -4.41e+08 -4.41e+08 7.2903e+10 1.63756e+11 1.0903e+10 1.4236e+10 1.6705e+10 0 1.3372e+10 0.183 1.94697e+11 7.0898e+10 2.65595e+11 aapl 2019-09-30 00:00:00 12M 4.61783e+09 11.97 1.61782e+11 4.64891e+09 11.89 5.5256e+10 6.9313e+10 nan 9.8392e+10 3.576e+09 3.576e+09 4.961e+09 4.961e+09 5.5256e+10 5.5256e+10 5.5256e+10 5.5256e+10 5.5256e+10 5.5256e+10 1.385e+09 1.385e+09 8.186e+10 5.5256e+10 3.4462e+10 6.393e+10 2.60174e+11 4.22e+08 4.22e+08 6.5737e+10 1.61782e+11 1.2547e+10 1.6217e+10 1.8245e+10 0 1.0481e+10 0.159 1.96244e+11 6.393e+10 2.60174e+11 aapl 2020-03-31 00:00:00 TTM nan nan 1.65854e+11 nan nan 5.7215e+10 7.0309e+10 8.2023e+10 1.02127e+11 3.218e+09 3.218e+09 4.39e+09 4.39e+09 5.7215e+10 5.7215e+10 5.7215e+10 5.7215e+10 5.7215e+10 5.7215e+10 1.172e+09 1.172e+09 8.2023e+10 5.7215e+10 3.6536e+10 6.5591e+10 2.67981e+11 3.28e+08 3.28e+08 6.7091e+10 1.65854e+11 1.1714e+10 1.7383e+10 1.9153e+10 0 9.876e+09 0.147203 2.0239e+11 6.5591e+10 2.67981e+11 valuation_measures \u00b6 Details Description : Retrieves valuation measures for most recent four quarters as well as the most recent date Return : pandas.DataFrame Example aapl = Ticker ( 'aapl' ) aapl . valuation_measures Data symbol asOfDate periodType EnterpriseValue EnterprisesValueEBITDARatio EnterprisesValueRevenueRatio ForwardPeRatio MarketCap PbRatio PeRatio PegRatio PsRatio aapl 2019-06-30 00:00:00 3M 9.43183e+11 60.0371 17.5283 15.9744 9.10645e+11 8.47207 16.5762 1.4501 3.68445 aapl 2019-09-30 00:00:00 3M 1.00896e+12 50.1569 15.7551 17.2712 9.95152e+11 10.3172 19.0127 2.0355 4.09034 aapl 2019-12-31 00:00:00 3M 1.29513e+12 43.8746 14.1053 22.1729 1.28764e+12 14.23 24.6972 2.0292 5.24708 aapl 2020-03-05 00:00:00 TTM 1.2828e+12 nan nan 22.1239 1.28167e+12 14.3153 23.0646 1.7784 5.00004 aapl 2020-03-08 00:00:00 TTM nan 15.4204 4.79222 nan nan nan nan nan nan aapl 2020-03-31 00:00:00 3M 1.10068e+12 65.9957 18.8753 19.6464 1.09955e+12 12.2812 20.0228 1.5803 4.34064 aapl 2020-05-08 00:00:00 TTM 1.35966e+12 nan nan 26.178 1.34421e+12 17.14 24.2478 2.171 5.20229 aapl 2020-05-11 00:00:00 TTM nan 16.5766 5.07373 nan nan nan nan nan nan aapl 2020-05-28 00:00:00 TTM 1.39486e+12 nan nan 26.8097 1.3794e+12 17.5888 24.8827 2.2278 5.3385 aapl 2020-05-29 00:00:00 TTM nan 17.0057 5.20506 nan nan nan nan nan nan aapl 2020-06-12 00:00:00 TTM 1.48393e+12 nan nan 22.5734 1.46847e+12 18.7245 26.4894 1.8786 5.68322 aapl 2020-06-15 00:00:00 TTM nan 18.0916 5.53744 nan nan nan nan nan nan aapl 2020-07-14 00:00:00 TTM 1.69817e+12 nan nan 25.8398 1.68272e+12 21.4564 30.3542 2.1527 6.51239 aapl 2020-07-15 00:00:00 TTM nan 20.7036 6.33692 nan nan nan nan nan nan aapl 2020-07-16 00:00:00 TTM 1.6889e+12 nan nan 26.3158 1.67344e+12 21.3381 30.1869 2.1897 6.47649 aapl 2020-07-18 00:00:00 TTM nan 20.5906 6.30231 nan nan nan nan nan nan aapl 2020-07-29 00:00:00 TTM 1.6632e+12 nan nan 25.1256 1.64774e+12 21.0104 29.7232 2.0905 6.37702 aapl 2020-07-30 00:00:00 TTM nan 20.2772 6.2064 nan nan nan nan nan nan Multiple \u00b6 all_financial_data \u00b6 Details Description : Retrieve all financial data, including income statement, balance sheet, cash flow, and valuation measures. Return : pandas.DataFrame Arguments Argument Type Default Required Options frequency str a optional Annual - a Quarter - q Warning No trailing twelve month (TTM) data will be returned with this method Example aapl = Ticker ( 'aapl' ) aapl . all_financial_data () Data symbol asOfDate periodType AccountsPayable AccountsReceivable AccumulatedDepreciation AllowanceForDoubtfulAccountsReceivable AvailableForSaleSecurities BasicAverageShares BasicEPS BeginningCashPosition CapitalExpenditure CapitalStock CashAndCashEquivalents CashCashEquivalentsAndShortTermInvestments CashDividendsPaid CashEquivalents CashFinancial CashFlowFromContinuingFinancingActivities ChangeInAccountPayable ChangeInCashSupplementalAsReported ChangeInInventory ChangeInWorkingCapital ChangesInAccountReceivables CommercialPaper CommonStock CommonStockEquity CommonStockIssuance CostOfRevenue CurrentAccruedExpenses CurrentAssets CurrentDebt CurrentDebtAndCapitalLeaseObligation CurrentDeferredLiabilities CurrentDeferredRevenue CurrentLiabilities DeferredIncomeTax DepreciationAndAmortization DilutedAverageShares DilutedEPS DilutedNIAvailtoComStockholders EBIT EndCashPosition EnterpriseValue EnterprisesValueEBITDARatio EnterprisesValueRevenueRatio ForwardPeRatio FreeCashFlow GainsLossesNotAffectingRetainedEarnings Goodwill GoodwillAndOtherIntangibleAssets GrossAccountsReceivable GrossPPE GrossProfit InterestExpense InterestExpenseNonOperating InterestIncome InterestIncomeNonOperating Inventory InvestedCapital InvestingCashFlow InvestmentinFinancialAssets InvestmentsAndAdvances LandAndImprovements Leases LongTermDebt LongTermDebtAndCapitalLeaseObligation MachineryFurnitureEquipment MarketCap NetDebt NetIncome NetIncomeCommonStockholders NetIncomeContinuousOperations NetIncomeFromContinuingAndDiscontinuedOperation NetIncomeFromContinuingOperationNetMinorityInterest NetIncomeIncludingNoncontrollingInterests NetInterestIncome NetNonOperatingInterestIncomeExpense NetOtherFinancingCharges NetOtherInvestingChanges NetPPE NetTangibleAssets NonCurrentDeferredLiabilities NonCurrentDeferredRevenue NonCurrentDeferredTaxesLiabilities NormalizedEBITDA NormalizedIncome OperatingCashFlow OperatingExpense OperatingIncome OperatingRevenue OrdinarySharesNumber OtherCurrentAssets OtherCurrentBorrowings OtherCurrentLiabilities OtherIncomeExpense OtherIntangibleAssets OtherNonCashItems OtherNonCurrentAssets OtherNonCurrentLiabilities OtherNonOperatingIncomeExpenses OtherReceivables OtherShortTermInvestments Payables PayablesAndAccruedExpenses PbRatio PeRatio PegRatio PretaxIncome Properties PsRatio PurchaseOfBusiness PurchaseOfInvestment Receivables ReconciledCostOfRevenue ReconciledDepreciation RepaymentOfDebt RepurchaseOfCapitalStock ResearchAndDevelopment RetainedEarnings SaleOfInvestment SellingGeneralAndAdministration ShareIssued StockBasedCompensation StockholdersEquity TangibleBookValue TaxEffectOfUnusualItems TaxProvision TaxRateForCalcs TotalAssets TotalCapitalization TotalDebt TotalEquityGrossMinorityInterest TotalExpenses TotalLiabilitiesNetMinorityInterest TotalNonCurrentAssets TotalNonCurrentLiabilitiesNetMinorityInterest TotalOperatingIncomeAsReported TotalRevenue TradeandOtherPayablesNonCurrent WorkingCapital aapl 2016-09-30 00:00:00 12M 3.7294e+10 1.5754e+10 -3.4235e+10 -5.3e+07 1.7043e+11 5.47082e+09 8.35 2.112e+10 -1.3548e+10 3.1251e+10 2.0484e+10 6.7155e+10 -1.215e+10 1.1883e+10 8.601e+09 -2.0483e+10 1.791e+09 -6.36e+08 2.17e+08 4.84e+08 1.095e+09 8.105e+09 3.1251e+10 1.28249e+11 4.95e+08 1.31376e+11 2.2027e+10 1.06869e+11 1.1605e+10 1.1605e+10 8.08e+09 8.08e+09 7.9006e+10 4.938e+09 1.0505e+10 5.50028e+09 8.31 4.5687e+10 6.2828e+10 2.0484e+10 6.26433e+11 8.5423 2.90501 12.6582 5.2276e+10 6.34e+08 5.414e+09 8.62e+09 1.5807e+10 6.1245e+10 8.4263e+10 1.456e+09 1.456e+09 3.999e+09 3.999e+09 2.132e+09 2.15281e+11 -4.5977e+10 1.7043e+11 1.7043e+11 1.0185e+10 6.517e+09 7.5427e+10 7.5427e+10 4.4543e+10 6.03254e+11 6.6548e+10 4.5687e+10 4.5687e+10 4.5687e+10 4.5687e+10 4.5687e+10 4.5687e+10 2.543e+09 2.543e+09 -1.163e+09 -1.1e+08 2.701e+10 1.19629e+11 2.8949e+10 2.93e+09 2.6019e+10 7.3333e+10 4.5687e+10 6.5824e+10 2.4239e+10 6.0024e+10 2.15639e+11 5.33617e+09 8.283e+09 3.5e+09 nan -1.195e+09 3.206e+09 nan 8.757e+09 1.0055e+10 -1.195e+09 1.3545e+10 4.6671e+10 3.7294e+10 5.9321e+10 4.76726 13.1607 2.4275 6.1372e+10 0 2.8598 -2.97e+08 -1.43816e+11 2.9299e+10 1.31376e+11 1.0505e+10 -2.5e+09 -2.9722e+10 1.0045e+10 9.6364e+10 1.11794e+11 1.4194e+10 5.33617e+09 4.21e+09 1.28249e+11 1.19629e+11 0 1.5685e+10 0.256 3.21686e+11 2.03676e+11 8.7032e+10 1.28249e+11 1.55615e+11 1.93437e+11 2.14817e+11 1.14431e+11 6.0024e+10 2.15639e+11 nan 2.7863e+10 aapl 2017-09-30 00:00:00 12M 4.9049e+10 1.7874e+10 -4.1293e+10 -5.8e+07 1.94714e+11 5.21724e+09 9.27 2.0484e+10 -1.2795e+10 3.5867e+10 2.0289e+10 7.4181e+10 -1.2769e+10 1.2307e+10 7.982e+09 -1.7347e+10 9.618e+09 -1.95e+08 -2.723e+09 -5.55e+09 -2.093e+09 1.1977e+10 3.5867e+10 1.34047e+11 5.55e+08 1.41048e+11 2.5744e+10 1.28645e+11 1.8473e+10 1.8473e+10 7.548e+09 7.548e+09 1.00814e+11 5.966e+09 1.0157e+10 5.25169e+09 9.21 4.8351e+10 6.6412e+10 2.0289e+10 8.27645e+11 10.8091 3.61048 14.245 5.0803e+10 -1.5e+08 5.717e+09 8.015e+09 1.7932e+10 7.5076e+10 8.8186e+10 2.323e+09 2.323e+09 5.201e+09 5.201e+09 4.855e+09 2.49727e+11 -4.6446e+10 1.94714e+11 1.94714e+11 1.3587e+10 7.279e+09 9.7207e+10 9.7207e+10 5.421e+10 7.96065e+11 9.5391e+10 4.8351e+10 4.8351e+10 4.8351e+10 4.8351e+10 4.8351e+10 4.8351e+10 2.878e+09 2.878e+09 -1.247e+09 2.2e+08 3.3783e+10 1.26032e+11 3.434e+10 2.836e+09 3.1504e+10 7.6569e+10 4.8351e+10 6.3598e+10 2.6842e+10 6.1344e+10 2.29234e+11 5.1262e+09 1.3936e+10 6.496e+09 nan -1.33e+08 2.298e+09 -1.66e+08 1.0162e+10 8.911e+09 -1.33e+08 1.7799e+10 5.3892e+10 4.9049e+10 7.4793e+10 5.96602 17.4541 2.087 6.4089e+10 0 3.65748 -3.29e+08 -1.59881e+11 3.5673e+10 1.41048e+11 1.0157e+10 -3.5e+09 -3.29e+10 1.1581e+10 9.833e+10 1.26339e+11 1.5261e+10 5.1262e+09 4.84e+09 1.34047e+11 1.26032e+11 0 1.5738e+10 0.246 3.75319e+11 2.31254e+11 1.1568e+11 1.34047e+11 1.6789e+11 2.41272e+11 2.46674e+11 1.40458e+11 6.1344e+10 2.29234e+11 nan 2.7831e+10 aapl 2018-09-30 00:00:00 12M 5.5888e+10 2.3186e+10 -4.9099e+10 nan 1.70799e+11 4.95538e+09 12.01 2.0289e+10 -1.3313e+10 4.0201e+10 2.5913e+10 6.6301e+10 -1.3712e+10 1.4338e+10 1.1575e+10 -8.7876e+10 9.175e+09 5.624e+09 8.28e+08 3.4694e+10 -5.322e+09 1.1964e+10 4.0201e+10 1.07147e+11 6.69e+08 1.63756e+11 nan 1.31339e+11 2.0748e+10 2.0748e+10 7.543e+09 7.543e+09 1.16866e+11 -3.259e+10 1.0903e+10 5.00011e+09 11.91 5.9531e+10 7.6143e+10 2.5913e+10 1.13394e+12 13.0269 4.26942 16.6945 6.4121e+10 -3.454e+09 nan nan nan 9.0403e+10 1.01839e+11 3.24e+09 3.24e+09 5.686e+09 5.686e+09 3.956e+09 2.2163e+11 1.6066e+10 1.70799e+11 1.70799e+11 1.6216e+10 8.205e+09 9.3735e+10 9.3735e+10 6.5982e+10 1.09031e+12 8.857e+10 5.9531e+10 5.9531e+10 5.9531e+10 5.9531e+10 5.9531e+10 5.9531e+10 2.446e+09 2.446e+09 -2.527e+09 -7.45e+08 4.1304e+10 1.07147e+11 3.223e+09 2.797e+09 4.26e+08 8.7046e+10 5.9531e+10 7.7434e+10 3.0941e+10 7.0898e+10 2.65595e+11 4.75499e+09 1.2087e+10 8.784e+09 3.2687e+10 -4.41e+08 nan -4.44e+08 2.2283e+10 1.1165e+10 -4.41e+08 2.5809e+10 4.0388e+10 5.5888e+10 5.5888e+10 9.33797 20.4105 1.2848 7.2903e+10 0 4.49591 -7.21e+08 -7.3227e+10 4.8995e+10 1.63756e+11 1.0903e+10 -6.5e+09 -7.2738e+10 1.4236e+10 7.04e+10 1.04072e+11 1.6705e+10 4.75499e+09 5.34e+09 1.07147e+11 1.07147e+11 0 1.3372e+10 0.183 3.65725e+11 2.00882e+11 1.14483e+11 1.07147e+11 1.94697e+11 2.58578e+11 2.34386e+11 1.41712e+11 7.0898e+10 2.65595e+11 3.3589e+10 1.4473e+10 aapl 2019-09-30 00:00:00 12M 4.6236e+10 2.2926e+10 -5.8579e+10 nan 1.05341e+11 4.61783e+09 11.97 2.5913e+10 -1.0495e+10 4.5174e+10 4.8844e+10 1.00557e+11 -1.4119e+10 3.664e+10 1.2204e+10 -9.0976e+10 -1.923e+09 2.4311e+10 -2.89e+08 -3.488e+09 2.45e+08 5.98e+09 4.5174e+10 9.0488e+10 7.81e+08 1.61782e+11 nan 1.62819e+11 1.624e+10 1.624e+10 5.522e+09 5.522e+09 1.05718e+11 -3.4e+08 1.2547e+10 4.64891e+09 11.89 5.5256e+10 6.9313e+10 5.0224e+10 1.00896e+12 12.3254 3.878 17.2712 5.8896e+10 -5.84e+08 nan nan nan 9.5957e+10 9.8392e+10 3.576e+09 3.576e+09 4.961e+09 4.961e+09 4.106e+09 1.98535e+11 4.5896e+10 1.05341e+11 1.05341e+11 1.7085e+10 9.075e+09 9.1807e+10 9.1807e+10 6.9797e+10 9.95152e+11 5.9203e+10 5.5256e+10 5.5256e+10 5.5256e+10 5.5256e+10 5.5256e+10 5.5256e+10 1.385e+09 1.385e+09 -2.922e+09 -1.078e+09 3.7378e+10 9.0488e+10 nan nan nan 8.186e+10 5.5256e+10 6.9391e+10 3.4462e+10 6.393e+10 2.60174e+11 4.44324e+09 1.2352e+10 1.026e+10 3.772e+10 4.22e+08 nan -6.52e+08 3.2978e+10 2.0958e+10 4.22e+08 2.2878e+10 5.1713e+10 4.6236e+10 4.6236e+10 10.3172 19.0127 2.0355 6.5737e+10 0 4.09034 -6.24e+08 -4.0631e+10 4.5804e+10 1.61782e+11 1.2547e+10 -8.805e+09 -6.6897e+10 1.6217e+10 4.5898e+10 9.8724e+10 1.8245e+10 4.44324e+09 6.068e+09 9.0488e+10 9.0488e+10 0 1.0481e+10 0.159 3.38516e+11 1.82295e+11 1.08047e+11 9.0488e+10 1.96244e+11 2.48028e+11 1.75697e+11 1.4231e+11 6.393e+10 2.60174e+11 2.9545e+10 5.7101e+10 get_financial_data \u00b6 Details Description : Obtain specific data from either cash flow, income statement, balance sheet, or valuation measures. Return : pandas.DataFrame Arguments Argument Type Default Required Options types list or str None Required See options below frequency str a optional Annual - a Quarter - q trailing bool True optional True False Warning If you try and use all of the options below AND trailing=True , you will receive an error because the requested URL will be too long Balance Sheet [ 'AccountsPayable' , 'AccountsReceivable' , 'AccruedInterestReceivable' , 'AccumulatedDepreciation' , 'AdditionalPaidInCapital' , 'AllowanceForDoubtfulAccountsReceivable' , 'AssetsHeldForSaleCurrent' , 'AvailableForSaleSecurities' , 'BuildingsAndImprovements' , 'CapitalLeaseObligations' , 'CapitalStock' , 'CashAndCashEquivalents' , 'CashCashEquivalentsAndShortTermInvestments' , 'CashEquivalents' , 'CashFinancial' , 'CommercialPaper' , 'CommonStock' , 'CommonStockEquity' , 'ConstructionInProgress' , 'CurrentAccruedExpenses' , 'CurrentAssets' , 'CurrentCapitalLeaseObligation' , 'CurrentDebt' , 'CurrentDebtAndCapitalLeaseObligation' , 'CurrentDeferredAssets' , 'CurrentDeferredLiabilities' , 'CurrentDeferredRevenue' , 'CurrentDeferredTaxesAssets' , 'CurrentDeferredTaxesLiabilities' , 'CurrentLiabilities' , 'CurrentNotesPayable' , 'CurrentProvisions' , 'DefinedPensionBenefit' , 'DerivativeProductLiabilities' , 'DividendsPayable' , 'DuefromRelatedPartiesCurrent' , 'DuefromRelatedPartiesNonCurrent' , 'DuetoRelatedPartiesCurrent' , 'DuetoRelatedPartiesNonCurrent' , 'EmployeeBenefits' , 'FinancialAssets' , 'FinancialAssetsDesignatedasFairValueThroughProfitorLossTotal' , 'FinishedGoods' , 'FixedAssetsRevaluationReserve' , 'ForeignCurrencyTranslationAdjustments' , 'GainsLossesNotAffectingRetainedEarnings' , 'GeneralPartnershipCapital' , 'Goodwill' , 'GoodwillAndOtherIntangibleAssets' , 'GrossAccountsReceivable' , 'GrossPPE' , 'HedgingAssetsCurrent' , 'HeldToMaturitySecurities' , 'IncomeTaxPayable' , 'InterestPayable' , 'InventoriesAdjustmentsAllowances' , 'Inventory' , 'InvestedCapital' , 'InvestmentProperties' , 'InvestmentinFinancialAssets' , 'InvestmentsAndAdvances' , 'InvestmentsInOtherVenturesUnderEquityMethod' , 'InvestmentsinAssociatesatCost' , 'InvestmentsinJointVenturesatCost' , 'InvestmentsinSubsidiariesatCost' , 'LandAndImprovements' , 'Leases' , 'LiabilitiesHeldforSaleNonCurrent' , 'LimitedPartnershipCapital' , 'LineOfCredit' , 'LoansReceivable' , 'LongTermCapitalLeaseObligation' , 'LongTermDebt' , 'LongTermDebtAndCapitalLeaseObligation' , 'LongTermEquityInvestment' , 'LongTermProvisions' , 'MachineryFurnitureEquipment' , 'MinimumPensionLiabilities' , 'MinorityInterest' , 'NetDebt' , 'NetPPE' , 'NetTangibleAssets' , 'NonCurrentAccountsReceivable' , 'NonCurrentAccruedExpenses' , 'NonCurrentDeferredAssets' , 'NonCurrentDeferredLiabilities' , 'NonCurrentDeferredRevenue' , 'NonCurrentDeferredTaxesAssets' , 'NonCurrentDeferredTaxesLiabilities' , 'NonCurrentNoteReceivables' , 'NonCurrentPensionAndOtherPostretirementBenefitPlans' , 'NonCurrentPrepaidAssets' , 'NotesReceivable' , 'OrdinarySharesNumber' , 'OtherCapitalStock' , 'OtherCurrentAssets' , 'OtherCurrentBorrowings' , 'OtherCurrentLiabilities' , 'OtherEquityAdjustments' , 'OtherEquityInterest' , 'OtherIntangibleAssets' , 'OtherInventories' , 'OtherInvestments' , 'OtherNonCurrentAssets' , 'OtherNonCurrentLiabilities' , 'OtherPayable' , 'OtherProperties' , 'OtherReceivables' , 'OtherShortTermInvestments' , 'Payables' , 'PayablesAndAccruedExpenses' , 'PensionandOtherPostRetirementBenefitPlansCurrent' , 'PreferredSecuritiesOutsideStockEquity' , 'PreferredSharesNumber' , 'PreferredStock' , 'PreferredStockEquity' , 'PrepaidAssets' , 'Properties' , 'RawMaterials' , 'Receivables' , 'ReceivablesAdjustmentsAllowances' , 'RestrictedCash' , 'RestrictedCommonStock' , 'RetainedEarnings' , 'ShareIssued' , 'StockholdersEquity' , 'TangibleBookValue' , 'TaxesReceivable' , 'TotalAssets' , 'TotalCapitalization' , 'TotalDebt' , 'TotalEquityGrossMinorityInterest' , 'TotalLiabilitiesNetMinorityInterest' , 'TotalNonCurrentAssets' , 'TotalNonCurrentLiabilitiesNetMinorityInterest' , 'TotalPartnershipCapital' , 'TotalTaxPayable' , 'TradeandOtherPayablesNonCurrent' , 'TradingSecurities' , 'TreasurySharesNumber' , 'TreasuryStock' , 'UnrealizedGainLoss' , 'WorkInProcess' , 'WorkingCapital' ] Cash Flow [ 'RepaymentOfDebt' , 'RepurchaseOfCapitalStock' , 'CashDividendsPaid' , 'CommonStockIssuance' , 'ChangeInWorkingCapital' , 'CapitalExpenditure' , 'CashFlowFromContinuingFinancingActivities' , 'NetIncome' , 'FreeCashFlow' , 'ChangeInCashSupplementalAsReported' , 'SaleOfInvestment' , 'EndCashPosition' , 'OperatingCashFlow' , 'DeferredIncomeTax' , 'NetOtherInvestingChanges' , 'ChangeInAccountPayable' , 'NetOtherFinancingCharges' , 'PurchaseOfInvestment' , 'ChangeInInventory' , 'DepreciationAndAmortization' , 'PurchaseOfBusiness' , 'InvestingCashFlow' , 'ChangesInAccountReceivables' , 'StockBasedCompensation' , 'OtherNonCashItems' , 'BeginningCashPosition' ] Income Statement [ 'Amortization' , 'AmortizationOfIntangiblesIncomeStatement' , 'AverageDilutionEarnings' , 'BasicAccountingChange' , 'BasicAverageShares' , 'BasicContinuousOperations' , 'BasicDiscontinuousOperations' , 'BasicEPS' , 'BasicEPSOtherGainsLosses' , 'BasicExtraordinary' , 'ContinuingAndDiscontinuedBasicEPS' , 'ContinuingAndDiscontinuedDilutedEPS' , 'CostOfRevenue' , 'DepletionIncomeStatement' , 'DepreciationAmortizationDepletionIncomeStatement' , 'DepreciationAndAmortizationInIncomeStatement' , 'DepreciationIncomeStatement' , 'DilutedAccountingChange' , 'DilutedAverageShares' , 'DilutedContinuousOperations' , 'DilutedDiscontinuousOperations' , 'DilutedEPS' , 'DilutedEPSOtherGainsLosses' , 'DilutedExtraordinary' , 'DilutedNIAvailtoComStockholders' , 'DividendPerShare' , 'EBIT' , 'EBITDA' , 'EarningsFromEquityInterest' , 'EarningsFromEquityInterestNetOfTax' , 'ExciseTaxes' , 'GainOnSaleOfBusiness' , 'GainOnSaleOfPPE' , 'GainOnSaleOfSecurity' , 'GeneralAndAdministrativeExpense' , 'GrossProfit' , 'ImpairmentOfCapitalAssets' , 'InsuranceAndClaims' , 'InterestExpense' , 'InterestExpenseNonOperating' , 'InterestIncome' , 'InterestIncomeNonOperating' , 'MinorityInterests' , 'NetIncome' , 'NetIncomeCommonStockholders' , 'NetIncomeContinuousOperations' , 'NetIncomeDiscontinuousOperations' , 'NetIncomeExtraordinary' , 'NetIncomeFromContinuingAndDiscontinuedOperation' , 'NetIncomeFromContinuingOperationNetMinorityInterest' , 'NetIncomeFromTaxLossCarryforward' , 'NetIncomeIncludingNoncontrollingInterests' , 'NetInterestIncome' , 'NetNonOperatingInterestIncomeExpense' , 'NormalizedBasicEPS' , 'NormalizedDilutedEPS' , 'NormalizedEBITDA' , 'NormalizedIncome' , 'OperatingExpense' , 'OperatingIncome' , 'OperatingRevenue' , 'OtherGandA' , 'OtherIncomeExpense' , 'OtherNonOperatingIncomeExpenses' , 'OtherOperatingExpenses' , 'OtherSpecialCharges' , 'OtherTaxes' , 'OtherunderPreferredStockDividend' , 'PreferredStockDividends' , 'PretaxIncome' , 'ProvisionForDoubtfulAccounts' , 'ReconciledCostOfRevenue' , 'ReconciledDepreciation' , 'RentAndLandingFees' , 'RentExpenseSupplemental' , 'ReportedNormalizedBasicEPS' , 'ReportedNormalizedDilutedEPS' , 'ResearchAndDevelopment' , 'RestructuringAndMergernAcquisition' , 'SalariesAndWages' , 'SecuritiesAmortization' , 'SellingAndMarketingExpense' , 'SellingGeneralAndAdministration' , 'SpecialIncomeCharges' , 'TaxEffectOfUnusualItems' , 'TaxLossCarryforwardBasicEPS' , 'TaxLossCarryforwardDilutedEPS' , 'TaxProvision' , 'TaxRateForCalcs' , 'TotalExpenses' , 'TotalOperatingIncomeAsReported' , 'TotalOtherFinanceCost' , 'TotalRevenue' , 'TotalUnusualItems' , 'TotalUnusualItemsExcludingGoodwill' , 'WriteOff' ] Valuation Measures [ 'ForwardPeRatio' , 'PsRatio' , 'PbRatio' , 'EnterprisesValueEBITDARatio' , 'EnterprisesValueRevenueRatio' , 'PeRatio' , 'MarketCap' , 'EnterpriseValue' , 'PegRatio' ] Example aapl = Ticker ( 'aapl' ) types = [ 'TotalDebt' , 'TotalAssets' , 'EBIT' , 'EBITDA' , 'PeRatio' ] aapl . get_financial_data ( types , trailing = False ) Data symbol asOfDate periodType EBIT PeRatio TotalAssets TotalDebt aapl 2016-09-30 00:00:00 12M 6.2828e+10 13.1607 3.21686e+11 8.7032e+10 aapl 2017-09-30 00:00:00 12M 6.6412e+10 17.4541 3.75319e+11 1.1568e+11 aapl 2018-09-30 00:00:00 12M 7.6143e+10 20.4105 3.65725e+11 1.14483e+11 aapl 2019-09-30 00:00:00 12M 6.9313e+10 19.0127 3.38516e+11 1.08047e+11","title":"Financials"},{"location":"guide/ticker/financials/#individual","text":"","title":"Individual"},{"location":"guide/ticker/financials/#balance_sheet","text":"Details Description : Retrieves balance sheet data for most recent four quarters or most recent four years as well as trailing 12 months. Return : pandas.DataFrame Arguments Argument Type Default Required Options frequency str a optional Annual - a Quarter - q trailing bool True optional True False Example aapl = Ticker ( 'aapl' ) aapl . balance_sheet () Data symbol asOfDate periodType AccountsPayable AccountsReceivable AccumulatedDepreciation AllowanceForDoubtfulAccountsReceivable AvailableForSaleSecurities CapitalStock CashAndCashEquivalents CashCashEquivalentsAndShortTermInvestments CashEquivalents CashFinancial CommercialPaper CommonStock CommonStockEquity CurrentAccruedExpenses CurrentAssets CurrentDebt CurrentDebtAndCapitalLeaseObligation CurrentDeferredLiabilities CurrentDeferredRevenue CurrentLiabilities GainsLossesNotAffectingRetainedEarnings Goodwill GoodwillAndOtherIntangibleAssets GrossAccountsReceivable GrossPPE Inventory InvestedCapital InvestmentinFinancialAssets InvestmentsAndAdvances LandAndImprovements Leases LongTermDebt LongTermDebtAndCapitalLeaseObligation MachineryFurnitureEquipment NetDebt NetPPE NetTangibleAssets NonCurrentDeferredLiabilities NonCurrentDeferredRevenue NonCurrentDeferredTaxesLiabilities OrdinarySharesNumber OtherCurrentAssets OtherCurrentBorrowings OtherCurrentLiabilities OtherIntangibleAssets OtherNonCurrentAssets OtherNonCurrentLiabilities OtherReceivables OtherShortTermInvestments Payables PayablesAndAccruedExpenses Properties Receivables RetainedEarnings ShareIssued StockholdersEquity TangibleBookValue TotalAssets TotalCapitalization TotalDebt TotalEquityGrossMinorityInterest TotalLiabilitiesNetMinorityInterest TotalNonCurrentAssets TotalNonCurrentLiabilitiesNetMinorityInterest TradeandOtherPayablesNonCurrent WorkingCapital aapl 2016-09-30 00:00:00 12M 3.7294e+10 1.5754e+10 -3.4235e+10 -5.3e+07 1.7043e+11 3.1251e+10 2.0484e+10 6.7155e+10 1.1883e+10 8.601e+09 8.105e+09 3.1251e+10 1.28249e+11 2.2027e+10 1.06869e+11 1.1605e+10 1.1605e+10 8.08e+09 8.08e+09 7.9006e+10 6.34e+08 5.414e+09 8.62e+09 1.5807e+10 6.1245e+10 2.132e+09 2.15281e+11 1.7043e+11 1.7043e+11 1.0185e+10 6.517e+09 7.5427e+10 7.5427e+10 4.4543e+10 6.6548e+10 2.701e+10 1.19629e+11 2.8949e+10 2.93e+09 2.6019e+10 5.33617e+09 8.283e+09 3.5e+09 nan 3.206e+09 8.757e+09 1.0055e+10 1.3545e+10 4.6671e+10 3.7294e+10 5.9321e+10 0 2.9299e+10 9.6364e+10 5.33617e+09 1.28249e+11 1.19629e+11 3.21686e+11 2.03676e+11 8.7032e+10 1.28249e+11 1.93437e+11 2.14817e+11 1.14431e+11 nan 2.7863e+10 aapl 2017-09-30 00:00:00 12M 4.9049e+10 1.7874e+10 -4.1293e+10 -5.8e+07 1.94714e+11 3.5867e+10 2.0289e+10 7.4181e+10 1.2307e+10 7.982e+09 1.1977e+10 3.5867e+10 1.34047e+11 2.5744e+10 1.28645e+11 1.8473e+10 1.8473e+10 7.548e+09 7.548e+09 1.00814e+11 -1.5e+08 5.717e+09 8.015e+09 1.7932e+10 7.5076e+10 4.855e+09 2.49727e+11 1.94714e+11 1.94714e+11 1.3587e+10 7.279e+09 9.7207e+10 9.7207e+10 5.421e+10 9.5391e+10 3.3783e+10 1.26032e+11 3.434e+10 2.836e+09 3.1504e+10 5.1262e+09 1.3936e+10 6.496e+09 nan 2.298e+09 1.0162e+10 8.911e+09 1.7799e+10 5.3892e+10 4.9049e+10 7.4793e+10 0 3.5673e+10 9.833e+10 5.1262e+09 1.34047e+11 1.26032e+11 3.75319e+11 2.31254e+11 1.1568e+11 1.34047e+11 2.41272e+11 2.46674e+11 1.40458e+11 nan 2.7831e+10 aapl 2018-09-30 00:00:00 12M 5.5888e+10 2.3186e+10 -4.9099e+10 nan 1.70799e+11 4.0201e+10 2.5913e+10 6.6301e+10 1.4338e+10 1.1575e+10 1.1964e+10 4.0201e+10 1.07147e+11 nan 1.31339e+11 2.0748e+10 2.0748e+10 7.543e+09 7.543e+09 1.16866e+11 -3.454e+09 nan nan nan 9.0403e+10 3.956e+09 2.2163e+11 1.70799e+11 1.70799e+11 1.6216e+10 8.205e+09 9.3735e+10 9.3735e+10 6.5982e+10 8.857e+10 4.1304e+10 1.07147e+11 3.223e+09 2.797e+09 4.26e+08 4.75499e+09 1.2087e+10 8.784e+09 3.2687e+10 nan 2.2283e+10 1.1165e+10 2.5809e+10 4.0388e+10 5.5888e+10 5.5888e+10 0 4.8995e+10 7.04e+10 4.75499e+09 1.07147e+11 1.07147e+11 3.65725e+11 2.00882e+11 1.14483e+11 1.07147e+11 2.58578e+11 2.34386e+11 1.41712e+11 3.3589e+10 1.4473e+10 aapl 2019-09-30 00:00:00 12M 4.6236e+10 2.2926e+10 -5.8579e+10 nan 1.05341e+11 4.5174e+10 4.8844e+10 1.00557e+11 3.664e+10 1.2204e+10 5.98e+09 4.5174e+10 9.0488e+10 nan 1.62819e+11 1.624e+10 1.624e+10 5.522e+09 5.522e+09 1.05718e+11 -5.84e+08 nan nan nan 9.5957e+10 4.106e+09 1.98535e+11 1.05341e+11 1.05341e+11 1.7085e+10 9.075e+09 9.1807e+10 9.1807e+10 6.9797e+10 5.9203e+10 3.7378e+10 9.0488e+10 nan nan nan 4.44324e+09 1.2352e+10 1.026e+10 3.772e+10 nan 3.2978e+10 2.0958e+10 2.2878e+10 5.1713e+10 4.6236e+10 4.6236e+10 0 4.5804e+10 4.5898e+10 4.44324e+09 9.0488e+10 9.0488e+10 3.38516e+11 1.82295e+11 1.08047e+11 9.0488e+10 2.48028e+11 1.75697e+11 1.4231e+11 2.9545e+10 5.7101e+10","title":"balance_sheet"},{"location":"guide/ticker/financials/#cash_flow","text":"Details Description : Retrieves cash flow data for most recent four quarters or most recent four years as well as the trailing 12 months Return : pandas.DataFrame Arguments Argument Type Default Required Options frequency str a optional Annual - a Quarter - q trailing bool True optional True False Example aapl = Ticker ( 'aapl' ) aapl . cash_flow ( trailing = False ) Data symbol asOfDate periodType BeginningCashPosition CapitalExpenditure CashDividendsPaid CashFlowFromContinuingFinancingActivities ChangeInAccountPayable ChangeInCashSupplementalAsReported ChangeInInventory ChangeInWorkingCapital ChangesInAccountReceivables CommonStockIssuance DeferredIncomeTax DepreciationAndAmortization EndCashPosition FreeCashFlow InvestingCashFlow NetIncome NetOtherFinancingCharges NetOtherInvestingChanges OperatingCashFlow OtherNonCashItems PurchaseOfBusiness PurchaseOfInvestment RepaymentOfDebt RepurchaseOfCapitalStock SaleOfInvestment StockBasedCompensation aapl 2016-09-30 00:00:00 12M 2.112e+10 -1.3548e+10 -1.215e+10 -2.0483e+10 1.791e+09 -6.36e+08 2.17e+08 4.84e+08 1.095e+09 4.95e+08 4.938e+09 1.0505e+10 2.0484e+10 5.2276e+10 -4.5977e+10 4.5687e+10 -1.163e+09 -1.1e+08 6.5824e+10 nan -2.97e+08 -1.43816e+11 -2.5e+09 -2.9722e+10 1.11794e+11 4.21e+09 aapl 2017-09-30 00:00:00 12M 2.0484e+10 -1.2795e+10 -1.2769e+10 -1.7347e+10 9.618e+09 -1.95e+08 -2.723e+09 -5.55e+09 -2.093e+09 5.55e+08 5.966e+09 1.0157e+10 2.0289e+10 5.0803e+10 -4.6446e+10 4.8351e+10 -1.247e+09 2.2e+08 6.3598e+10 -1.66e+08 -3.29e+08 -1.59881e+11 -3.5e+09 -3.29e+10 1.26339e+11 4.84e+09 aapl 2018-09-30 00:00:00 12M 2.0289e+10 -1.3313e+10 -1.3712e+10 -8.7876e+10 9.175e+09 5.624e+09 8.28e+08 3.4694e+10 -5.322e+09 6.69e+08 -3.259e+10 1.0903e+10 2.5913e+10 6.4121e+10 1.6066e+10 5.9531e+10 -2.527e+09 -7.45e+08 7.7434e+10 -4.44e+08 -7.21e+08 -7.3227e+10 -6.5e+09 -7.2738e+10 1.04072e+11 5.34e+09 aapl 2019-09-30 00:00:00 12M 2.5913e+10 -1.0495e+10 -1.4119e+10 -9.0976e+10 -1.923e+09 2.4311e+10 -2.89e+08 -3.488e+09 2.45e+08 7.81e+08 -3.4e+08 1.2547e+10 5.0224e+10 5.8896e+10 4.5896e+10 5.5256e+10 -2.922e+09 -1.078e+09 6.9391e+10 -6.52e+08 -6.24e+08 -4.0631e+10 -8.805e+09 -6.6897e+10 9.8724e+10 6.068e+09","title":"cash_flow"},{"location":"guide/ticker/financials/#income_statement","text":"Details Description : Retrieves income statement data for most recent four quarters or most recent four years as well as trailing 12 months. Return : pandas.DataFrame Arguments Argument Type Default Required Options frequency str a optional Annual - a Quarter - q trailing bool True optional True False Example aapl = Ticker ( 'aapl' ) aapl . income_statement () Data symbol asOfDate periodType BasicAverageShares BasicEPS CostOfRevenue DilutedAverageShares DilutedEPS DilutedNIAvailtoComStockholders EBIT EBITDA GrossProfit InterestExpense InterestExpenseNonOperating InterestIncome InterestIncomeNonOperating NetIncome NetIncomeCommonStockholders NetIncomeContinuousOperations NetIncomeFromContinuingAndDiscontinuedOperation NetIncomeFromContinuingOperationNetMinorityInterest NetIncomeIncludingNoncontrollingInterests NetInterestIncome NetNonOperatingInterestIncomeExpense NormalizedEBITDA NormalizedIncome OperatingExpense OperatingIncome OperatingRevenue OtherIncomeExpense OtherNonOperatingIncomeExpenses PretaxIncome ReconciledCostOfRevenue ReconciledDepreciation ResearchAndDevelopment SellingGeneralAndAdministration TaxEffectOfUnusualItems TaxProvision TaxRateForCalcs TotalExpenses TotalOperatingIncomeAsReported TotalRevenue aapl 2016-09-30 00:00:00 12M 5.47082e+09 8.35 1.31376e+11 5.50028e+09 8.31 4.5687e+10 6.2828e+10 nan 8.4263e+10 1.456e+09 1.456e+09 3.999e+09 3.999e+09 4.5687e+10 4.5687e+10 4.5687e+10 4.5687e+10 4.5687e+10 4.5687e+10 2.543e+09 2.543e+09 7.3333e+10 4.5687e+10 2.4239e+10 6.0024e+10 2.15639e+11 -1.195e+09 -1.195e+09 6.1372e+10 1.31376e+11 1.0505e+10 1.0045e+10 1.4194e+10 0 1.5685e+10 0.256 1.55615e+11 6.0024e+10 2.15639e+11 aapl 2017-09-30 00:00:00 12M 5.21724e+09 9.27 1.41048e+11 5.25169e+09 9.21 4.8351e+10 6.6412e+10 nan 8.8186e+10 2.323e+09 2.323e+09 5.201e+09 5.201e+09 4.8351e+10 4.8351e+10 4.8351e+10 4.8351e+10 4.8351e+10 4.8351e+10 2.878e+09 2.878e+09 7.6569e+10 4.8351e+10 2.6842e+10 6.1344e+10 2.29234e+11 -1.33e+08 -1.33e+08 6.4089e+10 1.41048e+11 1.0157e+10 1.1581e+10 1.5261e+10 0 1.5738e+10 0.246 1.6789e+11 6.1344e+10 2.29234e+11 aapl 2018-09-30 00:00:00 12M 4.95538e+09 12.01 1.63756e+11 5.00011e+09 11.91 5.9531e+10 7.6143e+10 nan 1.01839e+11 3.24e+09 3.24e+09 5.686e+09 5.686e+09 5.9531e+10 5.9531e+10 5.9531e+10 5.9531e+10 5.9531e+10 5.9531e+10 2.446e+09 2.446e+09 8.7046e+10 5.9531e+10 3.0941e+10 7.0898e+10 2.65595e+11 -4.41e+08 -4.41e+08 7.2903e+10 1.63756e+11 1.0903e+10 1.4236e+10 1.6705e+10 0 1.3372e+10 0.183 1.94697e+11 7.0898e+10 2.65595e+11 aapl 2019-09-30 00:00:00 12M 4.61783e+09 11.97 1.61782e+11 4.64891e+09 11.89 5.5256e+10 6.9313e+10 nan 9.8392e+10 3.576e+09 3.576e+09 4.961e+09 4.961e+09 5.5256e+10 5.5256e+10 5.5256e+10 5.5256e+10 5.5256e+10 5.5256e+10 1.385e+09 1.385e+09 8.186e+10 5.5256e+10 3.4462e+10 6.393e+10 2.60174e+11 4.22e+08 4.22e+08 6.5737e+10 1.61782e+11 1.2547e+10 1.6217e+10 1.8245e+10 0 1.0481e+10 0.159 1.96244e+11 6.393e+10 2.60174e+11 aapl 2020-03-31 00:00:00 TTM nan nan 1.65854e+11 nan nan 5.7215e+10 7.0309e+10 8.2023e+10 1.02127e+11 3.218e+09 3.218e+09 4.39e+09 4.39e+09 5.7215e+10 5.7215e+10 5.7215e+10 5.7215e+10 5.7215e+10 5.7215e+10 1.172e+09 1.172e+09 8.2023e+10 5.7215e+10 3.6536e+10 6.5591e+10 2.67981e+11 3.28e+08 3.28e+08 6.7091e+10 1.65854e+11 1.1714e+10 1.7383e+10 1.9153e+10 0 9.876e+09 0.147203 2.0239e+11 6.5591e+10 2.67981e+11","title":"income_statement"},{"location":"guide/ticker/financials/#valuation_measures","text":"Details Description : Retrieves valuation measures for most recent four quarters as well as the most recent date Return : pandas.DataFrame Example aapl = Ticker ( 'aapl' ) aapl . valuation_measures Data symbol asOfDate periodType EnterpriseValue EnterprisesValueEBITDARatio EnterprisesValueRevenueRatio ForwardPeRatio MarketCap PbRatio PeRatio PegRatio PsRatio aapl 2019-06-30 00:00:00 3M 9.43183e+11 60.0371 17.5283 15.9744 9.10645e+11 8.47207 16.5762 1.4501 3.68445 aapl 2019-09-30 00:00:00 3M 1.00896e+12 50.1569 15.7551 17.2712 9.95152e+11 10.3172 19.0127 2.0355 4.09034 aapl 2019-12-31 00:00:00 3M 1.29513e+12 43.8746 14.1053 22.1729 1.28764e+12 14.23 24.6972 2.0292 5.24708 aapl 2020-03-05 00:00:00 TTM 1.2828e+12 nan nan 22.1239 1.28167e+12 14.3153 23.0646 1.7784 5.00004 aapl 2020-03-08 00:00:00 TTM nan 15.4204 4.79222 nan nan nan nan nan nan aapl 2020-03-31 00:00:00 3M 1.10068e+12 65.9957 18.8753 19.6464 1.09955e+12 12.2812 20.0228 1.5803 4.34064 aapl 2020-05-08 00:00:00 TTM 1.35966e+12 nan nan 26.178 1.34421e+12 17.14 24.2478 2.171 5.20229 aapl 2020-05-11 00:00:00 TTM nan 16.5766 5.07373 nan nan nan nan nan nan aapl 2020-05-28 00:00:00 TTM 1.39486e+12 nan nan 26.8097 1.3794e+12 17.5888 24.8827 2.2278 5.3385 aapl 2020-05-29 00:00:00 TTM nan 17.0057 5.20506 nan nan nan nan nan nan aapl 2020-06-12 00:00:00 TTM 1.48393e+12 nan nan 22.5734 1.46847e+12 18.7245 26.4894 1.8786 5.68322 aapl 2020-06-15 00:00:00 TTM nan 18.0916 5.53744 nan nan nan nan nan nan aapl 2020-07-14 00:00:00 TTM 1.69817e+12 nan nan 25.8398 1.68272e+12 21.4564 30.3542 2.1527 6.51239 aapl 2020-07-15 00:00:00 TTM nan 20.7036 6.33692 nan nan nan nan nan nan aapl 2020-07-16 00:00:00 TTM 1.6889e+12 nan nan 26.3158 1.67344e+12 21.3381 30.1869 2.1897 6.47649 aapl 2020-07-18 00:00:00 TTM nan 20.5906 6.30231 nan nan nan nan nan nan aapl 2020-07-29 00:00:00 TTM 1.6632e+12 nan nan 25.1256 1.64774e+12 21.0104 29.7232 2.0905 6.37702 aapl 2020-07-30 00:00:00 TTM nan 20.2772 6.2064 nan nan nan nan nan nan","title":"valuation_measures"},{"location":"guide/ticker/financials/#multiple","text":"","title":"Multiple"},{"location":"guide/ticker/financials/#all_financial_data","text":"Details Description : Retrieve all financial data, including income statement, balance sheet, cash flow, and valuation measures. Return : pandas.DataFrame Arguments Argument Type Default Required Options frequency str a optional Annual - a Quarter - q Warning No trailing twelve month (TTM) data will be returned with this method Example aapl = Ticker ( 'aapl' ) aapl . all_financial_data () Data symbol asOfDate periodType AccountsPayable AccountsReceivable AccumulatedDepreciation AllowanceForDoubtfulAccountsReceivable AvailableForSaleSecurities BasicAverageShares BasicEPS BeginningCashPosition CapitalExpenditure CapitalStock CashAndCashEquivalents CashCashEquivalentsAndShortTermInvestments CashDividendsPaid CashEquivalents CashFinancial CashFlowFromContinuingFinancingActivities ChangeInAccountPayable ChangeInCashSupplementalAsReported ChangeInInventory ChangeInWorkingCapital ChangesInAccountReceivables CommercialPaper CommonStock CommonStockEquity CommonStockIssuance CostOfRevenue CurrentAccruedExpenses CurrentAssets CurrentDebt CurrentDebtAndCapitalLeaseObligation CurrentDeferredLiabilities CurrentDeferredRevenue CurrentLiabilities DeferredIncomeTax DepreciationAndAmortization DilutedAverageShares DilutedEPS DilutedNIAvailtoComStockholders EBIT EndCashPosition EnterpriseValue EnterprisesValueEBITDARatio EnterprisesValueRevenueRatio ForwardPeRatio FreeCashFlow GainsLossesNotAffectingRetainedEarnings Goodwill GoodwillAndOtherIntangibleAssets GrossAccountsReceivable GrossPPE GrossProfit InterestExpense InterestExpenseNonOperating InterestIncome InterestIncomeNonOperating Inventory InvestedCapital InvestingCashFlow InvestmentinFinancialAssets InvestmentsAndAdvances LandAndImprovements Leases LongTermDebt LongTermDebtAndCapitalLeaseObligation MachineryFurnitureEquipment MarketCap NetDebt NetIncome NetIncomeCommonStockholders NetIncomeContinuousOperations NetIncomeFromContinuingAndDiscontinuedOperation NetIncomeFromContinuingOperationNetMinorityInterest NetIncomeIncludingNoncontrollingInterests NetInterestIncome NetNonOperatingInterestIncomeExpense NetOtherFinancingCharges NetOtherInvestingChanges NetPPE NetTangibleAssets NonCurrentDeferredLiabilities NonCurrentDeferredRevenue NonCurrentDeferredTaxesLiabilities NormalizedEBITDA NormalizedIncome OperatingCashFlow OperatingExpense OperatingIncome OperatingRevenue OrdinarySharesNumber OtherCurrentAssets OtherCurrentBorrowings OtherCurrentLiabilities OtherIncomeExpense OtherIntangibleAssets OtherNonCashItems OtherNonCurrentAssets OtherNonCurrentLiabilities OtherNonOperatingIncomeExpenses OtherReceivables OtherShortTermInvestments Payables PayablesAndAccruedExpenses PbRatio PeRatio PegRatio PretaxIncome Properties PsRatio PurchaseOfBusiness PurchaseOfInvestment Receivables ReconciledCostOfRevenue ReconciledDepreciation RepaymentOfDebt RepurchaseOfCapitalStock ResearchAndDevelopment RetainedEarnings SaleOfInvestment SellingGeneralAndAdministration ShareIssued StockBasedCompensation StockholdersEquity TangibleBookValue TaxEffectOfUnusualItems TaxProvision TaxRateForCalcs TotalAssets TotalCapitalization TotalDebt TotalEquityGrossMinorityInterest TotalExpenses TotalLiabilitiesNetMinorityInterest TotalNonCurrentAssets TotalNonCurrentLiabilitiesNetMinorityInterest TotalOperatingIncomeAsReported TotalRevenue TradeandOtherPayablesNonCurrent WorkingCapital aapl 2016-09-30 00:00:00 12M 3.7294e+10 1.5754e+10 -3.4235e+10 -5.3e+07 1.7043e+11 5.47082e+09 8.35 2.112e+10 -1.3548e+10 3.1251e+10 2.0484e+10 6.7155e+10 -1.215e+10 1.1883e+10 8.601e+09 -2.0483e+10 1.791e+09 -6.36e+08 2.17e+08 4.84e+08 1.095e+09 8.105e+09 3.1251e+10 1.28249e+11 4.95e+08 1.31376e+11 2.2027e+10 1.06869e+11 1.1605e+10 1.1605e+10 8.08e+09 8.08e+09 7.9006e+10 4.938e+09 1.0505e+10 5.50028e+09 8.31 4.5687e+10 6.2828e+10 2.0484e+10 6.26433e+11 8.5423 2.90501 12.6582 5.2276e+10 6.34e+08 5.414e+09 8.62e+09 1.5807e+10 6.1245e+10 8.4263e+10 1.456e+09 1.456e+09 3.999e+09 3.999e+09 2.132e+09 2.15281e+11 -4.5977e+10 1.7043e+11 1.7043e+11 1.0185e+10 6.517e+09 7.5427e+10 7.5427e+10 4.4543e+10 6.03254e+11 6.6548e+10 4.5687e+10 4.5687e+10 4.5687e+10 4.5687e+10 4.5687e+10 4.5687e+10 2.543e+09 2.543e+09 -1.163e+09 -1.1e+08 2.701e+10 1.19629e+11 2.8949e+10 2.93e+09 2.6019e+10 7.3333e+10 4.5687e+10 6.5824e+10 2.4239e+10 6.0024e+10 2.15639e+11 5.33617e+09 8.283e+09 3.5e+09 nan -1.195e+09 3.206e+09 nan 8.757e+09 1.0055e+10 -1.195e+09 1.3545e+10 4.6671e+10 3.7294e+10 5.9321e+10 4.76726 13.1607 2.4275 6.1372e+10 0 2.8598 -2.97e+08 -1.43816e+11 2.9299e+10 1.31376e+11 1.0505e+10 -2.5e+09 -2.9722e+10 1.0045e+10 9.6364e+10 1.11794e+11 1.4194e+10 5.33617e+09 4.21e+09 1.28249e+11 1.19629e+11 0 1.5685e+10 0.256 3.21686e+11 2.03676e+11 8.7032e+10 1.28249e+11 1.55615e+11 1.93437e+11 2.14817e+11 1.14431e+11 6.0024e+10 2.15639e+11 nan 2.7863e+10 aapl 2017-09-30 00:00:00 12M 4.9049e+10 1.7874e+10 -4.1293e+10 -5.8e+07 1.94714e+11 5.21724e+09 9.27 2.0484e+10 -1.2795e+10 3.5867e+10 2.0289e+10 7.4181e+10 -1.2769e+10 1.2307e+10 7.982e+09 -1.7347e+10 9.618e+09 -1.95e+08 -2.723e+09 -5.55e+09 -2.093e+09 1.1977e+10 3.5867e+10 1.34047e+11 5.55e+08 1.41048e+11 2.5744e+10 1.28645e+11 1.8473e+10 1.8473e+10 7.548e+09 7.548e+09 1.00814e+11 5.966e+09 1.0157e+10 5.25169e+09 9.21 4.8351e+10 6.6412e+10 2.0289e+10 8.27645e+11 10.8091 3.61048 14.245 5.0803e+10 -1.5e+08 5.717e+09 8.015e+09 1.7932e+10 7.5076e+10 8.8186e+10 2.323e+09 2.323e+09 5.201e+09 5.201e+09 4.855e+09 2.49727e+11 -4.6446e+10 1.94714e+11 1.94714e+11 1.3587e+10 7.279e+09 9.7207e+10 9.7207e+10 5.421e+10 7.96065e+11 9.5391e+10 4.8351e+10 4.8351e+10 4.8351e+10 4.8351e+10 4.8351e+10 4.8351e+10 2.878e+09 2.878e+09 -1.247e+09 2.2e+08 3.3783e+10 1.26032e+11 3.434e+10 2.836e+09 3.1504e+10 7.6569e+10 4.8351e+10 6.3598e+10 2.6842e+10 6.1344e+10 2.29234e+11 5.1262e+09 1.3936e+10 6.496e+09 nan -1.33e+08 2.298e+09 -1.66e+08 1.0162e+10 8.911e+09 -1.33e+08 1.7799e+10 5.3892e+10 4.9049e+10 7.4793e+10 5.96602 17.4541 2.087 6.4089e+10 0 3.65748 -3.29e+08 -1.59881e+11 3.5673e+10 1.41048e+11 1.0157e+10 -3.5e+09 -3.29e+10 1.1581e+10 9.833e+10 1.26339e+11 1.5261e+10 5.1262e+09 4.84e+09 1.34047e+11 1.26032e+11 0 1.5738e+10 0.246 3.75319e+11 2.31254e+11 1.1568e+11 1.34047e+11 1.6789e+11 2.41272e+11 2.46674e+11 1.40458e+11 6.1344e+10 2.29234e+11 nan 2.7831e+10 aapl 2018-09-30 00:00:00 12M 5.5888e+10 2.3186e+10 -4.9099e+10 nan 1.70799e+11 4.95538e+09 12.01 2.0289e+10 -1.3313e+10 4.0201e+10 2.5913e+10 6.6301e+10 -1.3712e+10 1.4338e+10 1.1575e+10 -8.7876e+10 9.175e+09 5.624e+09 8.28e+08 3.4694e+10 -5.322e+09 1.1964e+10 4.0201e+10 1.07147e+11 6.69e+08 1.63756e+11 nan 1.31339e+11 2.0748e+10 2.0748e+10 7.543e+09 7.543e+09 1.16866e+11 -3.259e+10 1.0903e+10 5.00011e+09 11.91 5.9531e+10 7.6143e+10 2.5913e+10 1.13394e+12 13.0269 4.26942 16.6945 6.4121e+10 -3.454e+09 nan nan nan 9.0403e+10 1.01839e+11 3.24e+09 3.24e+09 5.686e+09 5.686e+09 3.956e+09 2.2163e+11 1.6066e+10 1.70799e+11 1.70799e+11 1.6216e+10 8.205e+09 9.3735e+10 9.3735e+10 6.5982e+10 1.09031e+12 8.857e+10 5.9531e+10 5.9531e+10 5.9531e+10 5.9531e+10 5.9531e+10 5.9531e+10 2.446e+09 2.446e+09 -2.527e+09 -7.45e+08 4.1304e+10 1.07147e+11 3.223e+09 2.797e+09 4.26e+08 8.7046e+10 5.9531e+10 7.7434e+10 3.0941e+10 7.0898e+10 2.65595e+11 4.75499e+09 1.2087e+10 8.784e+09 3.2687e+10 -4.41e+08 nan -4.44e+08 2.2283e+10 1.1165e+10 -4.41e+08 2.5809e+10 4.0388e+10 5.5888e+10 5.5888e+10 9.33797 20.4105 1.2848 7.2903e+10 0 4.49591 -7.21e+08 -7.3227e+10 4.8995e+10 1.63756e+11 1.0903e+10 -6.5e+09 -7.2738e+10 1.4236e+10 7.04e+10 1.04072e+11 1.6705e+10 4.75499e+09 5.34e+09 1.07147e+11 1.07147e+11 0 1.3372e+10 0.183 3.65725e+11 2.00882e+11 1.14483e+11 1.07147e+11 1.94697e+11 2.58578e+11 2.34386e+11 1.41712e+11 7.0898e+10 2.65595e+11 3.3589e+10 1.4473e+10 aapl 2019-09-30 00:00:00 12M 4.6236e+10 2.2926e+10 -5.8579e+10 nan 1.05341e+11 4.61783e+09 11.97 2.5913e+10 -1.0495e+10 4.5174e+10 4.8844e+10 1.00557e+11 -1.4119e+10 3.664e+10 1.2204e+10 -9.0976e+10 -1.923e+09 2.4311e+10 -2.89e+08 -3.488e+09 2.45e+08 5.98e+09 4.5174e+10 9.0488e+10 7.81e+08 1.61782e+11 nan 1.62819e+11 1.624e+10 1.624e+10 5.522e+09 5.522e+09 1.05718e+11 -3.4e+08 1.2547e+10 4.64891e+09 11.89 5.5256e+10 6.9313e+10 5.0224e+10 1.00896e+12 12.3254 3.878 17.2712 5.8896e+10 -5.84e+08 nan nan nan 9.5957e+10 9.8392e+10 3.576e+09 3.576e+09 4.961e+09 4.961e+09 4.106e+09 1.98535e+11 4.5896e+10 1.05341e+11 1.05341e+11 1.7085e+10 9.075e+09 9.1807e+10 9.1807e+10 6.9797e+10 9.95152e+11 5.9203e+10 5.5256e+10 5.5256e+10 5.5256e+10 5.5256e+10 5.5256e+10 5.5256e+10 1.385e+09 1.385e+09 -2.922e+09 -1.078e+09 3.7378e+10 9.0488e+10 nan nan nan 8.186e+10 5.5256e+10 6.9391e+10 3.4462e+10 6.393e+10 2.60174e+11 4.44324e+09 1.2352e+10 1.026e+10 3.772e+10 4.22e+08 nan -6.52e+08 3.2978e+10 2.0958e+10 4.22e+08 2.2878e+10 5.1713e+10 4.6236e+10 4.6236e+10 10.3172 19.0127 2.0355 6.5737e+10 0 4.09034 -6.24e+08 -4.0631e+10 4.5804e+10 1.61782e+11 1.2547e+10 -8.805e+09 -6.6897e+10 1.6217e+10 4.5898e+10 9.8724e+10 1.8245e+10 4.44324e+09 6.068e+09 9.0488e+10 9.0488e+10 0 1.0481e+10 0.159 3.38516e+11 1.82295e+11 1.08047e+11 9.0488e+10 1.96244e+11 2.48028e+11 1.75697e+11 1.4231e+11 6.393e+10 2.60174e+11 2.9545e+10 5.7101e+10","title":"all_financial_data"},{"location":"guide/ticker/financials/#get_financial_data","text":"Details Description : Obtain specific data from either cash flow, income statement, balance sheet, or valuation measures. Return : pandas.DataFrame Arguments Argument Type Default Required Options types list or str None Required See options below frequency str a optional Annual - a Quarter - q trailing bool True optional True False Warning If you try and use all of the options below AND trailing=True , you will receive an error because the requested URL will be too long Balance Sheet [ 'AccountsPayable' , 'AccountsReceivable' , 'AccruedInterestReceivable' , 'AccumulatedDepreciation' , 'AdditionalPaidInCapital' , 'AllowanceForDoubtfulAccountsReceivable' , 'AssetsHeldForSaleCurrent' , 'AvailableForSaleSecurities' , 'BuildingsAndImprovements' , 'CapitalLeaseObligations' , 'CapitalStock' , 'CashAndCashEquivalents' , 'CashCashEquivalentsAndShortTermInvestments' , 'CashEquivalents' , 'CashFinancial' , 'CommercialPaper' , 'CommonStock' , 'CommonStockEquity' , 'ConstructionInProgress' , 'CurrentAccruedExpenses' , 'CurrentAssets' , 'CurrentCapitalLeaseObligation' , 'CurrentDebt' , 'CurrentDebtAndCapitalLeaseObligation' , 'CurrentDeferredAssets' , 'CurrentDeferredLiabilities' , 'CurrentDeferredRevenue' , 'CurrentDeferredTaxesAssets' , 'CurrentDeferredTaxesLiabilities' , 'CurrentLiabilities' , 'CurrentNotesPayable' , 'CurrentProvisions' , 'DefinedPensionBenefit' , 'DerivativeProductLiabilities' , 'DividendsPayable' , 'DuefromRelatedPartiesCurrent' , 'DuefromRelatedPartiesNonCurrent' , 'DuetoRelatedPartiesCurrent' , 'DuetoRelatedPartiesNonCurrent' , 'EmployeeBenefits' , 'FinancialAssets' , 'FinancialAssetsDesignatedasFairValueThroughProfitorLossTotal' , 'FinishedGoods' , 'FixedAssetsRevaluationReserve' , 'ForeignCurrencyTranslationAdjustments' , 'GainsLossesNotAffectingRetainedEarnings' , 'GeneralPartnershipCapital' , 'Goodwill' , 'GoodwillAndOtherIntangibleAssets' , 'GrossAccountsReceivable' , 'GrossPPE' , 'HedgingAssetsCurrent' , 'HeldToMaturitySecurities' , 'IncomeTaxPayable' , 'InterestPayable' , 'InventoriesAdjustmentsAllowances' , 'Inventory' , 'InvestedCapital' , 'InvestmentProperties' , 'InvestmentinFinancialAssets' , 'InvestmentsAndAdvances' , 'InvestmentsInOtherVenturesUnderEquityMethod' , 'InvestmentsinAssociatesatCost' , 'InvestmentsinJointVenturesatCost' , 'InvestmentsinSubsidiariesatCost' , 'LandAndImprovements' , 'Leases' , 'LiabilitiesHeldforSaleNonCurrent' , 'LimitedPartnershipCapital' , 'LineOfCredit' , 'LoansReceivable' , 'LongTermCapitalLeaseObligation' , 'LongTermDebt' , 'LongTermDebtAndCapitalLeaseObligation' , 'LongTermEquityInvestment' , 'LongTermProvisions' , 'MachineryFurnitureEquipment' , 'MinimumPensionLiabilities' , 'MinorityInterest' , 'NetDebt' , 'NetPPE' , 'NetTangibleAssets' , 'NonCurrentAccountsReceivable' , 'NonCurrentAccruedExpenses' , 'NonCurrentDeferredAssets' , 'NonCurrentDeferredLiabilities' , 'NonCurrentDeferredRevenue' , 'NonCurrentDeferredTaxesAssets' , 'NonCurrentDeferredTaxesLiabilities' , 'NonCurrentNoteReceivables' , 'NonCurrentPensionAndOtherPostretirementBenefitPlans' , 'NonCurrentPrepaidAssets' , 'NotesReceivable' , 'OrdinarySharesNumber' , 'OtherCapitalStock' , 'OtherCurrentAssets' , 'OtherCurrentBorrowings' , 'OtherCurrentLiabilities' , 'OtherEquityAdjustments' , 'OtherEquityInterest' , 'OtherIntangibleAssets' , 'OtherInventories' , 'OtherInvestments' , 'OtherNonCurrentAssets' , 'OtherNonCurrentLiabilities' , 'OtherPayable' , 'OtherProperties' , 'OtherReceivables' , 'OtherShortTermInvestments' , 'Payables' , 'PayablesAndAccruedExpenses' , 'PensionandOtherPostRetirementBenefitPlansCurrent' , 'PreferredSecuritiesOutsideStockEquity' , 'PreferredSharesNumber' , 'PreferredStock' , 'PreferredStockEquity' , 'PrepaidAssets' , 'Properties' , 'RawMaterials' , 'Receivables' , 'ReceivablesAdjustmentsAllowances' , 'RestrictedCash' , 'RestrictedCommonStock' , 'RetainedEarnings' , 'ShareIssued' , 'StockholdersEquity' , 'TangibleBookValue' , 'TaxesReceivable' , 'TotalAssets' , 'TotalCapitalization' , 'TotalDebt' , 'TotalEquityGrossMinorityInterest' , 'TotalLiabilitiesNetMinorityInterest' , 'TotalNonCurrentAssets' , 'TotalNonCurrentLiabilitiesNetMinorityInterest' , 'TotalPartnershipCapital' , 'TotalTaxPayable' , 'TradeandOtherPayablesNonCurrent' , 'TradingSecurities' , 'TreasurySharesNumber' , 'TreasuryStock' , 'UnrealizedGainLoss' , 'WorkInProcess' , 'WorkingCapital' ] Cash Flow [ 'RepaymentOfDebt' , 'RepurchaseOfCapitalStock' , 'CashDividendsPaid' , 'CommonStockIssuance' , 'ChangeInWorkingCapital' , 'CapitalExpenditure' , 'CashFlowFromContinuingFinancingActivities' , 'NetIncome' , 'FreeCashFlow' , 'ChangeInCashSupplementalAsReported' , 'SaleOfInvestment' , 'EndCashPosition' , 'OperatingCashFlow' , 'DeferredIncomeTax' , 'NetOtherInvestingChanges' , 'ChangeInAccountPayable' , 'NetOtherFinancingCharges' , 'PurchaseOfInvestment' , 'ChangeInInventory' , 'DepreciationAndAmortization' , 'PurchaseOfBusiness' , 'InvestingCashFlow' , 'ChangesInAccountReceivables' , 'StockBasedCompensation' , 'OtherNonCashItems' , 'BeginningCashPosition' ] Income Statement [ 'Amortization' , 'AmortizationOfIntangiblesIncomeStatement' , 'AverageDilutionEarnings' , 'BasicAccountingChange' , 'BasicAverageShares' , 'BasicContinuousOperations' , 'BasicDiscontinuousOperations' , 'BasicEPS' , 'BasicEPSOtherGainsLosses' , 'BasicExtraordinary' , 'ContinuingAndDiscontinuedBasicEPS' , 'ContinuingAndDiscontinuedDilutedEPS' , 'CostOfRevenue' , 'DepletionIncomeStatement' , 'DepreciationAmortizationDepletionIncomeStatement' , 'DepreciationAndAmortizationInIncomeStatement' , 'DepreciationIncomeStatement' , 'DilutedAccountingChange' , 'DilutedAverageShares' , 'DilutedContinuousOperations' , 'DilutedDiscontinuousOperations' , 'DilutedEPS' , 'DilutedEPSOtherGainsLosses' , 'DilutedExtraordinary' , 'DilutedNIAvailtoComStockholders' , 'DividendPerShare' , 'EBIT' , 'EBITDA' , 'EarningsFromEquityInterest' , 'EarningsFromEquityInterestNetOfTax' , 'ExciseTaxes' , 'GainOnSaleOfBusiness' , 'GainOnSaleOfPPE' , 'GainOnSaleOfSecurity' , 'GeneralAndAdministrativeExpense' , 'GrossProfit' , 'ImpairmentOfCapitalAssets' , 'InsuranceAndClaims' , 'InterestExpense' , 'InterestExpenseNonOperating' , 'InterestIncome' , 'InterestIncomeNonOperating' , 'MinorityInterests' , 'NetIncome' , 'NetIncomeCommonStockholders' , 'NetIncomeContinuousOperations' , 'NetIncomeDiscontinuousOperations' , 'NetIncomeExtraordinary' , 'NetIncomeFromContinuingAndDiscontinuedOperation' , 'NetIncomeFromContinuingOperationNetMinorityInterest' , 'NetIncomeFromTaxLossCarryforward' , 'NetIncomeIncludingNoncontrollingInterests' , 'NetInterestIncome' , 'NetNonOperatingInterestIncomeExpense' , 'NormalizedBasicEPS' , 'NormalizedDilutedEPS' , 'NormalizedEBITDA' , 'NormalizedIncome' , 'OperatingExpense' , 'OperatingIncome' , 'OperatingRevenue' , 'OtherGandA' , 'OtherIncomeExpense' , 'OtherNonOperatingIncomeExpenses' , 'OtherOperatingExpenses' , 'OtherSpecialCharges' , 'OtherTaxes' , 'OtherunderPreferredStockDividend' , 'PreferredStockDividends' , 'PretaxIncome' , 'ProvisionForDoubtfulAccounts' , 'ReconciledCostOfRevenue' , 'ReconciledDepreciation' , 'RentAndLandingFees' , 'RentExpenseSupplemental' , 'ReportedNormalizedBasicEPS' , 'ReportedNormalizedDilutedEPS' , 'ResearchAndDevelopment' , 'RestructuringAndMergernAcquisition' , 'SalariesAndWages' , 'SecuritiesAmortization' , 'SellingAndMarketingExpense' , 'SellingGeneralAndAdministration' , 'SpecialIncomeCharges' , 'TaxEffectOfUnusualItems' , 'TaxLossCarryforwardBasicEPS' , 'TaxLossCarryforwardDilutedEPS' , 'TaxProvision' , 'TaxRateForCalcs' , 'TotalExpenses' , 'TotalOperatingIncomeAsReported' , 'TotalOtherFinanceCost' , 'TotalRevenue' , 'TotalUnusualItems' , 'TotalUnusualItemsExcludingGoodwill' , 'WriteOff' ] Valuation Measures [ 'ForwardPeRatio' , 'PsRatio' , 'PbRatio' , 'EnterprisesValueEBITDARatio' , 'EnterprisesValueRevenueRatio' , 'PeRatio' , 'MarketCap' , 'EnterpriseValue' , 'PegRatio' ] Example aapl = Ticker ( 'aapl' ) types = [ 'TotalDebt' , 'TotalAssets' , 'EBIT' , 'EBITDA' , 'PeRatio' ] aapl . get_financial_data ( types , trailing = False ) Data symbol asOfDate periodType EBIT PeRatio TotalAssets TotalDebt aapl 2016-09-30 00:00:00 12M 6.2828e+10 13.1607 3.21686e+11 8.7032e+10 aapl 2017-09-30 00:00:00 12M 6.6412e+10 17.4541 3.75319e+11 1.1568e+11 aapl 2018-09-30 00:00:00 12M 7.6143e+10 20.4105 3.65725e+11 1.14483e+11 aapl 2019-09-30 00:00:00 12M 6.9313e+10 19.0127 3.38516e+11 1.08047e+11","title":"get_financial_data"},{"location":"guide/ticker/historical/","text":"Historical Prices \u00b6 history \u00b6 Details Description : Retreives historical pricing data (OHLC) for given symbol(s) Return : pandas.DataFrame Arguments Argument Description Type Default Required Options period Length of time str ytd optional ['1d', '5d', '7d', '60d', '1mo', '3mo', '6mo', '1y', '2y', '5y', '10y', 'ytd', 'max'] interval Time between data points str 1d optional ['1m', '2m', '5m', '15m', '30m', '60m', '90m', '1h', '1d', '5d', '1wk', '1mo', '3mo'] start Specific starting date to pull data from str or datetime.datetime optional If a string is passed, use the format YYYY-MM-DD start Specific ending date str or datetime.datetime optional If a string is passed, use the format YYYY-MM-DD adj_timezone Adjust datetime to the specific symbol's timezone bool True optional True False adj_ohlc Calculates an adjusted open, high, low and close prices according to split and dividend information bool False optional True False Example tickers = Ticker ( 'fb aapl amzn nflx goog' , asynchronous = True ) # Default period = ytd, interval = 1d df = tickers . history () df . head () high volume close low open adjclose dividends ('fb', datetime.date(2020, 1, 2)) 209.79 1.20771e+07 209.78 206.27 206.75 209.78 0 ('fb', datetime.date(2020, 1, 3)) 210.4 1.11884e+07 208.67 206.95 207.21 208.67 0 ('fb', datetime.date(2020, 1, 6)) 212.78 1.70589e+07 212.6 206.52 206.7 212.6 0 ('fb', datetime.date(2020, 1, 7)) 214.58 1.49124e+07 213.06 211.75 212.82 213.06 0 ('fb', datetime.date(2020, 1, 8)) 216.24 1.3475e+07 215.22 212.61 213 215.22 0","title":"Historical Prices"},{"location":"guide/ticker/historical/#historical-prices","text":"","title":"Historical Prices"},{"location":"guide/ticker/historical/#history","text":"Details Description : Retreives historical pricing data (OHLC) for given symbol(s) Return : pandas.DataFrame Arguments Argument Description Type Default Required Options period Length of time str ytd optional ['1d', '5d', '7d', '60d', '1mo', '3mo', '6mo', '1y', '2y', '5y', '10y', 'ytd', 'max'] interval Time between data points str 1d optional ['1m', '2m', '5m', '15m', '30m', '60m', '90m', '1h', '1d', '5d', '1wk', '1mo', '3mo'] start Specific starting date to pull data from str or datetime.datetime optional If a string is passed, use the format YYYY-MM-DD start Specific ending date str or datetime.datetime optional If a string is passed, use the format YYYY-MM-DD adj_timezone Adjust datetime to the specific symbol's timezone bool True optional True False adj_ohlc Calculates an adjusted open, high, low and close prices according to split and dividend information bool False optional True False Example tickers = Ticker ( 'fb aapl amzn nflx goog' , asynchronous = True ) # Default period = ytd, interval = 1d df = tickers . history () df . head () high volume close low open adjclose dividends ('fb', datetime.date(2020, 1, 2)) 209.79 1.20771e+07 209.78 206.27 206.75 209.78 0 ('fb', datetime.date(2020, 1, 3)) 210.4 1.11884e+07 208.67 206.95 207.21 208.67 0 ('fb', datetime.date(2020, 1, 6)) 212.78 1.70589e+07 212.6 206.52 206.7 212.6 0 ('fb', datetime.date(2020, 1, 7)) 214.58 1.49124e+07 213.06 211.75 212.82 213.06 0 ('fb', datetime.date(2020, 1, 8)) 216.24 1.3475e+07 215.22 212.61 213 215.22 0","title":"history"},{"location":"guide/ticker/intro/","text":"Ticker - Intro \u00b6 Import Ticker \u00b6 from yahooquery import Ticker Create Instance \u00b6 To retrieve data from Yahoo Finance for a single stock, create an instance of the Ticker class by passing the company's ticker symbol as an argument: aapl = Ticker ( 'aapl' ) Or, pass in multiple symbols to retrieve data for multiple companies. Symbols can be passed in as a list: symbols = [ 'fb' , 'aapl' , 'amzn' , 'nflx' , 'goog' ] tickers = Ticker ( symbols ) They can also be passed in as a string: symbols = 'fb aapl amzn nflx goog' tickers = Ticker ( symbols ) Note Outside of a few properties / methods, each symbol will represent one request. For example: from yahooquery import Ticker symbols = 'fb aapl amzn nflx goog' tickers = Ticker ( symbols ) # Retrieve each company's profile information data = tickers . asset_profile By calling the asset_profile property on the tickers instance, we're making 5 separate calls to Yahoo Finance (determined by the number of symbols).","title":"Ticker - Intro"},{"location":"guide/ticker/intro/#ticker-intro","text":"","title":"Ticker - Intro"},{"location":"guide/ticker/intro/#import-ticker","text":"from yahooquery import Ticker","title":"Import Ticker"},{"location":"guide/ticker/intro/#create-instance","text":"To retrieve data from Yahoo Finance for a single stock, create an instance of the Ticker class by passing the company's ticker symbol as an argument: aapl = Ticker ( 'aapl' ) Or, pass in multiple symbols to retrieve data for multiple companies. Symbols can be passed in as a list: symbols = [ 'fb' , 'aapl' , 'amzn' , 'nflx' , 'goog' ] tickers = Ticker ( symbols ) They can also be passed in as a string: symbols = 'fb aapl amzn nflx goog' tickers = Ticker ( symbols ) Note Outside of a few properties / methods, each symbol will represent one request. For example: from yahooquery import Ticker symbols = 'fb aapl amzn nflx goog' tickers = Ticker ( symbols ) # Retrieve each company's profile information data = tickers . asset_profile By calling the asset_profile property on the tickers instance, we're making 5 separate calls to Yahoo Finance (determined by the number of symbols).","title":"Create Instance"},{"location":"guide/ticker/keyword_arguments/","text":"Keyword Arguments \u00b6 The Ticker class also takes in additional keyword arguments that modify certain behavior. The majority of the keyword arguments will affect how requests are made. Regular \u00b6 asynchronous \u00b6 Details Description : When set to True , requests made to Yahoo Finance will be made asynchronously Default : False Type : bool Tip Only necessary when you have more than one symbol Example symbols = 'fb aapl amzn nflx goog' Ticker ( symbols , asynchronous = True ) backoff_factor \u00b6 Details Description : A factor, in seconds, to apply between attempts after the second try Default : 0.3 Implementation : {backoff_factor} * (2 ** ({number of total retries} - 1)) Example : If the backoff factor is 0.1, then sleep() will sleep for [0.0s, 0.2s, 0.4s, ...] between retries Example Ticker ( 'aapl' , backoff_factor = 1 ) country \u00b6 Details Description : Alter the language, region, and corsDomain that each request utilizes as a query parameter. Default : United States Info This functionality has not been thoroughly tested as far as comparing data returned for each country. You will see a difference, though, in the data returned from the news method: View Countries { 'france' : { 'lang' : 'fr-FR' , 'region' : 'FR' , 'corsDomain' : 'fr.finance.yahoo.com' }, 'india' : { 'lang' : 'en-IN' , 'region' : 'IN' , 'corsDomain' : 'in.finance.yahoo.com' }, 'hong kong' : { 'lang' : 'zh-Hant-HK' , 'region' : 'HK' , 'corsDomain' : 'hk.finance.yahoo.com' }, 'germany' : { 'lang' : 'de-DE' , 'region' : 'DE' , 'corsDomain' : 'de.finance.yahoo.com' }, 'canada' : { 'lang' : 'en-CA' , 'region' : 'CA' , 'corsDomain' : 'ca.finance.yahoo.com' }, 'spain' : { 'lang' : 'es-ES' , 'region' : 'ES' , 'corsDomain' : 'es.finance.yahoo.com' }, 'italy' : { 'lang' : 'it-IT' , 'region' : 'IT' , 'corsDomain' : 'it.finance.yahoo.com' }, 'united states' : { 'lang' : 'en-US' , 'region' : 'US' , 'corsDomain' : 'finance.yahoo.com' }, 'australia' : { 'lang' : 'en-AU' , 'region' : 'AU' , 'corsDomain' : 'au.finance.yahoo.com' }, 'united kingdom' : { 'lang' : 'en-GB' , 'region' : 'GB' , 'corsDomain' : 'uk.finance.yahoo.com' }, 'brazil' : { 'lang' : 'pt-BR' , 'region' : 'BR' , 'corsDomain' : 'br.financas.yahoo.com' }, 'new zealand' : { 'lang' : 'en-NZ' , 'region' : 'NZ' , 'corsDomain' : 'nz.finance.yahoo.com' }, 'singapore' : { 'lang' : 'en-SG' , 'region' : 'SG' , 'corsDomain' : 'sg.finance.yahoo.com' } } Example Ticker ( 'aapl' , country = 'France' ) formatted \u00b6 Details Description - When formatted=True , most numerical data from the API will be returned as a dictionary: \"totalCash\" : { \"raw\" : 94051000320 \"fmt\" : \"94.05B\" \"longFmt\" : \"94,051,000,320\" } When formatted is set to False, an internal method will return the value in the \"raw\" key. Default - False Type - bool Warning When formatted=True , all data will be returned as a dict Example Ticker ( 'aapl' , formatted = True ) max_workers \u00b6 Details Description - Defines the number of workers used to make asynchronous requests. Default - 8 Type - int Tip This is only relevant when asynchronous=True Example Ticker ( 'aapl' , asynchronous = True , max_workers = 4 ) proxies \u00b6 Details Description - Make each request with a proxy. Simply pass a dictionary, mapping URL schemes to the URL to the proxy. Default - None Type - dict Tip You can also configure proxies by setting the environment variables HTTP_PROXY and HTTPS_PROXY . Example proxies = { 'http' : 'http://10.10.1.10:3128' , 'https' : 'http://10.10.1.10:1080' , } Ticker ( 'aapl' , proxies = proxies ) retry \u00b6 Details Description - Number of times to retry a failed request Default - 5 Type - int Example Ticker ( 'aapl' , retry = 10 ) status_forcelist \u00b6 Details Description - A set of integer HTTP status codes that we should force a retry on. Default - [429, 500, 502, 503, 504] Type - list Tip This is especially useful when retrieving historical pricing data for a large amount of symbols. Currently, Yahoo Finance has been displaying 404 errors for mass download requests. Example Ticker ( 'aapl' , status_forcelist = [ 404 , 429 , 500 , 502 , 503 , 504 ] ) timeout \u00b6 Details Description - Stop waiting for a response after a given number of seconds Default - 5 Type - int Note This is not a time limit on the entire response download; rather, an exception is raised if the server has not issued a response for timeout seconds (more precisely, if no bytes have been received on the underlying socket for timeout seconds). If no timeout is specified explicitly, requests do not time out. Example Ticker ( 'aapl' , timeout = 3 ) user_agent \u00b6 Details Description - A browser's user-agent string that is sent with the headers with each request. Default - Random selection from the list below: USER_AGENT_LIST = [ 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36' , 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36' , 'Mozilla/5.0 (Windows NT 10.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36' , 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.129 Safari/537.36' , 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36' , 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36' , ] Type - str Example Ticker ( 'aapl' , user_agent = \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36\" ) validate \u00b6 Details Description - Validate existence of symbols during instantiation. Invalid symbols will be dropped but you can view them through the invalid_symbols property. Default - False Type - bool Example from yahooquery import Ticker symbols = 'fb facebook aapl apple amazon amzn netflix nflx goog alphabet' t = Ticker ( symbols , validate = True ) print ( t . symbols ) [ 'NFLX' , 'GOOG' , 'AAPL' , 'FB' , 'AMZN' ] print ( t . invalid_symbols ) [ 'FACEBOOK' , 'AMAZON' , 'APPLE' , 'NETFLIX' , 'ALPHABET' ] verify \u00b6 Details Description - Either a boolean, in which case it controls whether we verify the server\u2019s TLS certificate, or a string, in which case it must be a path to a CA bundle to use. Default - True Type - bool or str Example Ticker ( 'aapl' , verify = False ) Premium \u00b6 username and password \u00b6 Details Description : If you're a subscriber to Yahoo Finance Premium, you'll be able to retrieve data available through that subscription. Simply pass your username and password to the Ticker class Note Selenium is utilized to login to Yahoo. It should take around 15-20 seconds to login. Tip Set environment variables for your username and password as YF_USERNAME and YF_PASSWORD , respectively. Example Ticker ( 'aapl' , username = 'fake_username' , password = 'fake_password' ) Advanced \u00b6 crumb and session \u00b6 Details Description : Some requests to Yahoo Finance require a crumb to make the request. This is only utilized for advanced configuration Default : None Type : str Example See the Advanced Section","title":"Keyword Arguments"},{"location":"guide/ticker/keyword_arguments/#keyword-arguments","text":"The Ticker class also takes in additional keyword arguments that modify certain behavior. The majority of the keyword arguments will affect how requests are made.","title":"Keyword Arguments"},{"location":"guide/ticker/keyword_arguments/#regular","text":"","title":"Regular"},{"location":"guide/ticker/keyword_arguments/#asynchronous","text":"Details Description : When set to True , requests made to Yahoo Finance will be made asynchronously Default : False Type : bool Tip Only necessary when you have more than one symbol Example symbols = 'fb aapl amzn nflx goog' Ticker ( symbols , asynchronous = True )","title":"asynchronous"},{"location":"guide/ticker/keyword_arguments/#backoff_factor","text":"Details Description : A factor, in seconds, to apply between attempts after the second try Default : 0.3 Implementation : {backoff_factor} * (2 ** ({number of total retries} - 1)) Example : If the backoff factor is 0.1, then sleep() will sleep for [0.0s, 0.2s, 0.4s, ...] between retries Example Ticker ( 'aapl' , backoff_factor = 1 )","title":"backoff_factor"},{"location":"guide/ticker/keyword_arguments/#country","text":"Details Description : Alter the language, region, and corsDomain that each request utilizes as a query parameter. Default : United States Info This functionality has not been thoroughly tested as far as comparing data returned for each country. You will see a difference, though, in the data returned from the news method: View Countries { 'france' : { 'lang' : 'fr-FR' , 'region' : 'FR' , 'corsDomain' : 'fr.finance.yahoo.com' }, 'india' : { 'lang' : 'en-IN' , 'region' : 'IN' , 'corsDomain' : 'in.finance.yahoo.com' }, 'hong kong' : { 'lang' : 'zh-Hant-HK' , 'region' : 'HK' , 'corsDomain' : 'hk.finance.yahoo.com' }, 'germany' : { 'lang' : 'de-DE' , 'region' : 'DE' , 'corsDomain' : 'de.finance.yahoo.com' }, 'canada' : { 'lang' : 'en-CA' , 'region' : 'CA' , 'corsDomain' : 'ca.finance.yahoo.com' }, 'spain' : { 'lang' : 'es-ES' , 'region' : 'ES' , 'corsDomain' : 'es.finance.yahoo.com' }, 'italy' : { 'lang' : 'it-IT' , 'region' : 'IT' , 'corsDomain' : 'it.finance.yahoo.com' }, 'united states' : { 'lang' : 'en-US' , 'region' : 'US' , 'corsDomain' : 'finance.yahoo.com' }, 'australia' : { 'lang' : 'en-AU' , 'region' : 'AU' , 'corsDomain' : 'au.finance.yahoo.com' }, 'united kingdom' : { 'lang' : 'en-GB' , 'region' : 'GB' , 'corsDomain' : 'uk.finance.yahoo.com' }, 'brazil' : { 'lang' : 'pt-BR' , 'region' : 'BR' , 'corsDomain' : 'br.financas.yahoo.com' }, 'new zealand' : { 'lang' : 'en-NZ' , 'region' : 'NZ' , 'corsDomain' : 'nz.finance.yahoo.com' }, 'singapore' : { 'lang' : 'en-SG' , 'region' : 'SG' , 'corsDomain' : 'sg.finance.yahoo.com' } } Example Ticker ( 'aapl' , country = 'France' )","title":"country"},{"location":"guide/ticker/keyword_arguments/#formatted","text":"Details Description - When formatted=True , most numerical data from the API will be returned as a dictionary: \"totalCash\" : { \"raw\" : 94051000320 \"fmt\" : \"94.05B\" \"longFmt\" : \"94,051,000,320\" } When formatted is set to False, an internal method will return the value in the \"raw\" key. Default - False Type - bool Warning When formatted=True , all data will be returned as a dict Example Ticker ( 'aapl' , formatted = True )","title":"formatted"},{"location":"guide/ticker/keyword_arguments/#max_workers","text":"Details Description - Defines the number of workers used to make asynchronous requests. Default - 8 Type - int Tip This is only relevant when asynchronous=True Example Ticker ( 'aapl' , asynchronous = True , max_workers = 4 )","title":"max_workers"},{"location":"guide/ticker/keyword_arguments/#proxies","text":"Details Description - Make each request with a proxy. Simply pass a dictionary, mapping URL schemes to the URL to the proxy. Default - None Type - dict Tip You can also configure proxies by setting the environment variables HTTP_PROXY and HTTPS_PROXY . Example proxies = { 'http' : 'http://10.10.1.10:3128' , 'https' : 'http://10.10.1.10:1080' , } Ticker ( 'aapl' , proxies = proxies )","title":"proxies"},{"location":"guide/ticker/keyword_arguments/#retry","text":"Details Description - Number of times to retry a failed request Default - 5 Type - int Example Ticker ( 'aapl' , retry = 10 )","title":"retry"},{"location":"guide/ticker/keyword_arguments/#status_forcelist","text":"Details Description - A set of integer HTTP status codes that we should force a retry on. Default - [429, 500, 502, 503, 504] Type - list Tip This is especially useful when retrieving historical pricing data for a large amount of symbols. Currently, Yahoo Finance has been displaying 404 errors for mass download requests. Example Ticker ( 'aapl' , status_forcelist = [ 404 , 429 , 500 , 502 , 503 , 504 ] )","title":"status_forcelist"},{"location":"guide/ticker/keyword_arguments/#timeout","text":"Details Description - Stop waiting for a response after a given number of seconds Default - 5 Type - int Note This is not a time limit on the entire response download; rather, an exception is raised if the server has not issued a response for timeout seconds (more precisely, if no bytes have been received on the underlying socket for timeout seconds). If no timeout is specified explicitly, requests do not time out. Example Ticker ( 'aapl' , timeout = 3 )","title":"timeout"},{"location":"guide/ticker/keyword_arguments/#user_agent","text":"Details Description - A browser's user-agent string that is sent with the headers with each request. Default - Random selection from the list below: USER_AGENT_LIST = [ 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36' , 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36' , 'Mozilla/5.0 (Windows NT 10.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36' , 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.129 Safari/537.36' , 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36' , 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36' , ] Type - str Example Ticker ( 'aapl' , user_agent = \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36\" )","title":"user_agent"},{"location":"guide/ticker/keyword_arguments/#validate","text":"Details Description - Validate existence of symbols during instantiation. Invalid symbols will be dropped but you can view them through the invalid_symbols property. Default - False Type - bool Example from yahooquery import Ticker symbols = 'fb facebook aapl apple amazon amzn netflix nflx goog alphabet' t = Ticker ( symbols , validate = True ) print ( t . symbols ) [ 'NFLX' , 'GOOG' , 'AAPL' , 'FB' , 'AMZN' ] print ( t . invalid_symbols ) [ 'FACEBOOK' , 'AMAZON' , 'APPLE' , 'NETFLIX' , 'ALPHABET' ]","title":"validate"},{"location":"guide/ticker/keyword_arguments/#verify","text":"Details Description - Either a boolean, in which case it controls whether we verify the server\u2019s TLS certificate, or a string, in which case it must be a path to a CA bundle to use. Default - True Type - bool or str Example Ticker ( 'aapl' , verify = False )","title":"verify"},{"location":"guide/ticker/keyword_arguments/#premium","text":"","title":"Premium"},{"location":"guide/ticker/keyword_arguments/#username-and-password","text":"Details Description : If you're a subscriber to Yahoo Finance Premium, you'll be able to retrieve data available through that subscription. Simply pass your username and password to the Ticker class Note Selenium is utilized to login to Yahoo. It should take around 15-20 seconds to login. Tip Set environment variables for your username and password as YF_USERNAME and YF_PASSWORD , respectively. Example Ticker ( 'aapl' , username = 'fake_username' , password = 'fake_password' )","title":"username and password"},{"location":"guide/ticker/keyword_arguments/#advanced","text":"","title":"Advanced"},{"location":"guide/ticker/keyword_arguments/#crumb-and-session","text":"Details Description : Some requests to Yahoo Finance require a crumb to make the request. This is only utilized for advanced configuration Default : None Type : str Example See the Advanced Section","title":"crumb and session"},{"location":"guide/ticker/miscellaenous/","text":"corporate_events \u00b6 Details Description : Significant events related to a given symbol(s) Return : pandas.DataFrame Example aapl = Ticker ( 'aapl' ) df = aapl . corporate_events df . head () Data date significance headline parentTopics 0 2012-03-19 00:00:00 1 Apple Inc. Announces Plans To Initiate Dividend And Share Repurchase Program Performance 1 2012-10-25 00:00:00 3 Apple Inc Declares Cash Dividend Performance 2 2013-01-23 00:00:00 1 Apple Inc Issues Q2 2013 Revenue Guidance Below Analysts' Estimates; Declares Cash Dividend Corporate Guidance 3 2013-04-23 00:00:00 1 Apple Inc Increases Repurchase Authorization To $60 Billion From The $10 Billion; Approves Quarterly Dividend Ownership/Control 4 2013-07-23 00:00:00 3 Apple Inc Declares Cash Dividend Performance news \u00b6 Details Description : Get news headline and summary information for given symbol(s) Return : list Arguments : Argument Type Default Required Options count int 25 optional start str or datetime.datetime None optional If a str is used, the format should be YYYY-MM-DD Warning It's recommended to use one symbol when utilizing this method as there's no discernible way to group resulting news items to the symbols they belong to. Tip If multiple symbols are used, only one request will be made regardless of the number of symbols Example aapl = Ticker ( 'aapl' ) aapl . news ( 5 ) Data [{ 'rank' : 0 , 'id' : '3a3b4532-38fb-3fcb-85b3-3cdc4d5bbabe' , 'tag' : 'news' , 'title' : 'Big Tech\u2019s CEOs Got the Last Word. Here\u2019s Why Tech Earnings Were So Important.' , 'summary' : 'Amazon\u2019s sales were up 40 % i n the June quarter, which one analyst referred to as shocking levels of growth. Meanwhile, Apple couldn\u2019t keep up with demand for Macs and iPads.' , 'url' : 'https://www.barrons.com/articles/heres-why-amazon-apple-and-facebook-earnings-were-so-important-51596232561?siteid=yhoof2&yptr=yahoo' , 'author_name' : 'Eric J. Savitz' , 'provider_publish_time' : 1596232560 , 'provider_name' : 'Barrons.com' , 'hosted' : False , 'tickers' : [], 'featured' : False , 'timeZoneShortName' : 'EDT' , 'timeZoneFullName' : 'America/New_York' , 'gmtOffSetMilliseconds' : - 14400000 , 'imageSet' : {} }, { 'rank' : 1 , 'id' : 'e0ea15cf-9cd4-33fa-b8ef-87ea7ee40c32' , 'tag' : 'news' , 'title' : 'Microsoft Is in Talks to Buy TikTok in U.S.' , 'summary' : '(Bloomberg) -- Microsoft Corp. is exploring an acquisition of TikTok\u2019s operations in the U.S., according to a people familiar with the matter. A deal would give the software company a popular social-media service and relieve U.S. government pressure on the Chinese owner of the video-sharing app.The Trump administration has been weighing whether to direct China-based ByteDance Ltd. to divest its stake in TikTok\u2019s U.S. operations, according to several people familiar with the issue. The U.S. has been investigating potential national security risks due to the Chinese company\u2019s control of the app.While the administration was prepared to announce an order as soon as Friday, according to three people familiar with the matter, another person said later that the decision was on hold, pending further review by President Donald Trump. All of the people asked not to be identified because the deliberations are private.Spokespeople for Microsoft and TikTok declined to comment on any potential talks. The software company\u2019s interest in the app was reported earlier by Fox Business Network.\u201cWe are looking at TikTok. We may be banning TikTok,\u201d Trump told reporters Friday at the White House. \u201cWe are looking at a lot of alternatives with respect to TikTok.\u201dAny transaction could face regulatory hurdles. ByteDance bought Musical.ly Inc. in 2017 and merged it with TikTok, creating a social-media hit in the U.S -- the first Chinese app to make such inroads. As TikTok became more popular, U.S. officials grew concerned about the potential for the Chinese government to use the app to gain data on U.S. citizens.The Committee on Foreign Investment in the U.S. began a review in 2019 of the Musical.ly purchase. In recent years, CFIUS, which investigates overseas acquisitions of U.S. businesses, has taken a much more aggressive role in reviewing and approving deals that may threaten national security. It can recommend that the president block or unwind transactions.It\u2019s also possible that other potential buyers could come forward, said another person familiar with the discussions. Microsoft\u2019s industry peers -- Facebook Inc., Apple Inc., Amazon.com Inc. and Alphabet Inc. -- fit the profile of potential suitors, though all are under antitrust scrutiny from U.S. regulators, which would likely complicate a deal.A purchase of TikTok would represent a huge coup for Microsoft, which would gain a popular consumer app that has won over young people with a steady diet of dance videos, lip-syncing clips and viral memes. The company has dabbled in social-media investments in the past, but hasn\u2019t developed a popular service of its own in the lucrative sector. Microsoft acquired the LinkedIn job-hunting and corporate networking company for $26.2 billion in 2016.Microsoft can point to one acquisition that came with a massive existing community of users that has increased under its ownership -- the 2014 deal for Minecraft, the best-selling video game ever.Other purchases of popular services have gone less well. The 2011 pickup of Skype led to several years of stagnation for the voice-calling service and Microsoft fell behind newer products in the category. Outside of Xbox, the company hasn\u2019t focused on younger consumers. A TikTok deal could change that, though, and give Microsoft \u201ca crown jewel on the consumer social media front,\u201d Dan Ives, an analyst at Wedbush Securities, wrote in a note to investors Friday.TikTok has repeatedly rejected accusations that it feeds user data to China or is beholden to Beijing, even though ByteDance is based there. TikTok now has a U.S.-based chief executive officer and ByteDance has considered making other organizational changes to satisfy U.S. authorities.\u201cHundreds of millions of people come to TikTok for entertainment and connection, including our community of creators and artists who are building livelihoods from the platform,\u201d a TikTok spokeswoman said Friday. \u201cWe\u2019re motivated by their passion and creativity, and committed to protecting their privacy and safety as we continue working to bring joy to families and meaningful careers to those who create on our platform.\u201dThe mechanics of separating the TikTok app in the U.S. from the rest of its operations won\u2019t come without complications. Unlike many tech companies in the U.S. where engineers for, say, Google, work on particular products like YouTube or Google Maps, many of ByteDance\u2019s engineers work across its different platforms and services and continue to work on TikTok globally.On Thursday, U.S. Senators Josh Hawley, a Missouri Republican, and Richard Blumenthal, a Connecticut Democrat, wrote the Justice Department asking for an investigation of whether TikTok has violated the constitutional rights of Americans by sharing private information with the Chinese government.A deal with Microsoft could potentially help extract ByteDance from the political war between the U.S. and China.U.S. Senator Marco Rubio, a Florida Republican and member of the Senate\u2019s Select Committee on Intelligence, applauded the idea of a TikTok sale. \u201cIn its current form, TikTok represents a potential threat to personal privacy and our national security,\u201d Rubio said in a statement. \u201cWe must do more than simply remove ByteDance from the equation. Moving forward, we must establish a framework of standards that must be met before a high-risk, foreign-based app is allowed to operate on American telecommunications networks and devices.\u201d(Updates with details of TikTok\u2019s operations in the 14th paragraph.)For more articles like this, please visit us at bloomberg.comSubscribe now to stay ahead with the most trusted business news source.\u00a92020 Bloomberg L.P.' , 'url' : 'https://finance.yahoo.com/news/microsoft-said-talks-buy-tiktok-185221680.html' , 'author_name' : 'Kurt Wagner, Jennifer Jacobs, Saleha Mohsin and Jenny Leonard' , 'provider_publish_time' : 1596232267 , 'provider_name' : 'Bloomberg' , 'hosted' : True , 'tickers' : [], 'thumbnail' : 'https://media.zenfs.com/en/bloomberg_technology_68/d998c0ffe5e9a652dce2e465c5d6d8a3' , 'featured' : False , 'timeZoneShortName' : 'EDT' , 'timeZoneFullName' : 'America/New_York' , 'gmtOffSetMilliseconds' : - 14400000 , 'imageSet' : {} }, { 'rank' : 2 , 'id' : '8cc7e7d9-87ec-3aaf-8a51-24f8ae1f6eca' , 'tag' : 'news' , 'title' : 'Bitcoin Is Rising Again. Asking Why Takes You Down the Financial Rabbit Hole.' , 'summary' : 'How to explain Bitcoin\u2019s reversal of fortune? In search of an answer our columnist explores the dollar, the euro, gold, stocks, inflation, and more.' , 'url' : 'https://www.barrons.com/articles/bitcoin-is-rising-again-asking-why-takes-you-down-a-financial-rabbit-hole-51596231804?siteid=yhoof2&yptr=yahoo' , 'author_name' : 'Jack Hough' , 'provider_publish_time' : 1596231780 , 'provider_name' : 'Barrons.com' , 'hosted' : False , 'tickers' : [], 'featured' : False , 'timeZoneShortName' : 'EDT' , 'timeZoneFullName' : 'America/New_York' , 'gmtOffSetMilliseconds' : - 14400000 , 'imageSet' : {} }, { 'rank' : 3 , 'id' : '14ba64e7-a900-3e30-b513-94a5efce0dd7' , 'tag' : 'news' , 'title' : 'Apple Stock Rallied 10 % F riday. Here\u2019s Why.' , 'summary' : 'One day after reporting June quarter results, Apple (ticker: AAPL) stock surged 10.5% to $425.04, the stock\u2019s first-ever close above $400. The stock won\u2019t stay there for long, though: The company Thursday declared a 4-for-1 stock split, effective August 31. A big revenue beat: Apple had $59.7 billion in sales in the quarter, up 11 % f rom a year ago, and beating consensus by $7.6 billion.' , 'url' : 'https://www.barrons.com/articles/apple-stock-hits-new-highs-earnings-51596215820?siteid=yhoof2&yptr=yahoo' , 'author_name' : 'Eric J. Savitz' , 'provider_publish_time' : 1596231300 , 'provider_name' : 'Barrons.com' , 'hosted' : False , 'tickers' : [], 'featured' : False , 'timeZoneShortName' : 'EDT' , 'timeZoneFullName' : 'America/New_York' , 'gmtOffSetMilliseconds' : - 14400000 , 'imageSet' : {} }, { 'rank' : 4 , 'id' : '5894f228-5bad-3eda-8a48-d8fc0bdced0c' , 'tag' : 'news' , 'title' : 'Apple Tops Saudi Aramco as World\u2019s Most Valuable Company' , 'summary' : '(Bloomberg) -- Apple Inc. became the world\u2019s most valuable company with its market value overtaking Saudi Aramco in the wake of better-than-expected earnings.Apple jumped 10 % o n Friday, ending the day with a record market capitalization of $1.817 trillion. It\u2019s the first time the company\u2019s valuation has surpassed that of Saudi Arabia\u2019s national oil company, which made its market debut in Riyadh in December, and is valued at $1.76 trillion. Before that, Apple had vied with Microsoft Corp. for the title of the U.S.\u2019s largest public company.The dethroning of Aramco comes after a tumultuous period for the Saudi company. Its initial public offering fell short of Crown Price Mohammed bin Salman\u2019s expectations. The kingdom\u2019s de facto ruler initially wanted a valuation of $2 trillion and to raise $100 billion. But after foreign investors balked at the pricing, the government settled on a smaller domestic offering and raised about $30 billion, still the largest IPO ever.Then came this year\u2019s plunge in crude prices as energy demand crashed with the spread of the virus. Aramco\u2019s second-quarter revenue probably dropped to about $37 billion from $76 billion a year earlier, according to analyst estimates compiled by Bloomberg. That\u2019s less than the $59.7 billion in sales that Apple reported for its most recent period.Aramco\u2019s stock is down 6.4 % s ince the end of December, though that\u2019s far less than the fall of other oil majors. Exxon Mobil Corp. has declined 40 % a nd Royal Dutch Shell Plc has dropped 50%.Apple, meanwhile, has benefited as the pandemic has strengthened the market positions of the world\u2019s biggest technology companies, which boast strong balance sheets and fast-growing businesses thanks to an acceleration in the shift to digital services. The iPhone maker\u2019s shares have gained 45 % s o far this year.(Adds closing share values throughout. A previous version of this story corrected the market cap gain.)For more articles like this, please visit us at bloomberg.comSubscribe now to stay ahead with the most trusted business news source.\u00a92020 Bloomberg L.P.' , 'url' : 'https://finance.yahoo.com/news/apple-briefly-tops-saudi-aramco-153503708.html' , 'author_name' : 'Jeran Wittenstein and Matthew Martin' , 'provider_publish_time' : 1596229879 , 'provider_name' : 'Bloomberg' , 'hosted' : True , 'tickers' : [], 'thumbnail' : 'https://media.zenfs.com/en/bloomberg_markets_842/8a17157f40b14e617bb6ed1b8e2774f5' , 'featured' : False , 'timeZoneShortName' : 'EDT' , 'timeZoneFullName' : 'America/New_York' , 'gmtOffSetMilliseconds' : - 14400000 , 'imageSet' : {} }] quotes \u00b6 Details Description : Get real-time quote information for given symbol(s) Return : list Tip If multiple symbols are used, only one request will be made regardless of the number of symbols Example tickers = Ticker ( 'fb aapl amzn nflx goog' ) tickers . quotes Data [{ 'language' : 'en-US' , 'region' : 'US' , 'quoteType' : 'EQUITY' , 'quoteSourceName' : 'Nasdaq Real Time Price' , 'triggerable' : True , 'currency' : 'USD' , 'tradeable' : False , 'firstTradeDateMilliseconds' : 1337347800000 , 'priceHint' : 2 , 'postMarketChangePercent' : - 0.067015484 , 'postMarketTime' : 1596233013 , 'postMarketPrice' : 253.5 , 'postMarketChange' : - 0.16999817 , 'regularMarketChange' : 19.169998 , 'regularMarketChangePercent' : 8.17484 , 'regularMarketTime' : 1596225602 , 'regularMarketPrice' : 253.67 , 'regularMarketDayHigh' : 255.85 , 'regularMarketDayRange' : '249.0 - 255.85' , 'regularMarketDayLow' : 249.0 , 'regularMarketVolume' : 52105898 , 'regularMarketPreviousClose' : 234.5 , 'bid' : 253.31 , 'ask' : 253.7 , 'bidSize' : 11 , 'askSize' : 12 , 'fullExchangeName' : 'NasdaqGS' , 'financialCurrency' : 'USD' , 'regularMarketOpen' : 255.82 , 'averageDailyVolume3Month' : 24501318 , 'averageDailyVolume10Day' : 17021500 , 'fiftyTwoWeekLowChange' : 116.56999 , 'fiftyTwoWeekLowChangePercent' : 0.8502552 , 'fiftyTwoWeekRange' : '137.1 - 255.85' , 'fiftyTwoWeekHighChange' : - 2.180008 , 'fiftyTwoWeekHighChangePercent' : - 0.008520649 , 'fiftyTwoWeekLow' : 137.1 , 'fiftyTwoWeekHigh' : 255.85 , 'earningsTimestamp' : 1596124800 , 'earningsTimestampStart' : 1603868340 , 'earningsTimestampEnd' : 1604304000 , 'trailingPE' : 34.80653 , 'epsTrailingTwelveMonths' : 7.288 , 'epsForward' : 9.74 , 'sharesOutstanding' : 2408470016 , 'bookValue' : 36.936 , 'fiftyDayAverage' : 235.86743 , 'fiftyDayAverageChange' : 17.802567 , 'fiftyDayAverageChangePercent' : 0.075477004 , 'twoHundredDayAverage' : 207.2297 , 'twoHundredDayAverageChange' : 46.440292 , 'twoHundredDayAverageChangePercent' : 0.22410056 , 'marketCap' : 723725582336 , 'forwardPE' : 26.044147 , 'priceToBook' : 6.867825 , 'sourceInterval' : 15 , 'exchangeDataDelayedBy' : 0 , 'marketState' : 'POST' , 'exchange' : 'NMS' , 'shortName' : 'Facebook, Inc.' , 'longName' : 'Facebook, Inc.' , 'messageBoardId' : 'finmb_20765463' , 'exchangeTimezoneName' : 'America/New_York' , 'exchangeTimezoneShortName' : 'EDT' , 'gmtOffSetMilliseconds' : - 14400000 , 'market' : 'us_market' , 'esgPopulated' : False , 'displayName' : 'Facebook' , 'symbol' : 'FB' }, { 'language' : 'en-US' , 'region' : 'US' , 'quoteType' : 'EQUITY' , 'quoteSourceName' : 'Delayed Quote' , 'triggerable' : True , 'currency' : 'USD' , 'tradeable' : False , 'firstTradeDateMilliseconds' : 345479400000 , 'priceHint' : 2 , 'postMarketChangePercent' : 0.519949 , 'postMarketTime' : 1596233031 , 'postMarketPrice' : 427.25 , 'postMarketChange' : 2.2099915 , 'regularMarketChange' : 40.28 , 'regularMarketChangePercent' : 10.468863 , 'regularMarketTime' : 1596225602 , 'regularMarketPrice' : 425.04 , 'regularMarketDayHigh' : 425.66 , 'regularMarketDayRange' : '403.36 - 425.66' , 'regularMarketDayLow' : 403.36 , 'regularMarketVolume' : 91201476 , 'regularMarketPreviousClose' : 384.76 , 'bid' : 427.26 , 'ask' : 426.2 , 'bidSize' : 30 , 'askSize' : 31 , 'fullExchangeName' : 'NasdaqGS' , 'financialCurrency' : 'USD' , 'regularMarketOpen' : 411.535 , 'averageDailyVolume3Month' : 34664412 , 'averageDailyVolume10Day' : 32670312 , 'fiftyTwoWeekLowChange' : 232.46 , 'fiftyTwoWeekLowChangePercent' : 1.2070827 , 'fiftyTwoWeekRange' : '192.58 - 425.66' , 'fiftyTwoWeekHighChange' : - 0.6199951 , 'fiftyTwoWeekHighChangePercent' : - 0.0014565501 , 'fiftyTwoWeekLow' : 192.58 , 'fiftyTwoWeekHigh' : 425.66 , 'dividendDate' : 1589414400 , 'earningsTimestamp' : 1596124800 , 'earningsTimestampStart' : 1603868340 , 'earningsTimestampEnd' : 1604304000 , 'trailingAnnualDividendRate' : 3.08 , 'trailingPE' : 32.236633 , 'trailingAnnualDividendYield' : 0.0080049895 , 'epsTrailingTwelveMonths' : 13.185 , 'epsForward' : 14.97 , 'sharesOutstanding' : 4334329856 , 'bookValue' : 16.761 , 'fiftyDayAverage' : 369.66028 , 'fiftyDayAverageChange' : 55.37973 , 'fiftyDayAverageChangePercent' : 0.1498125 , 'twoHundredDayAverage' : 313.8948 , 'twoHundredDayAverageChange' : 111.1452 , 'twoHundredDayAverageChangePercent' : 0.35408422 , 'marketCap' : 1842263621632 , 'forwardPE' : 28.392786 , 'priceToBook' : 25.35887 , 'sourceInterval' : 15 , 'exchangeDataDelayedBy' : 0 , 'marketState' : 'POST' , 'exchange' : 'NMS' , 'shortName' : 'Apple Inc.' , 'longName' : 'Apple Inc.' , 'messageBoardId' : 'finmb_24937' , 'exchangeTimezoneName' : 'America/New_York' , 'exchangeTimezoneShortName' : 'EDT' , 'gmtOffSetMilliseconds' : - 14400000 , 'market' : 'us_market' , 'esgPopulated' : False , 'displayName' : 'Apple' , 'symbol' : 'AAPL' }, { 'language' : 'en-US' , 'region' : 'US' , 'quoteType' : 'EQUITY' , 'quoteSourceName' : 'Nasdaq Real Time Price' , 'triggerable' : True , 'currency' : 'USD' , 'tradeable' : False , 'firstTradeDateMilliseconds' : 863703000000 , 'priceHint' : 2 , 'postMarketChangePercent' : - 0.2673244 , 'postMarketTime' : 1596232724 , 'postMarketPrice' : 3156.22 , 'postMarketChange' : - 8.459961 , 'regularMarketChange' : 112.80005 , 'regularMarketChangePercent' : 3.696084 , 'regularMarketTime' : 1596225602 , 'regularMarketPrice' : 3164.68 , 'regularMarketDayHigh' : 3244.5 , 'regularMarketDayRange' : '3151.02 - 3244.5' , 'regularMarketDayLow' : 3151.02 , 'regularMarketVolume' : 7862360 , 'regularMarketPreviousClose' : 3051.88 , 'bid' : 3160.52 , 'ask' : 3160.0 , 'bidSize' : 8 , 'askSize' : 14 , 'fullExchangeName' : 'NasdaqGS' , 'financialCurrency' : 'USD' , 'regularMarketOpen' : 3244.0 , 'averageDailyVolume3Month' : 4675034 , 'averageDailyVolume10Day' : 4733650 , 'fiftyTwoWeekLowChange' : 1538.6499 , 'fiftyTwoWeekLowChangePercent' : 0.9462617 , 'fiftyTwoWeekRange' : '1626.03 - 3344.29' , 'fiftyTwoWeekHighChange' : - 179.6101 , 'fiftyTwoWeekHighChangePercent' : - 0.053706497 , 'fiftyTwoWeekLow' : 1626.03 , 'fiftyTwoWeekHigh' : 3344.29 , 'earningsTimestamp' : 1596124800 , 'earningsTimestampStart' : 1603382400 , 'earningsTimestampEnd' : 1603728000 , 'trailingPE' : 151.15971 , 'epsTrailingTwelveMonths' : 20.936 , 'epsForward' : 37.79 , 'sharesOutstanding' : 498776000 , 'bookValue' : 130.806 , 'fiftyDayAverage' : 2896.579 , 'fiftyDayAverageChange' : 268.10083 , 'fiftyDayAverageChangePercent' : 0.09255774 , 'twoHundredDayAverage' : 2323.4736 , 'twoHundredDayAverageChange' : 841.2063 , 'twoHundredDayAverageChangePercent' : 0.36204684 , 'marketCap' : 1578466410496 , 'forwardPE' : 83.74384 , 'priceToBook' : 24.193691 , 'sourceInterval' : 15 , 'exchangeDataDelayedBy' : 0 , 'marketState' : 'POST' , 'exchange' : 'NMS' , 'shortName' : 'Amazon.com, Inc.' , 'longName' : 'Amazon.com, Inc.' , 'messageBoardId' : 'finmb_18749' , 'exchangeTimezoneName' : 'America/New_York' , 'exchangeTimezoneShortName' : 'EDT' , 'gmtOffSetMilliseconds' : - 14400000 , 'market' : 'us_market' , 'esgPopulated' : False , 'displayName' : 'Amazon.com' , 'symbol' : 'AMZN' }, { 'language' : 'en-US' , 'region' : 'US' , 'quoteType' : 'EQUITY' , 'quoteSourceName' : 'Nasdaq Real Time Price' , 'triggerable' : True , 'currency' : 'USD' , 'tradeable' : False , 'firstTradeDateMilliseconds' : 1022160600000 , 'priceHint' : 2 , 'postMarketChangePercent' : - 0.5584215 , 'postMarketTime' : 1596232099 , 'postMarketPrice' : 486.15 , 'postMarketChange' : - 2.730011 , 'regularMarketChange' : 3.080017 , 'regularMarketChangePercent' : 0.6340093 , 'regularMarketTime' : 1596225602 , 'regularMarketPrice' : 488.88 , 'regularMarketDayHigh' : 494.795 , 'regularMarketDayRange' : '484.5 - 494.795' , 'regularMarketDayLow' : 484.5 , 'regularMarketVolume' : 5797772 , 'regularMarketPreviousClose' : 485.8 , 'bid' : 487.3 , 'ask' : 488.56 , 'bidSize' : 9 , 'askSize' : 40 , 'fullExchangeName' : 'NasdaqGS' , 'financialCurrency' : 'USD' , 'regularMarketOpen' : 488.29 , 'averageDailyVolume3Month' : 7602690 , 'averageDailyVolume10Day' : 7325312 , 'fiftyTwoWeekLowChange' : 236.6 , 'fiftyTwoWeekLowChangePercent' : 0.93784684 , 'fiftyTwoWeekRange' : '252.28 - 575.37' , 'fiftyTwoWeekHighChange' : - 86.48999 , 'fiftyTwoWeekHighChangePercent' : - 0.15032065 , 'fiftyTwoWeekLow' : 252.28 , 'fiftyTwoWeekHigh' : 575.37 , 'earningsTimestamp' : 1594900801 , 'earningsTimestampStart' : 1602676800 , 'earningsTimestampEnd' : 1603123200 , 'trailingPE' : 82.55319 , 'epsTrailingTwelveMonths' : 5.922 , 'epsForward' : 8.78 , 'sharesOutstanding' : 441015008 , 'bookValue' : 21.166 , 'fiftyDayAverage' : 478.79858 , 'fiftyDayAverageChange' : 10.081421 , 'fiftyDayAverageChangePercent' : 0.021055661 , 'twoHundredDayAverage' : 409.49237 , 'twoHundredDayAverageChange' : 79.387634 , 'twoHundredDayAverageChangePercent' : 0.19386841 , 'marketCap' : 215603412992 , 'forwardPE' : 55.681095 , 'priceToBook' : 23.09742 , 'sourceInterval' : 15 , 'exchangeDataDelayedBy' : 0 , 'marketState' : 'POST' , 'exchange' : 'NMS' , 'shortName' : 'Netflix, Inc.' , 'longName' : 'Netflix, Inc.' , 'messageBoardId' : 'finmb_32012' , 'exchangeTimezoneName' : 'America/New_York' , 'exchangeTimezoneShortName' : 'EDT' , 'gmtOffSetMilliseconds' : - 14400000 , 'market' : 'us_market' , 'esgPopulated' : False , 'displayName' : 'Netflix' , 'symbol' : 'NFLX' }, { 'language' : 'en-US' , 'region' : 'US' , 'quoteType' : 'EQUITY' , 'quoteSourceName' : 'Delayed Quote' , 'triggerable' : True , 'currency' : 'USD' , 'tradeable' : False , 'firstTradeDateMilliseconds' : 1092922200000 , 'priceHint' : 2 , 'postMarketChangePercent' : 0.0026999423 , 'postMarketTime' : 1596231815 , 'postMarketPrice' : 1483.0 , 'postMarketChange' : 0.040039062 , 'regularMarketChange' : - 48.48999 , 'regularMarketChangePercent' : - 3.16628 , 'regularMarketTime' : 1596225602 , 'regularMarketPrice' : 1482.96 , 'regularMarketDayHigh' : 1508.95 , 'regularMarketDayRange' : '1454.04 - 1508.95' , 'regularMarketDayLow' : 1454.04 , 'regularMarketVolume' : 3368287 , 'regularMarketPreviousClose' : 1531.45 , 'bid' : 1483.0 , 'ask' : 1484.0 , 'bidSize' : 12 , 'askSize' : 8 , 'fullExchangeName' : 'NasdaqGS' , 'financialCurrency' : 'USD' , 'regularMarketOpen' : 1505.01 , 'averageDailyVolume3Month' : 1643406 , 'averageDailyVolume10Day' : 1380212 , 'fiftyTwoWeekLowChange' : 469.42395 , 'fiftyTwoWeekLowChangePercent' : 0.46315467 , 'fiftyTwoWeekRange' : '1013.536 - 1586.99' , 'fiftyTwoWeekHighChange' : - 104.03003 , 'fiftyTwoWeekHighChangePercent' : - 0.06555179 , 'fiftyTwoWeekLow' : 1013.536 , 'fiftyTwoWeekHigh' : 1586.99 , 'trailingPE' : 29.915276 , 'epsTrailingTwelveMonths' : 49.572 , 'epsForward' : 55.06 , 'sharesOutstanding' : 336161984 , 'bookValue' : 297.759 , 'fiftyDayAverage' : 1479.2025 , 'fiftyDayAverageChange' : 3.7574463 , 'fiftyDayAverageChangePercent' : 0.0025401837 , 'twoHundredDayAverage' : 1375.5465 , 'twoHundredDayAverageChange' : 107.41345 , 'twoHundredDayAverageChangePercent' : 0.07808784 , 'marketCap' : 1014620422144 , 'forwardPE' : 26.933525 , 'priceToBook' : 4.9804034 , 'sourceInterval' : 15 , 'exchangeDataDelayedBy' : 0 , 'marketState' : 'POST' , 'exchange' : 'NMS' , 'shortName' : 'Alphabet Inc.' , 'longName' : 'Alphabet Inc.' , 'messageBoardId' : 'finmb_29096' , 'exchangeTimezoneName' : 'America/New_York' , 'exchangeTimezoneShortName' : 'EDT' , 'gmtOffSetMilliseconds' : - 14400000 , 'market' : 'us_market' , 'esgPopulated' : False , 'displayName' : 'Alphabet' , 'symbol' : 'GOOG' }] recommendations \u00b6 Details Description : Get real-time quote information for given symbol(s) Return : dict Example tickers = Ticker ( 'aapl gs hasgx ^GSPC ezu' ) tickers . recommendations Data { 'aapl' : { 'symbol' : 'AAPL' , 'recommendedSymbols' : [{ 'symbol' : 'GOOG' , 'score' : 0.279041 }, { 'symbol' : 'AMZN' , 'score' : 0.278376 }, { 'symbol' : 'FB' , 'score' : 0.274481 }, { 'symbol' : 'TSLA' , 'score' : 0.225957 }, { 'symbol' : 'NFLX' , 'score' : 0.207756 }] }, 'gs' : { 'symbol' : 'GS' , 'recommendedSymbols' : [{ 'symbol' : 'MS' , 'score' : 0.195796 }, { 'symbol' : 'JPM' , 'score' : 0.160104 }, { 'symbol' : 'WFC' , 'score' : 0.139129 }, { 'symbol' : 'C' , 'score' : 0.137378 }, { 'symbol' : 'BAC' , 'score' : 0.125276 }] }, 'hasgx' : { 'symbol' : 'HASGX' , 'recommendedSymbols' : [{ 'symbol' : 'HAVLX' , 'score' : 0.020499 }, { 'symbol' : 'HAMGX' , 'score' : 0.016157 }, { 'symbol' : 'HASCX' , 'score' : 0.014594 }, { 'symbol' : 'HAIGX' , 'score' : 0.012841 }, { 'symbol' : 'HAMVX' , 'score' : 0.012294 }] }, '^GSPC' : { 'symbol' : '^GSPC' , 'recommendedSymbols' : [{ 'symbol' : '^TYX' , 'score' : 0.187618 }, { 'symbol' : '^IXIC' , 'score' : 0.157791 }, { 'symbol' : '^DJI' , 'score' : 0.134881 }, { 'symbol' : 'GE' , 'score' : 0.10353 }, { 'symbol' : 'MCD' , 'score' : 0.102003 }] }, 'ezu' : { 'symbol' : 'EZU' , 'recommendedSymbols' : [{ 'symbol' : 'EWQ' , 'score' : 0.152994 }, { 'symbol' : 'EWU' , 'score' : 0.146443 }, { 'symbol' : 'EWN' , 'score' : 0.145267 }, { 'symbol' : 'IEV' , 'score' : 0.143627 }, { 'symbol' : 'EWD' , 'score' : 0.141428 }] } } technical_insights \u00b6 Details Description : Technical indicators for given symbol(s) Return : dict Example aapl = Ticker ( 'aapl' ) aapl . technical_insights Data { 'aapl' : { 'symbol' : 'aapl' , 'instrumentInfo' : { 'technicalEvents' : { 'provider' : 'Trading Central' , 'sector' : 'Technology' , 'shortTermOutlook' : { 'stateDescription' : 'Recent bearish events outweigh bullish events.' , 'direction' : 'Bearish' , 'score' : 3 , 'scoreDescription' : 'Strong Bearish Evidence' , 'sectorDirection' : 'Bullish' , 'sectorScore' : 2 , 'sectorScoreDescription' : 'Bullish Evidence' , 'indexDirection' : 'Bearish' , 'indexScore' : 2 , 'indexScoreDescription' : 'Bearish Evidence' }, 'intermediateTermOutlook' : { 'stateDescription' : 'Bullish events outweigh bearish events.' , 'direction' : 'Bullish' , 'score' : 1 , 'scoreDescription' : 'Weak Bullish Evidence' , 'sectorDirection' : 'Bullish' , 'sectorScore' : 2 , 'sectorScoreDescription' : 'Bullish Evidence' , 'indexDirection' : 'Bullish' , 'indexScore' : 2 , 'indexScoreDescription' : 'Bullish Evidence' }, 'longTermOutlook' : { 'stateDescription' : 'All events are bullish.' , 'direction' : 'Bullish' , 'score' : 2 , 'scoreDescription' : 'Bullish Evidence' , 'sectorDirection' : 'Bullish' , 'sectorScore' : 2 , 'sectorScoreDescription' : 'Bullish Evidence' , 'indexDirection' : 'Bullish' , 'indexScore' : 3 , 'indexScoreDescription' : 'Strong Bullish Evidence' } }, 'keyTechnicals' : { 'provider' : 'Trading Central' , 'support' : 203.77 , 'resistance' : 388.23 , 'stopLoss' : 355.460616 }, 'valuation' : { 'color' : 0.0 , 'description' : 'Overvalued' , 'discount' : '-8%' , 'relativeValue' : 'Premium' , 'provider' : 'Trading Central' } }, 'companySnapshot' : { 'sectorInfo' : 'Technology' , 'company' : { 'innovativeness' : 0.9983 , 'hiring' : 0.9795 , 'sustainability' : 0.8240000000000001 , 'insiderSentiments' : 0.2217 , 'earningsReports' : 0.8340000000000001 , 'dividends' : 0.25 }, 'sector' : { 'innovativeness' : 0.5 , 'hiring' : 0.5 , 'sustainability' : 0.5 , 'insiderSentiments' : 0.5 , 'earningsReports' : 0.5 , 'dividends' : 0.5 } }, 'recommendation' : { 'targetPrice' : 450.0 , 'provider' : 'Argus Research' , 'rating' : 'BUY' }, 'sigDevs' : [{ 'headline' : 'Apple Reports Q3 Earnings Of $2.58 Per Share' , 'date' : '2020-07-30' }] } }","title":"Miscellaenous"},{"location":"guide/ticker/miscellaenous/#corporate_events","text":"Details Description : Significant events related to a given symbol(s) Return : pandas.DataFrame Example aapl = Ticker ( 'aapl' ) df = aapl . corporate_events df . head () Data date significance headline parentTopics 0 2012-03-19 00:00:00 1 Apple Inc. Announces Plans To Initiate Dividend And Share Repurchase Program Performance 1 2012-10-25 00:00:00 3 Apple Inc Declares Cash Dividend Performance 2 2013-01-23 00:00:00 1 Apple Inc Issues Q2 2013 Revenue Guidance Below Analysts' Estimates; Declares Cash Dividend Corporate Guidance 3 2013-04-23 00:00:00 1 Apple Inc Increases Repurchase Authorization To $60 Billion From The $10 Billion; Approves Quarterly Dividend Ownership/Control 4 2013-07-23 00:00:00 3 Apple Inc Declares Cash Dividend Performance","title":"corporate_events"},{"location":"guide/ticker/miscellaenous/#news","text":"Details Description : Get news headline and summary information for given symbol(s) Return : list Arguments : Argument Type Default Required Options count int 25 optional start str or datetime.datetime None optional If a str is used, the format should be YYYY-MM-DD Warning It's recommended to use one symbol when utilizing this method as there's no discernible way to group resulting news items to the symbols they belong to. Tip If multiple symbols are used, only one request will be made regardless of the number of symbols Example aapl = Ticker ( 'aapl' ) aapl . news ( 5 ) Data [{ 'rank' : 0 , 'id' : '3a3b4532-38fb-3fcb-85b3-3cdc4d5bbabe' , 'tag' : 'news' , 'title' : 'Big Tech\u2019s CEOs Got the Last Word. Here\u2019s Why Tech Earnings Were So Important.' , 'summary' : 'Amazon\u2019s sales were up 40 % i n the June quarter, which one analyst referred to as shocking levels of growth. Meanwhile, Apple couldn\u2019t keep up with demand for Macs and iPads.' , 'url' : 'https://www.barrons.com/articles/heres-why-amazon-apple-and-facebook-earnings-were-so-important-51596232561?siteid=yhoof2&yptr=yahoo' , 'author_name' : 'Eric J. Savitz' , 'provider_publish_time' : 1596232560 , 'provider_name' : 'Barrons.com' , 'hosted' : False , 'tickers' : [], 'featured' : False , 'timeZoneShortName' : 'EDT' , 'timeZoneFullName' : 'America/New_York' , 'gmtOffSetMilliseconds' : - 14400000 , 'imageSet' : {} }, { 'rank' : 1 , 'id' : 'e0ea15cf-9cd4-33fa-b8ef-87ea7ee40c32' , 'tag' : 'news' , 'title' : 'Microsoft Is in Talks to Buy TikTok in U.S.' , 'summary' : '(Bloomberg) -- Microsoft Corp. is exploring an acquisition of TikTok\u2019s operations in the U.S., according to a people familiar with the matter. A deal would give the software company a popular social-media service and relieve U.S. government pressure on the Chinese owner of the video-sharing app.The Trump administration has been weighing whether to direct China-based ByteDance Ltd. to divest its stake in TikTok\u2019s U.S. operations, according to several people familiar with the issue. The U.S. has been investigating potential national security risks due to the Chinese company\u2019s control of the app.While the administration was prepared to announce an order as soon as Friday, according to three people familiar with the matter, another person said later that the decision was on hold, pending further review by President Donald Trump. All of the people asked not to be identified because the deliberations are private.Spokespeople for Microsoft and TikTok declined to comment on any potential talks. The software company\u2019s interest in the app was reported earlier by Fox Business Network.\u201cWe are looking at TikTok. We may be banning TikTok,\u201d Trump told reporters Friday at the White House. \u201cWe are looking at a lot of alternatives with respect to TikTok.\u201dAny transaction could face regulatory hurdles. ByteDance bought Musical.ly Inc. in 2017 and merged it with TikTok, creating a social-media hit in the U.S -- the first Chinese app to make such inroads. As TikTok became more popular, U.S. officials grew concerned about the potential for the Chinese government to use the app to gain data on U.S. citizens.The Committee on Foreign Investment in the U.S. began a review in 2019 of the Musical.ly purchase. In recent years, CFIUS, which investigates overseas acquisitions of U.S. businesses, has taken a much more aggressive role in reviewing and approving deals that may threaten national security. It can recommend that the president block or unwind transactions.It\u2019s also possible that other potential buyers could come forward, said another person familiar with the discussions. Microsoft\u2019s industry peers -- Facebook Inc., Apple Inc., Amazon.com Inc. and Alphabet Inc. -- fit the profile of potential suitors, though all are under antitrust scrutiny from U.S. regulators, which would likely complicate a deal.A purchase of TikTok would represent a huge coup for Microsoft, which would gain a popular consumer app that has won over young people with a steady diet of dance videos, lip-syncing clips and viral memes. The company has dabbled in social-media investments in the past, but hasn\u2019t developed a popular service of its own in the lucrative sector. Microsoft acquired the LinkedIn job-hunting and corporate networking company for $26.2 billion in 2016.Microsoft can point to one acquisition that came with a massive existing community of users that has increased under its ownership -- the 2014 deal for Minecraft, the best-selling video game ever.Other purchases of popular services have gone less well. The 2011 pickup of Skype led to several years of stagnation for the voice-calling service and Microsoft fell behind newer products in the category. Outside of Xbox, the company hasn\u2019t focused on younger consumers. A TikTok deal could change that, though, and give Microsoft \u201ca crown jewel on the consumer social media front,\u201d Dan Ives, an analyst at Wedbush Securities, wrote in a note to investors Friday.TikTok has repeatedly rejected accusations that it feeds user data to China or is beholden to Beijing, even though ByteDance is based there. TikTok now has a U.S.-based chief executive officer and ByteDance has considered making other organizational changes to satisfy U.S. authorities.\u201cHundreds of millions of people come to TikTok for entertainment and connection, including our community of creators and artists who are building livelihoods from the platform,\u201d a TikTok spokeswoman said Friday. \u201cWe\u2019re motivated by their passion and creativity, and committed to protecting their privacy and safety as we continue working to bring joy to families and meaningful careers to those who create on our platform.\u201dThe mechanics of separating the TikTok app in the U.S. from the rest of its operations won\u2019t come without complications. Unlike many tech companies in the U.S. where engineers for, say, Google, work on particular products like YouTube or Google Maps, many of ByteDance\u2019s engineers work across its different platforms and services and continue to work on TikTok globally.On Thursday, U.S. Senators Josh Hawley, a Missouri Republican, and Richard Blumenthal, a Connecticut Democrat, wrote the Justice Department asking for an investigation of whether TikTok has violated the constitutional rights of Americans by sharing private information with the Chinese government.A deal with Microsoft could potentially help extract ByteDance from the political war between the U.S. and China.U.S. Senator Marco Rubio, a Florida Republican and member of the Senate\u2019s Select Committee on Intelligence, applauded the idea of a TikTok sale. \u201cIn its current form, TikTok represents a potential threat to personal privacy and our national security,\u201d Rubio said in a statement. \u201cWe must do more than simply remove ByteDance from the equation. Moving forward, we must establish a framework of standards that must be met before a high-risk, foreign-based app is allowed to operate on American telecommunications networks and devices.\u201d(Updates with details of TikTok\u2019s operations in the 14th paragraph.)For more articles like this, please visit us at bloomberg.comSubscribe now to stay ahead with the most trusted business news source.\u00a92020 Bloomberg L.P.' , 'url' : 'https://finance.yahoo.com/news/microsoft-said-talks-buy-tiktok-185221680.html' , 'author_name' : 'Kurt Wagner, Jennifer Jacobs, Saleha Mohsin and Jenny Leonard' , 'provider_publish_time' : 1596232267 , 'provider_name' : 'Bloomberg' , 'hosted' : True , 'tickers' : [], 'thumbnail' : 'https://media.zenfs.com/en/bloomberg_technology_68/d998c0ffe5e9a652dce2e465c5d6d8a3' , 'featured' : False , 'timeZoneShortName' : 'EDT' , 'timeZoneFullName' : 'America/New_York' , 'gmtOffSetMilliseconds' : - 14400000 , 'imageSet' : {} }, { 'rank' : 2 , 'id' : '8cc7e7d9-87ec-3aaf-8a51-24f8ae1f6eca' , 'tag' : 'news' , 'title' : 'Bitcoin Is Rising Again. Asking Why Takes You Down the Financial Rabbit Hole.' , 'summary' : 'How to explain Bitcoin\u2019s reversal of fortune? In search of an answer our columnist explores the dollar, the euro, gold, stocks, inflation, and more.' , 'url' : 'https://www.barrons.com/articles/bitcoin-is-rising-again-asking-why-takes-you-down-a-financial-rabbit-hole-51596231804?siteid=yhoof2&yptr=yahoo' , 'author_name' : 'Jack Hough' , 'provider_publish_time' : 1596231780 , 'provider_name' : 'Barrons.com' , 'hosted' : False , 'tickers' : [], 'featured' : False , 'timeZoneShortName' : 'EDT' , 'timeZoneFullName' : 'America/New_York' , 'gmtOffSetMilliseconds' : - 14400000 , 'imageSet' : {} }, { 'rank' : 3 , 'id' : '14ba64e7-a900-3e30-b513-94a5efce0dd7' , 'tag' : 'news' , 'title' : 'Apple Stock Rallied 10 % F riday. Here\u2019s Why.' , 'summary' : 'One day after reporting June quarter results, Apple (ticker: AAPL) stock surged 10.5% to $425.04, the stock\u2019s first-ever close above $400. The stock won\u2019t stay there for long, though: The company Thursday declared a 4-for-1 stock split, effective August 31. A big revenue beat: Apple had $59.7 billion in sales in the quarter, up 11 % f rom a year ago, and beating consensus by $7.6 billion.' , 'url' : 'https://www.barrons.com/articles/apple-stock-hits-new-highs-earnings-51596215820?siteid=yhoof2&yptr=yahoo' , 'author_name' : 'Eric J. Savitz' , 'provider_publish_time' : 1596231300 , 'provider_name' : 'Barrons.com' , 'hosted' : False , 'tickers' : [], 'featured' : False , 'timeZoneShortName' : 'EDT' , 'timeZoneFullName' : 'America/New_York' , 'gmtOffSetMilliseconds' : - 14400000 , 'imageSet' : {} }, { 'rank' : 4 , 'id' : '5894f228-5bad-3eda-8a48-d8fc0bdced0c' , 'tag' : 'news' , 'title' : 'Apple Tops Saudi Aramco as World\u2019s Most Valuable Company' , 'summary' : '(Bloomberg) -- Apple Inc. became the world\u2019s most valuable company with its market value overtaking Saudi Aramco in the wake of better-than-expected earnings.Apple jumped 10 % o n Friday, ending the day with a record market capitalization of $1.817 trillion. It\u2019s the first time the company\u2019s valuation has surpassed that of Saudi Arabia\u2019s national oil company, which made its market debut in Riyadh in December, and is valued at $1.76 trillion. Before that, Apple had vied with Microsoft Corp. for the title of the U.S.\u2019s largest public company.The dethroning of Aramco comes after a tumultuous period for the Saudi company. Its initial public offering fell short of Crown Price Mohammed bin Salman\u2019s expectations. The kingdom\u2019s de facto ruler initially wanted a valuation of $2 trillion and to raise $100 billion. But after foreign investors balked at the pricing, the government settled on a smaller domestic offering and raised about $30 billion, still the largest IPO ever.Then came this year\u2019s plunge in crude prices as energy demand crashed with the spread of the virus. Aramco\u2019s second-quarter revenue probably dropped to about $37 billion from $76 billion a year earlier, according to analyst estimates compiled by Bloomberg. That\u2019s less than the $59.7 billion in sales that Apple reported for its most recent period.Aramco\u2019s stock is down 6.4 % s ince the end of December, though that\u2019s far less than the fall of other oil majors. Exxon Mobil Corp. has declined 40 % a nd Royal Dutch Shell Plc has dropped 50%.Apple, meanwhile, has benefited as the pandemic has strengthened the market positions of the world\u2019s biggest technology companies, which boast strong balance sheets and fast-growing businesses thanks to an acceleration in the shift to digital services. The iPhone maker\u2019s shares have gained 45 % s o far this year.(Adds closing share values throughout. A previous version of this story corrected the market cap gain.)For more articles like this, please visit us at bloomberg.comSubscribe now to stay ahead with the most trusted business news source.\u00a92020 Bloomberg L.P.' , 'url' : 'https://finance.yahoo.com/news/apple-briefly-tops-saudi-aramco-153503708.html' , 'author_name' : 'Jeran Wittenstein and Matthew Martin' , 'provider_publish_time' : 1596229879 , 'provider_name' : 'Bloomberg' , 'hosted' : True , 'tickers' : [], 'thumbnail' : 'https://media.zenfs.com/en/bloomberg_markets_842/8a17157f40b14e617bb6ed1b8e2774f5' , 'featured' : False , 'timeZoneShortName' : 'EDT' , 'timeZoneFullName' : 'America/New_York' , 'gmtOffSetMilliseconds' : - 14400000 , 'imageSet' : {} }]","title":"news"},{"location":"guide/ticker/miscellaenous/#quotes","text":"Details Description : Get real-time quote information for given symbol(s) Return : list Tip If multiple symbols are used, only one request will be made regardless of the number of symbols Example tickers = Ticker ( 'fb aapl amzn nflx goog' ) tickers . quotes Data [{ 'language' : 'en-US' , 'region' : 'US' , 'quoteType' : 'EQUITY' , 'quoteSourceName' : 'Nasdaq Real Time Price' , 'triggerable' : True , 'currency' : 'USD' , 'tradeable' : False , 'firstTradeDateMilliseconds' : 1337347800000 , 'priceHint' : 2 , 'postMarketChangePercent' : - 0.067015484 , 'postMarketTime' : 1596233013 , 'postMarketPrice' : 253.5 , 'postMarketChange' : - 0.16999817 , 'regularMarketChange' : 19.169998 , 'regularMarketChangePercent' : 8.17484 , 'regularMarketTime' : 1596225602 , 'regularMarketPrice' : 253.67 , 'regularMarketDayHigh' : 255.85 , 'regularMarketDayRange' : '249.0 - 255.85' , 'regularMarketDayLow' : 249.0 , 'regularMarketVolume' : 52105898 , 'regularMarketPreviousClose' : 234.5 , 'bid' : 253.31 , 'ask' : 253.7 , 'bidSize' : 11 , 'askSize' : 12 , 'fullExchangeName' : 'NasdaqGS' , 'financialCurrency' : 'USD' , 'regularMarketOpen' : 255.82 , 'averageDailyVolume3Month' : 24501318 , 'averageDailyVolume10Day' : 17021500 , 'fiftyTwoWeekLowChange' : 116.56999 , 'fiftyTwoWeekLowChangePercent' : 0.8502552 , 'fiftyTwoWeekRange' : '137.1 - 255.85' , 'fiftyTwoWeekHighChange' : - 2.180008 , 'fiftyTwoWeekHighChangePercent' : - 0.008520649 , 'fiftyTwoWeekLow' : 137.1 , 'fiftyTwoWeekHigh' : 255.85 , 'earningsTimestamp' : 1596124800 , 'earningsTimestampStart' : 1603868340 , 'earningsTimestampEnd' : 1604304000 , 'trailingPE' : 34.80653 , 'epsTrailingTwelveMonths' : 7.288 , 'epsForward' : 9.74 , 'sharesOutstanding' : 2408470016 , 'bookValue' : 36.936 , 'fiftyDayAverage' : 235.86743 , 'fiftyDayAverageChange' : 17.802567 , 'fiftyDayAverageChangePercent' : 0.075477004 , 'twoHundredDayAverage' : 207.2297 , 'twoHundredDayAverageChange' : 46.440292 , 'twoHundredDayAverageChangePercent' : 0.22410056 , 'marketCap' : 723725582336 , 'forwardPE' : 26.044147 , 'priceToBook' : 6.867825 , 'sourceInterval' : 15 , 'exchangeDataDelayedBy' : 0 , 'marketState' : 'POST' , 'exchange' : 'NMS' , 'shortName' : 'Facebook, Inc.' , 'longName' : 'Facebook, Inc.' , 'messageBoardId' : 'finmb_20765463' , 'exchangeTimezoneName' : 'America/New_York' , 'exchangeTimezoneShortName' : 'EDT' , 'gmtOffSetMilliseconds' : - 14400000 , 'market' : 'us_market' , 'esgPopulated' : False , 'displayName' : 'Facebook' , 'symbol' : 'FB' }, { 'language' : 'en-US' , 'region' : 'US' , 'quoteType' : 'EQUITY' , 'quoteSourceName' : 'Delayed Quote' , 'triggerable' : True , 'currency' : 'USD' , 'tradeable' : False , 'firstTradeDateMilliseconds' : 345479400000 , 'priceHint' : 2 , 'postMarketChangePercent' : 0.519949 , 'postMarketTime' : 1596233031 , 'postMarketPrice' : 427.25 , 'postMarketChange' : 2.2099915 , 'regularMarketChange' : 40.28 , 'regularMarketChangePercent' : 10.468863 , 'regularMarketTime' : 1596225602 , 'regularMarketPrice' : 425.04 , 'regularMarketDayHigh' : 425.66 , 'regularMarketDayRange' : '403.36 - 425.66' , 'regularMarketDayLow' : 403.36 , 'regularMarketVolume' : 91201476 , 'regularMarketPreviousClose' : 384.76 , 'bid' : 427.26 , 'ask' : 426.2 , 'bidSize' : 30 , 'askSize' : 31 , 'fullExchangeName' : 'NasdaqGS' , 'financialCurrency' : 'USD' , 'regularMarketOpen' : 411.535 , 'averageDailyVolume3Month' : 34664412 , 'averageDailyVolume10Day' : 32670312 , 'fiftyTwoWeekLowChange' : 232.46 , 'fiftyTwoWeekLowChangePercent' : 1.2070827 , 'fiftyTwoWeekRange' : '192.58 - 425.66' , 'fiftyTwoWeekHighChange' : - 0.6199951 , 'fiftyTwoWeekHighChangePercent' : - 0.0014565501 , 'fiftyTwoWeekLow' : 192.58 , 'fiftyTwoWeekHigh' : 425.66 , 'dividendDate' : 1589414400 , 'earningsTimestamp' : 1596124800 , 'earningsTimestampStart' : 1603868340 , 'earningsTimestampEnd' : 1604304000 , 'trailingAnnualDividendRate' : 3.08 , 'trailingPE' : 32.236633 , 'trailingAnnualDividendYield' : 0.0080049895 , 'epsTrailingTwelveMonths' : 13.185 , 'epsForward' : 14.97 , 'sharesOutstanding' : 4334329856 , 'bookValue' : 16.761 , 'fiftyDayAverage' : 369.66028 , 'fiftyDayAverageChange' : 55.37973 , 'fiftyDayAverageChangePercent' : 0.1498125 , 'twoHundredDayAverage' : 313.8948 , 'twoHundredDayAverageChange' : 111.1452 , 'twoHundredDayAverageChangePercent' : 0.35408422 , 'marketCap' : 1842263621632 , 'forwardPE' : 28.392786 , 'priceToBook' : 25.35887 , 'sourceInterval' : 15 , 'exchangeDataDelayedBy' : 0 , 'marketState' : 'POST' , 'exchange' : 'NMS' , 'shortName' : 'Apple Inc.' , 'longName' : 'Apple Inc.' , 'messageBoardId' : 'finmb_24937' , 'exchangeTimezoneName' : 'America/New_York' , 'exchangeTimezoneShortName' : 'EDT' , 'gmtOffSetMilliseconds' : - 14400000 , 'market' : 'us_market' , 'esgPopulated' : False , 'displayName' : 'Apple' , 'symbol' : 'AAPL' }, { 'language' : 'en-US' , 'region' : 'US' , 'quoteType' : 'EQUITY' , 'quoteSourceName' : 'Nasdaq Real Time Price' , 'triggerable' : True , 'currency' : 'USD' , 'tradeable' : False , 'firstTradeDateMilliseconds' : 863703000000 , 'priceHint' : 2 , 'postMarketChangePercent' : - 0.2673244 , 'postMarketTime' : 1596232724 , 'postMarketPrice' : 3156.22 , 'postMarketChange' : - 8.459961 , 'regularMarketChange' : 112.80005 , 'regularMarketChangePercent' : 3.696084 , 'regularMarketTime' : 1596225602 , 'regularMarketPrice' : 3164.68 , 'regularMarketDayHigh' : 3244.5 , 'regularMarketDayRange' : '3151.02 - 3244.5' , 'regularMarketDayLow' : 3151.02 , 'regularMarketVolume' : 7862360 , 'regularMarketPreviousClose' : 3051.88 , 'bid' : 3160.52 , 'ask' : 3160.0 , 'bidSize' : 8 , 'askSize' : 14 , 'fullExchangeName' : 'NasdaqGS' , 'financialCurrency' : 'USD' , 'regularMarketOpen' : 3244.0 , 'averageDailyVolume3Month' : 4675034 , 'averageDailyVolume10Day' : 4733650 , 'fiftyTwoWeekLowChange' : 1538.6499 , 'fiftyTwoWeekLowChangePercent' : 0.9462617 , 'fiftyTwoWeekRange' : '1626.03 - 3344.29' , 'fiftyTwoWeekHighChange' : - 179.6101 , 'fiftyTwoWeekHighChangePercent' : - 0.053706497 , 'fiftyTwoWeekLow' : 1626.03 , 'fiftyTwoWeekHigh' : 3344.29 , 'earningsTimestamp' : 1596124800 , 'earningsTimestampStart' : 1603382400 , 'earningsTimestampEnd' : 1603728000 , 'trailingPE' : 151.15971 , 'epsTrailingTwelveMonths' : 20.936 , 'epsForward' : 37.79 , 'sharesOutstanding' : 498776000 , 'bookValue' : 130.806 , 'fiftyDayAverage' : 2896.579 , 'fiftyDayAverageChange' : 268.10083 , 'fiftyDayAverageChangePercent' : 0.09255774 , 'twoHundredDayAverage' : 2323.4736 , 'twoHundredDayAverageChange' : 841.2063 , 'twoHundredDayAverageChangePercent' : 0.36204684 , 'marketCap' : 1578466410496 , 'forwardPE' : 83.74384 , 'priceToBook' : 24.193691 , 'sourceInterval' : 15 , 'exchangeDataDelayedBy' : 0 , 'marketState' : 'POST' , 'exchange' : 'NMS' , 'shortName' : 'Amazon.com, Inc.' , 'longName' : 'Amazon.com, Inc.' , 'messageBoardId' : 'finmb_18749' , 'exchangeTimezoneName' : 'America/New_York' , 'exchangeTimezoneShortName' : 'EDT' , 'gmtOffSetMilliseconds' : - 14400000 , 'market' : 'us_market' , 'esgPopulated' : False , 'displayName' : 'Amazon.com' , 'symbol' : 'AMZN' }, { 'language' : 'en-US' , 'region' : 'US' , 'quoteType' : 'EQUITY' , 'quoteSourceName' : 'Nasdaq Real Time Price' , 'triggerable' : True , 'currency' : 'USD' , 'tradeable' : False , 'firstTradeDateMilliseconds' : 1022160600000 , 'priceHint' : 2 , 'postMarketChangePercent' : - 0.5584215 , 'postMarketTime' : 1596232099 , 'postMarketPrice' : 486.15 , 'postMarketChange' : - 2.730011 , 'regularMarketChange' : 3.080017 , 'regularMarketChangePercent' : 0.6340093 , 'regularMarketTime' : 1596225602 , 'regularMarketPrice' : 488.88 , 'regularMarketDayHigh' : 494.795 , 'regularMarketDayRange' : '484.5 - 494.795' , 'regularMarketDayLow' : 484.5 , 'regularMarketVolume' : 5797772 , 'regularMarketPreviousClose' : 485.8 , 'bid' : 487.3 , 'ask' : 488.56 , 'bidSize' : 9 , 'askSize' : 40 , 'fullExchangeName' : 'NasdaqGS' , 'financialCurrency' : 'USD' , 'regularMarketOpen' : 488.29 , 'averageDailyVolume3Month' : 7602690 , 'averageDailyVolume10Day' : 7325312 , 'fiftyTwoWeekLowChange' : 236.6 , 'fiftyTwoWeekLowChangePercent' : 0.93784684 , 'fiftyTwoWeekRange' : '252.28 - 575.37' , 'fiftyTwoWeekHighChange' : - 86.48999 , 'fiftyTwoWeekHighChangePercent' : - 0.15032065 , 'fiftyTwoWeekLow' : 252.28 , 'fiftyTwoWeekHigh' : 575.37 , 'earningsTimestamp' : 1594900801 , 'earningsTimestampStart' : 1602676800 , 'earningsTimestampEnd' : 1603123200 , 'trailingPE' : 82.55319 , 'epsTrailingTwelveMonths' : 5.922 , 'epsForward' : 8.78 , 'sharesOutstanding' : 441015008 , 'bookValue' : 21.166 , 'fiftyDayAverage' : 478.79858 , 'fiftyDayAverageChange' : 10.081421 , 'fiftyDayAverageChangePercent' : 0.021055661 , 'twoHundredDayAverage' : 409.49237 , 'twoHundredDayAverageChange' : 79.387634 , 'twoHundredDayAverageChangePercent' : 0.19386841 , 'marketCap' : 215603412992 , 'forwardPE' : 55.681095 , 'priceToBook' : 23.09742 , 'sourceInterval' : 15 , 'exchangeDataDelayedBy' : 0 , 'marketState' : 'POST' , 'exchange' : 'NMS' , 'shortName' : 'Netflix, Inc.' , 'longName' : 'Netflix, Inc.' , 'messageBoardId' : 'finmb_32012' , 'exchangeTimezoneName' : 'America/New_York' , 'exchangeTimezoneShortName' : 'EDT' , 'gmtOffSetMilliseconds' : - 14400000 , 'market' : 'us_market' , 'esgPopulated' : False , 'displayName' : 'Netflix' , 'symbol' : 'NFLX' }, { 'language' : 'en-US' , 'region' : 'US' , 'quoteType' : 'EQUITY' , 'quoteSourceName' : 'Delayed Quote' , 'triggerable' : True , 'currency' : 'USD' , 'tradeable' : False , 'firstTradeDateMilliseconds' : 1092922200000 , 'priceHint' : 2 , 'postMarketChangePercent' : 0.0026999423 , 'postMarketTime' : 1596231815 , 'postMarketPrice' : 1483.0 , 'postMarketChange' : 0.040039062 , 'regularMarketChange' : - 48.48999 , 'regularMarketChangePercent' : - 3.16628 , 'regularMarketTime' : 1596225602 , 'regularMarketPrice' : 1482.96 , 'regularMarketDayHigh' : 1508.95 , 'regularMarketDayRange' : '1454.04 - 1508.95' , 'regularMarketDayLow' : 1454.04 , 'regularMarketVolume' : 3368287 , 'regularMarketPreviousClose' : 1531.45 , 'bid' : 1483.0 , 'ask' : 1484.0 , 'bidSize' : 12 , 'askSize' : 8 , 'fullExchangeName' : 'NasdaqGS' , 'financialCurrency' : 'USD' , 'regularMarketOpen' : 1505.01 , 'averageDailyVolume3Month' : 1643406 , 'averageDailyVolume10Day' : 1380212 , 'fiftyTwoWeekLowChange' : 469.42395 , 'fiftyTwoWeekLowChangePercent' : 0.46315467 , 'fiftyTwoWeekRange' : '1013.536 - 1586.99' , 'fiftyTwoWeekHighChange' : - 104.03003 , 'fiftyTwoWeekHighChangePercent' : - 0.06555179 , 'fiftyTwoWeekLow' : 1013.536 , 'fiftyTwoWeekHigh' : 1586.99 , 'trailingPE' : 29.915276 , 'epsTrailingTwelveMonths' : 49.572 , 'epsForward' : 55.06 , 'sharesOutstanding' : 336161984 , 'bookValue' : 297.759 , 'fiftyDayAverage' : 1479.2025 , 'fiftyDayAverageChange' : 3.7574463 , 'fiftyDayAverageChangePercent' : 0.0025401837 , 'twoHundredDayAverage' : 1375.5465 , 'twoHundredDayAverageChange' : 107.41345 , 'twoHundredDayAverageChangePercent' : 0.07808784 , 'marketCap' : 1014620422144 , 'forwardPE' : 26.933525 , 'priceToBook' : 4.9804034 , 'sourceInterval' : 15 , 'exchangeDataDelayedBy' : 0 , 'marketState' : 'POST' , 'exchange' : 'NMS' , 'shortName' : 'Alphabet Inc.' , 'longName' : 'Alphabet Inc.' , 'messageBoardId' : 'finmb_29096' , 'exchangeTimezoneName' : 'America/New_York' , 'exchangeTimezoneShortName' : 'EDT' , 'gmtOffSetMilliseconds' : - 14400000 , 'market' : 'us_market' , 'esgPopulated' : False , 'displayName' : 'Alphabet' , 'symbol' : 'GOOG' }]","title":"quotes"},{"location":"guide/ticker/miscellaenous/#recommendations","text":"Details Description : Get real-time quote information for given symbol(s) Return : dict Example tickers = Ticker ( 'aapl gs hasgx ^GSPC ezu' ) tickers . recommendations Data { 'aapl' : { 'symbol' : 'AAPL' , 'recommendedSymbols' : [{ 'symbol' : 'GOOG' , 'score' : 0.279041 }, { 'symbol' : 'AMZN' , 'score' : 0.278376 }, { 'symbol' : 'FB' , 'score' : 0.274481 }, { 'symbol' : 'TSLA' , 'score' : 0.225957 }, { 'symbol' : 'NFLX' , 'score' : 0.207756 }] }, 'gs' : { 'symbol' : 'GS' , 'recommendedSymbols' : [{ 'symbol' : 'MS' , 'score' : 0.195796 }, { 'symbol' : 'JPM' , 'score' : 0.160104 }, { 'symbol' : 'WFC' , 'score' : 0.139129 }, { 'symbol' : 'C' , 'score' : 0.137378 }, { 'symbol' : 'BAC' , 'score' : 0.125276 }] }, 'hasgx' : { 'symbol' : 'HASGX' , 'recommendedSymbols' : [{ 'symbol' : 'HAVLX' , 'score' : 0.020499 }, { 'symbol' : 'HAMGX' , 'score' : 0.016157 }, { 'symbol' : 'HASCX' , 'score' : 0.014594 }, { 'symbol' : 'HAIGX' , 'score' : 0.012841 }, { 'symbol' : 'HAMVX' , 'score' : 0.012294 }] }, '^GSPC' : { 'symbol' : '^GSPC' , 'recommendedSymbols' : [{ 'symbol' : '^TYX' , 'score' : 0.187618 }, { 'symbol' : '^IXIC' , 'score' : 0.157791 }, { 'symbol' : '^DJI' , 'score' : 0.134881 }, { 'symbol' : 'GE' , 'score' : 0.10353 }, { 'symbol' : 'MCD' , 'score' : 0.102003 }] }, 'ezu' : { 'symbol' : 'EZU' , 'recommendedSymbols' : [{ 'symbol' : 'EWQ' , 'score' : 0.152994 }, { 'symbol' : 'EWU' , 'score' : 0.146443 }, { 'symbol' : 'EWN' , 'score' : 0.145267 }, { 'symbol' : 'IEV' , 'score' : 0.143627 }, { 'symbol' : 'EWD' , 'score' : 0.141428 }] } }","title":"recommendations"},{"location":"guide/ticker/miscellaenous/#technical_insights","text":"Details Description : Technical indicators for given symbol(s) Return : dict Example aapl = Ticker ( 'aapl' ) aapl . technical_insights Data { 'aapl' : { 'symbol' : 'aapl' , 'instrumentInfo' : { 'technicalEvents' : { 'provider' : 'Trading Central' , 'sector' : 'Technology' , 'shortTermOutlook' : { 'stateDescription' : 'Recent bearish events outweigh bullish events.' , 'direction' : 'Bearish' , 'score' : 3 , 'scoreDescription' : 'Strong Bearish Evidence' , 'sectorDirection' : 'Bullish' , 'sectorScore' : 2 , 'sectorScoreDescription' : 'Bullish Evidence' , 'indexDirection' : 'Bearish' , 'indexScore' : 2 , 'indexScoreDescription' : 'Bearish Evidence' }, 'intermediateTermOutlook' : { 'stateDescription' : 'Bullish events outweigh bearish events.' , 'direction' : 'Bullish' , 'score' : 1 , 'scoreDescription' : 'Weak Bullish Evidence' , 'sectorDirection' : 'Bullish' , 'sectorScore' : 2 , 'sectorScoreDescription' : 'Bullish Evidence' , 'indexDirection' : 'Bullish' , 'indexScore' : 2 , 'indexScoreDescription' : 'Bullish Evidence' }, 'longTermOutlook' : { 'stateDescription' : 'All events are bullish.' , 'direction' : 'Bullish' , 'score' : 2 , 'scoreDescription' : 'Bullish Evidence' , 'sectorDirection' : 'Bullish' , 'sectorScore' : 2 , 'sectorScoreDescription' : 'Bullish Evidence' , 'indexDirection' : 'Bullish' , 'indexScore' : 3 , 'indexScoreDescription' : 'Strong Bullish Evidence' } }, 'keyTechnicals' : { 'provider' : 'Trading Central' , 'support' : 203.77 , 'resistance' : 388.23 , 'stopLoss' : 355.460616 }, 'valuation' : { 'color' : 0.0 , 'description' : 'Overvalued' , 'discount' : '-8%' , 'relativeValue' : 'Premium' , 'provider' : 'Trading Central' } }, 'companySnapshot' : { 'sectorInfo' : 'Technology' , 'company' : { 'innovativeness' : 0.9983 , 'hiring' : 0.9795 , 'sustainability' : 0.8240000000000001 , 'insiderSentiments' : 0.2217 , 'earningsReports' : 0.8340000000000001 , 'dividends' : 0.25 }, 'sector' : { 'innovativeness' : 0.5 , 'hiring' : 0.5 , 'sustainability' : 0.5 , 'insiderSentiments' : 0.5 , 'earningsReports' : 0.5 , 'dividends' : 0.5 } }, 'recommendation' : { 'targetPrice' : 450.0 , 'provider' : 'Argus Research' , 'rating' : 'BUY' }, 'sigDevs' : [{ 'headline' : 'Apple Reports Q3 Earnings Of $2.58 Per Share' , 'date' : '2020-07-30' }] } }","title":"technical_insights"},{"location":"guide/ticker/modules/","text":"The following data accessors, or modules , are grouped together because they're all retrieved from the same endpoint. The modules are given as query parameters to the API endpoint and as such can be combined to create convenient interfaces to retrieve your desired data with a single request. Single Module \u00b6 asset_profile \u00b6 Details Description : Information related to the company's location, operations, and officers. Module : assetProfile Return : dict Example aapl = Ticker ( 'aapl' ) aapl . asset_profile Data { 'aapl' : { 'address1' : 'One Apple Park Way' , 'auditRisk' : 1 , 'boardRisk' : 1 , 'city' : 'Cupertino' , 'companyOfficers' : [{ 'age' : 58 , 'exercisedValue' : 0 , 'fiscalYear' : 2019 , 'maxAge' : 1 , 'name' : 'Mr. Timothy D. Cook' , 'title' : 'CEO & Director' , 'totalPay' : 11555466 , 'unexercisedValue' : 0 , 'yearBorn' : 1961 }, { 'age' : 55 , 'exercisedValue' : 0 , 'fiscalYear' : 2019 , 'maxAge' : 1 , 'name' : 'Mr. Luca Maestri' , 'title' : 'CFO & Sr. VP' , 'totalPay' : 3576221 , 'unexercisedValue' : 0 , 'yearBorn' : 1964 }, { 'age' : 55 , 'exercisedValue' : 0 , 'fiscalYear' : 2019 , 'maxAge' : 1 , 'name' : 'Mr. Jeffrey E. Williams' , 'title' : 'Chief Operating Officer' , 'totalPay' : 3574503 , 'unexercisedValue' : 0 , 'yearBorn' : 1964 }, { 'age' : 55 , 'exercisedValue' : 0 , 'fiscalYear' : 2019 , 'maxAge' : 1 , 'name' : 'Ms. Katherine L. Adams' , 'title' : 'Sr. VP, Gen. Counsel & Sec.' , 'totalPay' : 3598384 , 'unexercisedValue' : 0 , 'yearBorn' : 1964 }, { 'age' : 52 , 'exercisedValue' : 0 , 'fiscalYear' : 2019 , 'maxAge' : 1 , 'name' : \"Ms. Deirdre O'Brien\" , 'title' : 'Sr. VP of People & Retail' , 'totalPay' : 2690253 , 'unexercisedValue' : 0 , 'yearBorn' : 1967 }], 'compensationAsOfEpochDate' : '2019-12-30 17:00:00' , 'compensationRisk' : 3 , 'country' : 'United States' , 'fullTimeEmployees' : 137000 , 'governanceEpochDate' : '2019-12-06 17:00:00' , 'industry' : 'Consumer Electronics' , 'longBusinessSummary' : 'Apple Inc. designs, manufactures, and ' 'markets smartphones, personal computers, ' 'tablets, wearables, and accessories ' 'worldwide. It also sells various related ' 'services. The company offers iPhone, a line ' 'of smartphones; Mac, a line of personal ' 'computers; iPad, a line of multi-purpose ' 'tablets; and wearables, home, and ' 'accessories comprising AirPods, Apple TV, ' 'Apple Watch, Beats products, HomePod, iPod ' 'touch, and other Apple-branded and ' 'third-party accessories. It also provides ' 'digital content stores and streaming ' 'services; AppleCare support services; and ' 'iCloud, a cloud service, which stores music, ' 'photos, contacts, calendars, mail, ' 'documents, and others. In addition, the ' 'company offers various service, such as ' 'Apple Arcade, a game subscription service; ' 'Apple Card, a co-branded credit card; Apple ' 'News+, a subscription news and magazine ' 'service; and Apple Pay, a cashless payment ' 'service, as well as licenses its ' 'intellectual property, and provides other ' 'related services. The company serves ' 'consumers, and small and mid-sized ' 'businesses; and the education, enterprise, ' 'and government markets. It sells and ' 'delivers third-party applications for its ' 'products through the App Store, Mac App ' 'Store, and Watch App Store. The company also ' 'sells its products through its retail and ' 'online stores, and direct sales force; and ' 'third-party cellular network carriers, ' 'wholesalers, retailers, and resellers. Apple ' 'Inc. has a collaboration with Google to ' 'develop COVID-19 tracking system for Android ' 'and iOS devices. Apple Inc. was founded in ' '1977 and is headquartered in Cupertino, ' 'California.' , 'maxAge' : 86400 , 'overallRisk' : 1 , 'phone' : '408-996-1010' , 'sector' : 'Technology' , 'shareHolderRightsRisk' : 1 , 'state' : 'CA' , 'website' : 'http://www.apple.com' , 'zip' : '95014' }} calendar_events \u00b6 Details Description : Earnings and Revenue expectations for upcoming earnings date for given symbol(s) Module : calendarEvents Return : dict Example aapl = Ticker ( 'aapl' ) aapl . calendar_events Data { 'aapl' : { 'dividendDate' : '2020-05-13 18:00:00' , 'earnings' : { 'earningsAverage' : 2.04 , 'earningsDate' : [ 1596067200 ], 'earningsHigh' : 2.47 , 'earningsLow' : 1.67 , 'revenueAverage' : 52247700000 , 'revenueHigh' : 55838000000 , 'revenueLow' : 48955000000 }, 'exDividendDate' : '2020-05-07 18:00:00' , 'maxAge' : 1 } } company_officers \u00b6 Details Description : Retrieves top executives for given symbol(s) and their total pay package. Module : assetProfile Return : pandas.DataFrame Info This is a subset of the data returned from the assetProfile module Example aapl = Ticker ( 'aapl' ) aapl . company_officers Data name age title yearBorn fiscalYear totalPay exercisedValue unexercisedValue 0 Mr. Timothy D. Cook 58 CEO & Director 1961 2019 11555466 0 0 1 Mr. Luca Maestri 55 CFO & Sr. VP 1964 2019 3576221 0 0 2 Mr. Jeffrey E. Williams 55 Chief Operating Officer 1964 2019 3574503 0 0 3 Ms. Katherine L. Adams 55 Sr. VP, Gen. Counsel & Sec. 1964 2019 3598384 0 0 4 Ms. Deirdre O'Brien 52 Sr. VP of People & Retail 1967 2019 2690253 0 0 earning_history \u00b6 Details Description : Data related to historical earnings (actual vs. estimate) for given symbol(s) Module : earningsHistory Return : pandas.DataFrame Example aapl = Ticker ( 'aapl' ) aapl . earning_history Data symbol row maxAge epsActual epsEstimate epsDifference surprisePercent quarter period 0 aapl 0 1 2.18 2.1 0.08 0.038 2019-06-30 -4q 1 aapl 1 1 3.03 2.84 0.19 0.067 2019-09-30 -3q 2 aapl 2 1 4.99 4.55 0.44 0.097 2019-12-31 -2q 3 aapl 3 1 2.55 2.26 0.29 0.128 2020-03-31 -1q earnings \u00b6 Details Description : Historical earnings data for given symbol(s) Module : earnings Return : dict Example aapl = Ticker ( 'aapl' ) aapl . earnings Data { \"aapl\" : { \"maxAge\" : 86400 , \"earningsChart\" : { \"quarterly\" : [{ \"date\" : \"2Q2019\" , \"actual\" : 2.18 , \"estimate\" : 2.1 }, { \"date\" : \"3Q2019\" , \"actual\" : 3.03 , \"estimate\" : 2.84 }, { \"date\" : \"4Q2019\" , \"actual\" : 4.99 , \"estimate\" : 4.55 }, { \"date\" : \"1Q2020\" , \"actual\" : 2.55 , \"estimate\" : 2.26 } ], \"currentQuarterEstimate\" : 2.04 , \"currentQuarterEstimateDate\" : \"2Q\" , \"currentQuarterEstimateYear\" : 2020 , \"earningsDate\" : [ 1596067200 ] }, \"financialsChart\" : { \"yearly\" : [{ \"date\" : 2016 , \"revenue\" : 215639000000 , \"earnings\" : 45687000000 }, { \"date\" : 2017 , \"revenue\" : 229234000000 , \"earnings\" : 48351000000 }, { \"date\" : 2018 , \"revenue\" : 265595000000 , \"earnings\" : 59531000000 }, { \"date\" : 2019 , \"revenue\" : 260174000000 , \"earnings\" : 55256000000 } ], \"quarterly\" : [{ \"date\" : \"2Q2019\" , \"revenue\" : 53809000000 , \"earnings\" : 10044000000 }, { \"date\" : \"3Q2019\" , \"revenue\" : 64040000000 , \"earnings\" : 13686000000 }, { \"date\" : \"4Q2019\" , \"revenue\" : 91819000000 , \"earnings\" : 22236000000 }, { \"date\" : \"1Q2020\" , \"revenue\" : 58313000000 , \"earnings\" : 11249000000 } ] }, \"financialCurrency\" : \"USD\" } } earnings_trend \u00b6 Details Description : Historical trend data for earnings and revenue estimations for given symbol(s) Module : earningsTrend Return : dict Example aapl = Ticker ( 'aapl' ) aapl . earnings_trend Data { \"aapl\" : { \"trend\" : [{ \"maxAge\" : 1 , \"period\" : \"0q\" , \"endDate\" : \"2020-06-30\" , \"growth\" : - 0.064 , \"earningsEstimate\" : { \"avg\" : 2.04 , \"low\" : 1.67 , \"high\" : 2.47 , \"yearAgoEps\" : 2.18 , \"numberOfAnalysts\" : 31 , \"growth\" : - 0.064 }, \"revenueEstimate\" : { \"avg\" : 52247700000 , \"low\" : 48955000000 , \"high\" : 55838000000 , \"numberOfAnalysts\" : 27 , \"yearAgoRevenue\" : 53809000000 , \"growth\" : - 0.029000001 }, \"epsTrend\" : { \"current\" : 2.04 , \"7daysAgo\" : 2.02 , \"30daysAgo\" : 2 , \"60daysAgo\" : 2 , \"90daysAgo\" : 2.07 }, \"epsRevisions\" : { \"upLast7days\" : 4 , \"upLast30days\" : 10 , \"downLast30days\" : 0 , \"downLast90days\" : {} } }, { \"maxAge\" : 1 , \"period\" : \"+1q\" , \"endDate\" : \"2020-09-30\" , \"growth\" : - 0.083000004 , \"earningsEstimate\" : { \"avg\" : 2.78 , \"low\" : 2.09 , \"high\" : 3.64 , \"yearAgoEps\" : 3.03 , \"numberOfAnalysts\" : 30 , \"growth\" : - 0.083000004 }, \"revenueEstimate\" : { \"avg\" : 61536000000 , \"low\" : 50471000000 , \"high\" : 73554000000 , \"numberOfAnalysts\" : 28 , \"yearAgoRevenue\" : 64040000000 , \"growth\" : - 0.039 }, \"epsTrend\" : { \"current\" : 2.78 , \"7daysAgo\" : 2.81 , \"30daysAgo\" : 2.83 , \"60daysAgo\" : 2.8 , \"90daysAgo\" : 2.91 }, \"epsRevisions\" : { \"upLast7days\" : 3 , \"upLast30days\" : 5 , \"downLast30days\" : 1 , \"downLast90days\" : {} } }, { \"maxAge\" : 1 , \"period\" : \"0y\" , \"endDate\" : \"2020-09-30\" , \"growth\" : 0.045 , \"earningsEstimate\" : { \"avg\" : 12.43 , \"low\" : 11.89 , \"high\" : 13.69 , \"yearAgoEps\" : 11.89 , \"numberOfAnalysts\" : 37 , \"growth\" : 0.045 }, \"revenueEstimate\" : { \"avg\" : 264098000000 , \"low\" : 254618000000 , \"high\" : 279524000000 , \"numberOfAnalysts\" : 35 , \"yearAgoRevenue\" : 260174000000 , \"growth\" : 0.015 }, \"epsTrend\" : { \"current\" : 12.43 , \"7daysAgo\" : 12.42 , \"30daysAgo\" : 12.4 , \"60daysAgo\" : 12.32 , \"90daysAgo\" : 12.23 }, \"epsRevisions\" : { \"upLast7days\" : 3 , \"upLast30days\" : 9 , \"downLast30days\" : 1 , \"downLast90days\" : {} } }, { \"maxAge\" : 1 , \"period\" : \"+1y\" , \"endDate\" : \"2021-09-30\" , \"growth\" : 0.204 , \"earningsEstimate\" : { \"avg\" : 14.97 , \"low\" : 12.59 , \"high\" : 16.95 , \"yearAgoEps\" : 12.43 , \"numberOfAnalysts\" : 37 , \"growth\" : 0.204 }, \"revenueEstimate\" : { \"avg\" : 297911000000 , \"low\" : 271687000000 , \"high\" : 323720000000 , \"numberOfAnalysts\" : 35 , \"yearAgoRevenue\" : 264098000000 , \"growth\" : 0.128 }, \"epsTrend\" : { \"current\" : 14.97 , \"7daysAgo\" : 14.94 , \"30daysAgo\" : 14.85 , \"60daysAgo\" : 14.73 , \"90daysAgo\" : 14.79 }, \"epsRevisions\" : { \"upLast7days\" : 3 , \"upLast30days\" : 11 , \"downLast30days\" : 1 , \"downLast90days\" : {} } }, { \"maxAge\" : 1 , \"period\" : \"+5y\" , \"endDate\" : null , \"growth\" : 0.1099 , \"earningsEstimate\" : { \"avg\" : {}, \"low\" : {}, \"high\" : {}, \"yearAgoEps\" : {}, \"numberOfAnalysts\" : {}, \"growth\" : {} }, \"revenueEstimate\" : { \"avg\" : {}, \"low\" : {}, \"high\" : {}, \"numberOfAnalysts\" : {}, \"yearAgoRevenue\" : {}, \"growth\" : {} }, \"epsTrend\" : { \"current\" : {}, \"7daysAgo\" : {}, \"30daysAgo\" : {}, \"60daysAgo\" : {}, \"90daysAgo\" : {} }, \"epsRevisions\" : { \"upLast7days\" : {}, \"upLast30days\" : {}, \"downLast30days\" : {}, \"downLast90days\" : {} } }, { \"maxAge\" : 1 , \"period\" : \"-5y\" , \"endDate\" : null , \"growth\" : 0.08415 , \"earningsEstimate\" : { \"avg\" : {}, \"low\" : {}, \"high\" : {}, \"yearAgoEps\" : {}, \"numberOfAnalysts\" : {}, \"growth\" : {} }, \"revenueEstimate\" : { \"avg\" : {}, \"low\" : {}, \"high\" : {}, \"numberOfAnalysts\" : {}, \"yearAgoRevenue\" : {}, \"growth\" : {} }, \"epsTrend\" : { \"current\" : {}, \"7daysAgo\" : {}, \"30daysAgo\" : {}, \"60daysAgo\" : {}, \"90daysAgo\" : {} }, \"epsRevisions\" : { \"upLast7days\" : {}, \"upLast30days\" : {}, \"downLast30days\" : {}, \"downLast90days\" : {} } } ], \"maxAge\" : 1 } } esg_scores \u00b6 Details Description : Data related to a given symbol(s) environmental, social, and governance metrics Module : esgScores Return : dict Example aapl = Ticker ( 'aapl' ) aapl . esg_scores Data { \"aapl\" : { \"maxAge\" : 86400 , \"totalEsg\" : 23.62 , \"environmentScore\" : 0.49 , \"socialScore\" : 12.98 , \"governanceScore\" : 10.15 , \"ratingYear\" : 2020 , \"ratingMonth\" : 7 , \"highestControversy\" : 3 , \"esgPerformance\" : \"AVG_PERF\" , \"peerCount\" : 57 , \"peerGroup\" : \"Technology Hardware\" , \"relatedControversy\" : [ \"Social Supply Chain Incidents\" , \"Customer Incidents\" , \"Business Ethics Incidents\" ], \"peerEsgScorePerformance\" : { \"min\" : 8.59 , \"avg\" : 17.345438596491228 , \"max\" : 26.24 }, \"peerGovernancePerformance\" : { \"min\" : 3.89 , \"avg\" : 7.5931578947368426 , \"max\" : 13.36 }, \"peerSocialPerformance\" : { \"min\" : 2.69 , \"avg\" : 6.5699999999999985 , \"max\" : 12.98 }, \"peerEnvironmentPerformance\" : { \"min\" : 0.1 , \"avg\" : 3.1815789473684215 , \"max\" : 10.02 }, \"peerHighestControversyPerformance\" : { \"min\" : 0 , \"avg\" : 1.543859649122807 , \"max\" : 4 }, \"percentile\" : 33.02 , \"environmentPercentile\" : 0 , \"socialPercentile\" : 0 , \"governancePercentile\" : 0 , \"adult\" : false , \"alcoholic\" : false , \"animalTesting\" : false , \"catholic\" : false , \"controversialWeapons\" : false , \"smallArms\" : false , \"furLeather\" : false , \"gambling\" : false , \"gmo\" : false , \"militaryContract\" : false , \"nuclear\" : false , \"pesticides\" : false , \"palmOil\" : false , \"coal\" : false , \"tobacco\" : false } } financial_data \u00b6 Details Description : Financial KPIs for given symbol(s) Module : financialData Return : dict Example aapl = Ticker ( 'aapl' ) aapl . financial_data Data { \"aapl\" : { \"maxAge\" : 86400 , \"currentPrice\" : 380.16 , \"targetHighPrice\" : 450 , \"targetLowPrice\" : 195.43 , \"targetMeanPrice\" : 371.96 , \"targetMedianPrice\" : 400 , \"recommendationMean\" : 2.1 , \"recommendationKey\" : \"buy\" , \"numberOfAnalystOpinions\" : 38 , \"totalCash\" : 94051000320 , \"totalCashPerShare\" : 21.699 , \"ebitda\" : 77305004032 , \"totalDebt\" : 118760996864 , \"quickRatio\" : 1.298 , \"currentRatio\" : 1.496 , \"totalRevenue\" : 267980996608 , \"debtToEquity\" : 151.433 , \"revenuePerShare\" : 60.097 , \"returnOnAssets\" : 0.12377 , \"returnOnEquity\" : 0.62094 , \"grossProfits\" : 98392000000 , \"freeCashflow\" : 45040123904 , \"operatingCashflow\" : 75373002752 , \"earningsGrowth\" : 0.037 , \"revenueGrowth\" : 0.005 , \"grossMargins\" : 0.3811 , \"ebitdaMargins\" : 0.28847 , \"operatingMargins\" : 0.24475999 , \"profitMargins\" : 0.21350001 , \"financialCurrency\" : \"USD\" } } fund_bond_holdings \u00b6 Details Description : Retrieves aggregated maturity and duration information for a given symbol(s) Module : topHoldings Return : pandas.DataFrame Info This is a subset of the data returned from the topHoldings module Warning This endpoint will only return data for specific securities (funds and etfs) Example fund = Ticker ( 'vbmfx' ) fund . fund_bond_holdings Data { \"vbmfx\" : { \"maturity\" : 8.1 , \"duration\" : 6.21 , \"maturityCat\" : 7.48 , \"durationCat\" : 5.34 } } fund_bond_ratings \u00b6 Details Description : Retrieves aggregated maturity and duration information for a given symbol(s) Module : topHoldings Return : pandas.DataFrame Info This is a subset of the data returned from the topHoldings module Warning This endpoint will only return data for specific securities (funds and etfs) Example funds = Ticker ( 'vbmfx vicbx vstbx vwehx' ) funds . fund_bond_holdings Data vbmfx vicbx vstbx vwehx bb 0 0 0 0.4992 aa 0.0343 0.055 0.1114 -0.0002 aaa 0.6755 0.0134 0.0146 0.0372 a 0.1137 0.3697 0.4214 0 other 0 0 0 0.0346 b 0 0 0 0.3291 bbb 0.1765 0.5619 0.4526 0.0448 below_b 0 0 0 0.0553 us_government 0 0 0 0 fund_equity_holdings \u00b6 Details Description : Retrieves aggregated priceTo____ data for a given symbol(s) Module : topHoldings Return : dict Info This is a subset of the data returned from the topHoldings module Warning This endpoint will only return data for specific securities (funds and etfs) Example fund = Ticker ( 'hasgx' ) fund . fund_equity_holdings Data { \"hasgx\" : { \"priceToEarnings\" : 25.46 , \"priceToBook\" : 3.67 , \"priceToSales\" : 1.82 , \"priceToCashflow\" : 15.61 , \"medianMarketCap\" : 4411.09 , \"threeYearEarningsGrowth\" : 19.57 , \"priceToEarningsCat\" : 29.37 , \"priceToBookCat\" : 4.16 , \"priceToSalesCat\" : 2.65 , \"priceToCashflowCat\" : 19.68 , \"medianMarketCapCat\" : 4485.81 , \"threeYearEarningsGrowthCat\" : 20.39 } } fund_holding_info \u00b6 Details Description : Contains information for a funds top holdings, bond ratings, bond holdings, equity holdings, sector weightings, and category breakdown Module : topHoldings Return : dict Info This is a subset of the data returned from the topHoldings module Warning This endpoint will only return data for specific securities (funds and etfs) Example fund = Ticker ( 'hasgx' ) fund . fund_holding_info Data { \"hasgx\" : { \"maxAge\" : 1 , \"cashPosition\" : 0.0301 , \"stockPosition\" : 0.96989995 , \"bondPosition\" : 0 , \"otherPosition\" : 0 , \"preferredPosition\" : 0 , \"convertiblePosition\" : 0 , \"holdings\" : [{ \"symbol\" : \"ICLR\" , \"holdingName\" : \"Icon PLC\" , \"holdingPercent\" : 0.028199999 }, { \"symbol\" : \"BIO\" , \"holdingName\" : \"Bio-Rad Laboratories Inc\" , \"holdingPercent\" : 0.0276 }, { \"symbol\" : \"BLD\" , \"holdingName\" : \"TopBuild Corp\" , \"holdingPercent\" : 0.0238 }, { \"symbol\" : \"ASND\" , \"holdingName\" : \"Ascendis Pharma A/S ADR\" , \"holdingPercent\" : 0.0228 }, { \"symbol\" : \"TREX\" , \"holdingName\" : \"Trex Co Inc\" , \"holdingPercent\" : 0.0219 }, { \"symbol\" : \"TKR\" , \"holdingName\" : \"The Timken Co\" , \"holdingPercent\" : 0.0215 }, { \"symbol\" : \"MIME\" , \"holdingName\" : \"Mimecast Ltd\" , \"holdingPercent\" : 0.020299999 }, { \"symbol\" : \"TDY\" , \"holdingName\" : \"Teledyne Technologies Inc\" , \"holdingPercent\" : 0.0198 }, { \"symbol\" : \"ERI\" , \"holdingName\" : \"Eldorado Resorts Inc\" , \"holdingPercent\" : 0.0196 }, { \"symbol\" : \"\" , \"holdingName\" : \"The Medicines Co\" , \"holdingPercent\" : 0.0194 } ], \"equityHoldings\" : { \"priceToEarnings\" : 25.46 , \"priceToBook\" : 3.67 , \"priceToSales\" : 1.82 , \"priceToCashflow\" : 15.61 , \"medianMarketCap\" : 4411.09 , \"threeYearEarningsGrowth\" : 19.57 , \"priceToEarningsCat\" : 29.37 , \"priceToBookCat\" : 4.16 , \"priceToSalesCat\" : 2.65 , \"priceToCashflowCat\" : 19.68 , \"medianMarketCapCat\" : 4485.81 , \"threeYearEarningsGrowthCat\" : 20.39 }, \"bondHoldings\" : {}, \"bondRatings\" : [{ \"bb\" : 0 }, { \"aa\" : 0 }, { \"aaa\" : 0 }, { \"a\" : 0 }, { \"other\" : 0 }, { \"b\" : 0 }, { \"bbb\" : 0 }, { \"below_b\" : 0 }, { \"us_government\" : 0 } ], \"sectorWeightings\" : [{ \"realestate\" : 0.0299 }, { \"consumer_cyclical\" : 0.105299994 }, { \"basic_materials\" : 0 }, { \"consumer_defensive\" : 0.0073 }, { \"technology\" : 0.24309999 }, { \"communication_services\" : 0.0312 }, { \"financial_services\" : 0.0889 }, { \"utilities\" : 0 }, { \"industrials\" : 0.1701 }, { \"energy\" : 0.031 }, { \"healthcare\" : 0.2933 } ] } } fund_ownership \u00b6 Details Description : Top 10 owners of a given symbol(s) Module : fundOwnership Return : pandas.DataFrame Example aapl = Ticker ( 'aapl' ) aapl . fund_ownership Data symbol row maxAge reportDate organization pctHeld position value 0 aapl 0 1 2020-03-31 Vanguard Total Stock Market Index Fund 0.0271 117298701 29827886677 1 aapl 1 1 2020-03-31 Vanguard 500 Index Fund 0.0198 85980468 21863973207 2 aapl 2 1 2020-05-31 SPDR S&P 500 ETF Trust 0.0103 44553380 14165301637 3 aapl 3 1 2020-05-31 Invesco ETF Tr-Invesco QQQ Tr, Series 1 ETF 0.0089 38712448 12308235717 4 aapl 4 1 2020-03-31 Vanguard Institutional Index Fund-Institutional Index Fund 0.0085 36959990 9398555857 5 aapl 5 1 2020-05-31 Fidelity 500 Index Fund 0.0085 36919886 11738308554 6 aapl 6 1 2020-04-30 iShares Core S&P 500 ETF 0.0073 31473783 9246997445 7 aapl 7 1 2020-03-31 Vanguard Growth Index Fund 0.007 30336895 7714369029 8 aapl 8 1 2020-05-31 Select Sector SPDR Fund-Technology 0.0043 18642268 5927122687 9 aapl 9 1 2020-02-29 Vanguard Information Technology Index Fund 0.0043 18504465 5058380552 fund_performance \u00b6 Details Description : Historical return data for a given symbol(s) and symbol(s) specific category Module : fundPerformance Return : dict Warning This endpoint will only return data for specific securities (funds and etfs) Example fund = Ticker ( 'hasgx' ) fund . fund_performance Data { \"hasgx\" : { \"maxAge\" : 1 , \"performanceOverview\" : { \"asOfDate\" : \"2019-02-04 00:00:00\" , \"morningStarReturnRating\" : 3 , \"ytdReturnPct\" : 0.1441 , \"fiveYrAvgReturnPct\" : 0.0855 , \"numYearsUp\" : 14 , \"numYearsDown\" : 5 , \"bestOneYrTotalReturn\" : 0.44779998 , \"worstOneYrTotalReturn\" : - 0.4042 , \"bestThreeYrTotalReturn\" : 0.44779998 , \"worstThreeYrTotalReturn\" : - 0.0912 }, \"performanceOverviewCat\" : { \"ytdReturnPct\" : - 0.001 , \"fiveYrAvgReturnPct\" : 0.0828 }, \"loadAdjustedReturns\" : { \"oneYear\" : 0.12060001 , \"threeYear\" : 0.1249 , \"fiveYear\" : 0.0877 , \"tenYear\" : 0.1383 }, \"trailingReturns\" : { \"asOfDate\" : \"2020-06-30 00:00:00\" , \"ytd\" : 0.0064999997 , \"oneMonth\" : 0.0294 , \"threeMonth\" : 0.3189 , \"oneYear\" : 0.12060001 , \"threeYear\" : 0.1249 , \"fiveYear\" : 0.0877 , \"tenYear\" : 0.1383 , \"lastBullMkt\" : 0.2784 , \"lastBearMkt\" : - 0.2858 }, \"trailingReturnsNav\" : { \"ytd\" : 0 , \"oneMonth\" : 0 , \"threeMonth\" : 0 , \"oneYear\" : 0 , \"threeYear\" : 0 , \"fiveYear\" : 0 , \"tenYear\" : 0 }, \"trailingReturnsCat\" : { \"ytd\" : - 0.001 , \"oneMonth\" : 0.038 , \"threeMonth\" : 0.32189998 , \"oneYear\" : 0.0446 , \"threeYear\" : 0.1008 , \"fiveYear\" : 0.0828 , \"tenYear\" : 0.1294 , \"lastBullMkt\" : 0.2792 , \"lastBearMkt\" : - 0.24200001 }, \"annualTotalReturns\" : { \"returns\" : [{ \"year\" : \"2020\" }, { \"year\" : \"2019\" , \"annualValue\" : 0.4233321 }, { \"year\" : \"2018\" , \"annualValue\" : - 0.107390605 }, { \"year\" : \"2017\" , \"annualValue\" : 0.2460054 }, { \"year\" : \"2016\" , \"annualValue\" : 0.062196396 }, { \"year\" : \"2015\" , \"annualValue\" : - 0.013101799 }, { \"year\" : \"2014\" , \"annualValue\" : 0.0828115 }, { \"year\" : \"2013\" , \"annualValue\" : 0.4478411 }, { \"year\" : \"2012\" , \"annualValue\" : 0.1447442 }, { \"year\" : \"2011\" , \"annualValue\" : - 0.0766004 }, { \"year\" : \"2010\" , \"annualValue\" : 0.3168667 }, { \"year\" : \"2009\" , \"annualValue\" : 0.4008322 }, { \"year\" : \"2008\" , \"annualValue\" : - 0.4041542 }, { \"year\" : \"2007\" , \"annualValue\" : 0.1363713 }, { \"year\" : \"2006\" , \"annualValue\" : 0.1087122 }, { \"year\" : \"2005\" , \"annualValue\" : 0.0564466 }, { \"year\" : \"2004\" , \"annualValue\" : 0.1115022 }, { \"year\" : \"2003\" , \"annualValue\" : 0.4439252 }, { \"year\" : \"2002\" , \"annualValue\" : - 0.200747 }, { \"year\" : \"2001\" , \"annualValue\" : 0.0229226 } ], \"returnsCat\" : [{ \"year\" : \"2019\" , \"annualValue\" : 0.27676532 }, { \"year\" : \"2018\" , \"annualValue\" : - 0.0576395 }, { \"year\" : \"2017\" , \"annualValue\" : 0.2150002 }, { \"year\" : \"2016\" , \"annualValue\" : 0.111996695 }, { \"year\" : \"2015\" , \"annualValue\" : - 0.0241295 }, { \"year\" : \"2014\" , \"annualValue\" : 0.024365399 }, { \"year\" : \"2013\" , \"annualValue\" : 0.40909082 }, { \"year\" : \"2012\" , \"annualValue\" : 0.1314999 }, { \"year\" : \"2011\" , \"annualValue\" : - 0.0355412 }, { \"year\" : \"2010\" , \"annualValue\" : 0.2698293 }, { \"year\" : \"2009\" , \"annualValue\" : 0.3545617 }, { \"year\" : \"2008\" , \"annualValue\" : - 0.41551048 }, { \"year\" : \"2007\" , \"annualValue\" : 0.075887196 }, { \"year\" : \"2006\" , \"annualValue\" : 0.1081437 }, { \"year\" : \"2005\" , \"annualValue\" : 0.060230598 }, { \"year\" : \"2004\" , \"annualValue\" : 0.12409429 }, { \"year\" : \"2003\" , \"annualValue\" : 0.45537603 }, { \"year\" : \"2002\" , \"annualValue\" : - 0.2787935 }, { \"year\" : \"2001\" , \"annualValue\" : - 0.0891243 }, { \"year\" : \"2000\" , \"annualValue\" : - 0.0384997 }, { \"year\" : \"1999\" , \"annualValue\" : 0.64770126 }, { \"year\" : \"1998\" , \"annualValue\" : 0.0523461 }, { \"year\" : \"1997\" , \"annualValue\" : 0.1741466 }, { \"year\" : \"1996\" , \"annualValue\" : 0.18674481 }, { \"year\" : \"1995\" , \"annualValue\" : 0.3614976 }, { \"year\" : \"1994\" , \"annualValue\" : - 0.0051973998 }, { \"year\" : \"1993\" , \"annualValue\" : 0.17361571 }, { \"year\" : \"1992\" , \"annualValue\" : 0.1094542 }, { \"year\" : \"1991\" , \"annualValue\" : 0.5725298 }, { \"year\" : \"1990\" , \"annualValue\" : - 0.0984044 }, { \"year\" : \"1989\" , \"annualValue\" : 0.2626742 }, { \"year\" : \"1988\" , \"annualValue\" : 0.18222731 }, { \"year\" : \"1987\" , \"annualValue\" : - 0.0370497 }, { \"year\" : \"1986\" , \"annualValue\" : 0.099111795 }, { \"year\" : \"1985\" , \"annualValue\" : 0.2643012 }, { \"year\" : \"1984\" , \"annualValue\" : - 0.104290105 }, { \"year\" : \"1983\" , \"annualValue\" : 0.2495246 }, { \"year\" : \"1982\" , \"annualValue\" : 0.2308341 }, { \"year\" : \"1981\" , \"annualValue\" : 0.0207251 }, { \"year\" : \"1980\" , \"annualValue\" : 0.3761657 }, { \"year\" : \"1979\" , \"annualValue\" : 0.3690657 }, { \"year\" : \"1978\" , \"annualValue\" : 0.1781299 }, { \"year\" : \"1977\" , \"annualValue\" : 0.1065682 }, { \"year\" : \"1976\" , \"annualValue\" : 0.3378357 }, { \"year\" : \"1975\" , \"annualValue\" : 0.3783118 }, { \"year\" : \"1974\" , \"annualValue\" : - 0.3575943 }, { \"year\" : \"1973\" , \"annualValue\" : - 0.3001683 }, { \"year\" : \"1972\" , \"annualValue\" : 0.1025676 }, { \"year\" : \"1971\" , \"annualValue\" : 0.19541731 }, { \"year\" : \"1970\" , \"annualValue\" : - 0.1831704 }, { \"year\" : \"1969\" , \"annualValue\" : - 0.16133231 }, { \"year\" : \"1968\" , \"annualValue\" : 0.1150183 }, { \"year\" : \"1967\" , \"annualValue\" : 0.5074166 }, { \"year\" : \"1966\" , \"annualValue\" : - 0.0137236 }, { \"year\" : \"1965\" , \"annualValue\" : 0.2515068 }, { \"year\" : \"1964\" , \"annualValue\" : 0.100048 }, { \"year\" : \"1963\" , \"annualValue\" : 0.1902171 }, { \"year\" : \"1962\" , \"annualValue\" : - 0.2464827 }, { \"year\" : \"1961\" , \"annualValue\" : 0.35685748 }, { \"year\" : \"1960\" , \"annualValue\" : 0.0359799 }, { \"year\" : \"1959\" , \"annualValue\" : 0.1342513 }, { \"year\" : \"1958\" , \"annualValue\" : 0.47772512 }, { \"year\" : \"1957\" , \"annualValue\" : - 0.17027621 }, { \"year\" : \"1956\" , \"annualValue\" : 0.0318841 }, { \"year\" : \"1955\" , \"annualValue\" : 0.1480865 }, { \"year\" : \"1954\" , \"annualValue\" : 0.2599581 }, { \"year\" : \"1953\" , \"annualValue\" : - 0.0041754004 }, { \"year\" : \"1952\" , \"annualValue\" : 0.098623894 }, { \"year\" : \"1951\" , \"annualValue\" : 0.0927318 }, { \"year\" : \"1950\" , \"annualValue\" : 0.1735294 }, { \"year\" : \"1949\" , \"annualValue\" : 0.09324761 }, { \"year\" : \"1948\" , \"annualValue\" : - 0.0220126 }, { \"year\" : \"1947\" , \"annualValue\" : - 0.0154799 } ] }, \"pastQuarterlyReturns\" : { \"returns\" : [{ \"year\" : \"2020\" , \"q1\" : - 0.23689881 , \"q2\" : 0.3189087 }, { \"year\" : \"2019\" , \"q1\" : 0.2161895 , \"q2\" : 0.051136397 , \"q3\" : - 0.0162162 , \"q4\" : 0.13173899 }, { \"year\" : \"2018\" , \"q1\" : 0.0388619 , \"q2\" : 0.0394122 , \"q3\" : 0.0745501 , \"q4\" : - 0.23071171 }, { \"year\" : \"2017\" , \"q1\" : 0.0800628 , \"q2\" : 0.0363372 , \"q3\" : 0.0406732 , \"q4\" : 0.0696838 }, { \"year\" : \"2016\" , \"q1\" : - 0.0721992 , \"q2\" : 0.029517 , \"q3\" : 0.0834057 , \"q4\" : 0.026420701 }, { \"year\" : \"2015\" , \"q1\" : 0.0832127 , \"q2\" : 0.012692099 , \"q3\" : - 0.14182061 , \"q4\" : 0.0483423 }, { \"year\" : \"2014\" , \"q1\" : 0.0207636 , \"q2\" : - 0.0013123 , \"q3\" : - 0.022339001 , \"q4\" : 0.0864499 }, { \"year\" : \"2013\" , \"q1\" : 0.1510549 , \"q2\" : 0.043255102 , \"q3\" : 0.0843289 , \"q4\" : 0.1119194 }, { \"year\" : \"2012\" , \"q1\" : 0.114889696 , \"q2\" : - 0.049464103 , \"q3\" : 0.0633131 , \"q4\" : 0.015890501 }, { \"year\" : \"2011\" , \"q1\" : 0.0738151 , \"q2\" : 0.0028944002 , \"q3\" : - 0.2590188 , \"q4\" : 0.1571717 }, { \"year\" : \"2010\" , \"q1\" : 0.0960396 , \"q2\" : - 0.089430906 , \"q3\" : 0.140873 , \"q4\" : 0.1565525 }, { \"year\" : \"2009\" , \"q1\" : - 0.0790569 , \"q2\" : 0.1957831 , \"q3\" : 0.1876574 , \"q4\" : 0.0710498 }, { \"year\" : \"2008\" , \"q1\" : - 0.1254996 , \"q2\" : 0.0585009 , \"q3\" : - 0.1200345 , \"q4\" : - 0.2684955 }, { \"year\" : \"2007\" , \"q1\" : 0.0392465 , \"q2\" : 0.0422961 , \"q3\" : 0.026087001 , \"q4\" : 0.0224132 }, { \"year\" : \"2006\" , \"q1\" : 0.15329629 , \"q2\" : - 0.0716253 , \"q3\" : - 0.0333828 , \"q4\" : 0.071273 }, { \"year\" : \"2005\" , \"q1\" : - 0.0541796 , \"q2\" : 0.0515548 , \"q3\" : 0.0529183 , \"q4\" : 0.0088167 }, { \"year\" : \"2004\" , \"q1\" : 0.0857605 , \"q2\" : - 0.009687 , \"q3\" : - 0.0579383 , \"q4\" : 0.0972977 }, { \"year\" : \"2003\" , \"q1\" : - 0.029205598 , \"q2\" : 0.2154031 , \"q3\" : 0.0910891 , \"q4\" : 0.1215971 }, { \"year\" : \"2002\" , \"q1\" : 0.0289449 , \"q2\" : - 0.0825771 , \"q3\" : - 0.18397631 , \"q4\" : 0.0375758 }, { \"year\" : \"2001\" , \"q1\" : - 0.1203438 , \"q2\" : 0.1921824 , \"q3\" : - 0.1575592 , \"q4\" : 0.15783781 } ] }, \"rankInCategory\" : { \"ytd\" : 43 , \"oneMonth\" : 68 , \"threeMonth\" : 48 , \"oneYear\" : 23 , \"threeYear\" : 36 , \"fiveYear\" : 46 }, \"riskOverviewStatistics\" : { \"riskRating\" : 4 , \"riskStatistics\" : [{ \"year\" : \"5y\" , \"alpha\" : - 3.56 , \"beta\" : 1.27 , \"meanAnnualReturn\" : 0.88 , \"rSquared\" : 85.23 , \"stdDev\" : 20.38 , \"sharpeRatio\" : 0.46 , \"treynorRatio\" : 5.97 }, { \"year\" : \"3y\" , \"alpha\" : 0 , \"beta\" : 1.28 , \"meanAnnualReturn\" : 1.21 , \"rSquared\" : 89.76 , \"stdDev\" : 22.94 , \"sharpeRatio\" : 0.56 , \"treynorRatio\" : 8.42 }, { \"year\" : \"10y\" , \"alpha\" : - 3.2 , \"beta\" : 1.3 , \"meanAnnualReturn\" : 1.24 , \"rSquared\" : 82.18 , \"stdDev\" : 19.24 , \"sharpeRatio\" : 0.74 , \"treynorRatio\" : 10.17 } ] }, \"riskOverviewStatisticsCat\" : { \"riskStatisticsCat\" : [{ \"year\" : \"5y\" , \"alpha\" : - 0.035099998 , \"beta\" : 0.012200001 , \"meanAnnualReturn\" : 0.0084 , \"rSquared\" : 0.78370005 , \"stdDev\" : 0.2039 , \"sharpeRatio\" : 0.0044 , \"treynorRatio\" : 0.059 }, { \"year\" : \"3y\" , \"alpha\" : - 0.0187 , \"beta\" : 0.0124 , \"meanAnnualReturn\" : 0.010199999 , \"rSquared\" : 0.8205 , \"stdDev\" : 0.2327 , \"sharpeRatio\" : 0.0045 , \"treynorRatio\" : 0.0686 }, { \"year\" : \"10y\" , \"alpha\" : - 0.0294 , \"beta\" : 0.0121 , \"meanAnnualReturn\" : 0.0116 , \"rSquared\" : 0.7644 , \"stdDev\" : 0.1864 , \"sharpeRatio\" : 0.0072000003 , \"treynorRatio\" : 0.102299996 } ] } } } fund_profile \u00b6 Details Description : Summary level information for a given symbol(s) Module : fundProfile Return : dict Warning This endpoint will only return data for specific securities (funds and etfs) Example fund = Ticker ( 'hasgx' ) fund . fund_profile Data { \"hasgx\" : { \"maxAge\" : 1 , \"styleBoxUrl\" : \"http://us.i1.yimg.com/us.yimg.com/i/fi/3_0stylelargeeq6.gif\" , \"family\" : \"Harbor\" , \"categoryName\" : \"Small Growth\" , \"legalType\" : null , \"managementInfo\" : { \"managerName\" : \"William A. Muggia\" , \"managerBio\" : \"Will joined Westfield Capital Management in April 1994. In addition to his executive duties, he chairs the Investment Committee, serves as Market Strategist and contributes investment ideas primarily within the Health Care and Energy sectors. \\n\\n In 2001, Will was promoted to President and Chief Investment Officer and now oversees all of Westfield's US equity and hedge fund strategies. In this role, Will and his team have grown the firm from $2 billion to $13 billion in assets under management. \\n\\n Prior to joining Westfield, Will worked in the Technology Investment Banking Group at Alex Brown & Sons, where his responsibilities included mergers and acquisitions, restructuring, and spin-offs. Before that, he was a Vice President at Kidder, Peabody & Company. \\n\\n Will graduated from Middlebury College in 1983 and received a Masters in Business Administration from the Harvard Business School in 1992. \\n\\n Will and his family are very active in community service, focusing their efforts on education for underprivileged youth. He is a member of the Board of Directors of SquashBusters and the Advisory Board of The Base.\" , \"startdate\" : 973036800 }, \"feesExpensesInvestment\" : { \"annualReportExpenseRatio\" : 0.0088 , \"netExpRatio\" : 0.0088 , \"grossExpRatio\" : 0.0088 , \"projectionValues\" : { \"5y\" : 488 , \"3y\" : 281 , \"10y\" : 1084 } }, \"feesExpensesInvestmentCat\" : { \"annualReportExpenseRatio\" : 0.012200001 , \"frontEndSalesLoad\" : 0.0541 , \"deferredSalesLoad\" : 0.013200001 , \"projectionValuesCat\" : { \"5y\" : 815.16 , \"3y\" : 503.94 , \"10y\" : 1700.96 } }, \"initInvestment\" : 50000 , \"initIraInvestment\" : 500 , \"subseqInvestment\" : 0 , \"brokerages\" : [ \"TradeStation Securities\" , \"Northwestern Mutual Inv Srvc, LLC\" , \"Cetera Advisors LLC\" , \"Cetera Advisor Networks LLC\" , \"Pruco Securities, LLC\" , \"Protected Investors of America\" , \"Comerica Bank\" , \"Mid Atlantic Capital Corp\" , \"Morgan Stanley - Brokerage Accounts\" , \"Pershing FundCenter\" , \"Schwab Institutional\" , \"Td Ameritrade, Inc.\" , \"TD Ameritrade Institutional Services\" , \"Scottrade Load\" , \"Shareholders Services Group\" , \"JPMorgan\" , \"Merrill Lynch\" , \"Vanguard\" , \"TD Ameritrade Trust Company\" , \"CommonWealth PPS\" , \"LPL SAM Eligible\" , \"Fidelity Retail FundsNetwork\" , \"Fidelity Institutional FundsNetwork\" , \"Schwab Retail\" , \"DATALynx\" , \"PruChoice Investments\" , \"Ameriprise Brokerage\" , \"Federated TrustConnect\" , \"Cetera Advisors LLC- PAM, PRIME, Premier\" , \"Cetera Advisor Networks LLC- PAM, PRIME, Premier\" , \"Schwab RPS SDE\" , \"Ameriprise SPS Advantage\" , \"SunAmerica Securities Premier / Pinnacle\" , \"ETrade No Load Fee\" , \"SunGard Transaction Network\" , \"Raymond James\" , \"Raymond James WRAP Eligible\" , \"Bear Stearns No-Load Transaction Fee\" , \"Commonwealth Universe\" , \"FTJ FundChoice\" , \"Robert W. Baird & Co.\" , \"TRUSTlynx\" , \"JPMorgan INVEST\" , \"WFA MF Advisory Updated 7/01/2020\" , \"RBC Wealth Management-Network Eligible\" , \"DailyAccess Corporation RTC\" , \"DailyAccess Corporation FRIAG\" , \"WR Hambrecht Co LLC\" , \"Sterne, Agee & Leach, Inc.,\" , \"Schwab RPS All\" , \"ING Financial Ptnrs PAM and PRIME Approv\" , \"Firstrade\" , \"Scottrade TF\" , \"Scottrade NTF\" , \"Standard Retirement Services, Inc.\" , \"TIAA-CREF Brokerage Services\" , \"Thrivent Advisory Eligible\" , \"Matrix Financial Solutions\" , \"Trade PMR Transaction Fee\" , \"Trade PMR NTF\" , \"Morgan Stanley - Ntwk/Rdm Only-Brokerage\" , \"TD Ameritrade Retail\" , \"TD Ameritrade Institutional\" , \"NYLIM 401(k) Complete\" , \"Met Life Resources MFSP Alliance List\" , \"Mid Atlantic Capital Group\" , \"HD Vest - Vest Advisor\" , \"Securities America Advisors\" , \"Bear Stearns\" , \"Securities America Advisors Top Rated\" , \"JP MORGAN NO-LOAD NTF\" , \"JP MORGAN NO-LOAD TRANSACTION FEE\" , \"TD Ameritrade Retail NTF\" , \"TD Ameritrade Institutional NTF\" , \"MSWM Brokerage\" , \"WFA Fdntl Choice/PIM Updated 7/01/2020\" , \"ADP Access Open Fund Architecture\" , \"DailyAccess Corporation Mid-Atlantic\" , \"Waddell & Reed Choice MAP Flex\" , \"ING Financial Partners Inc.\" , \"Vanguard Load\" , \"Jiangsu Akcome Science & Technology Co Ltd\" , \"Vanguard TF\" , \"DailyAccess Corporation Matrix\" , \"DailyAccess Corporation Schwab\" , \"DailyAccess Corporation MATC\" , \"Cetera Financial Specialists LLC- Premier\" , \"LPL SWM\" , \"Schwab All (Retail, Instl, Retirement)\" , \"Schwab Existing Shareholders Only\" , \"Pershing Retirement Plan Network\" , \"HD Vest\" , \"Commonwealth (NTF)\" , \"Commonwealth (PPS/Advisory)\" ] } } fund_sector_weightings \u00b6 Details Description : Retrieves aggregated sector weightings for a given symbol(s) Module : topHoldings Return : pandas.DataFrame Info This is a subset of the data returned from the topHoldings module Warning This endpoint will only return data for specific securities (funds and etfs) Example funds = Ticker ( 'hasgx dodgx cipnx' ) funds . fund_sector_weightings Data sector hasgx dodgx cipnx 0 realestate 0.0299 0 0 1 consumer_cyclical 0.1053 0.0325 0.0377 2 basic_materials 0 0.0083 0.0497 3 consumer_defensive 0.0073 0.0113 0.1815 4 technology 0.2431 0.1928 0.2064 5 communication_services 0.0312 0.1311 0.0188 6 financial_services 0.0889 0.2629 0.1424 7 utilities 0 0 0 8 industrials 0.1701 0.0616 0.1368 9 energy 0.031 0.0656 0 10 healthcare 0.2933 0.2339 0.2267 fund_top_holdings \u00b6 Details Description : Retrieves Top 10 holdings for a given symbol(s) Module : topHoldings Return : pandas.DataFrame Info This is a subset of the data returned from the topHoldings module Warning This endpoint will only return data for specific securities (funds and etfs) Example fund = Ticker ( 'hasgx' ) fund . fund_top_holdings Data symbol holdingName holdingPercent ('hasgx', 0) ICLR Icon PLC 0.0282 ('hasgx', 1) BIO Bio-Rad Laboratories Inc 0.0276 ('hasgx', 2) BLD TopBuild Corp 0.0238 ('hasgx', 3) ASND Ascendis Pharma A/S ADR 0.0228 ('hasgx', 4) TREX Trex Co Inc 0.0219 ('hasgx', 5) TKR The Timken Co 0.0215 ('hasgx', 6) MIME Mimecast Ltd 0.0203 ('hasgx', 7) TDY Teledyne Technologies Inc 0.0198 ('hasgx', 8) ERI Eldorado Resorts Inc 0.0196 ('hasgx', 9) The Medicines Co 0.0194 grading_history \u00b6 Details Description : Data related to upgrades / downgrades by companies for a given symbol(s) Module : upgradeDowngradeHistory Return : pandas.DataFrame Example aapl = Ticker ( 'aapl' ) df = aapl . grading_history df . head () Data symbol row epochGradeDate firm toGrade fromGrade action 0 aapl 0 2020-07-29 08:37:18 Credit Suisse Neutral main 1 aapl 1 2020-07-15 04:22:07 Needham Buy main 2 aapl 2 2020-07-13 06:32:14 Morgan Stanley Overweight main 3 aapl 3 2020-07-13 05:47:09 Wedbush Outperform main 4 aapl 4 2020-07-07 09:04:24 Cascend Buy main index_trend \u00b6 Details Description : Trend data related given symbol(s) index, specificially PE and PEG ratios Module : indexTrend Return : dict Example aapl = Ticker ( 'aapl' ) aapl . index_trend Data { \"aapl\" : { \"maxAge\" : 1 , \"symbol\" : \"SP5\" , \"peRatio\" : 39.5608 , \"pegRatio\" : 5.59807 , \"estimates\" : [{ \"period\" : \"0q\" , \"growth\" : - 0.313 }, { \"period\" : \"+1q\" , \"growth\" : - 0.012999999 }, { \"period\" : \"0y\" , \"growth\" : - 0.199 }, { \"period\" : \"+1y\" , \"growth\" : 0.301 }, { \"period\" : \"+5y\" , \"growth\" : 0.0406009 }, { \"period\" : \"-5y\" } ] } } industry_trend \u00b6 Details Warning Appears to no longer be in use Example aapl = Ticker ( 'aapl' ) aapl . industry_trend insider_holders \u00b6 Details Description : Data related to stock holdings of a given symbol(s) insiders Module : insiderHolders Return : pandas.DataFrame Example aapl = Ticker ( 'aapl' ) aapl . insider_holders Data symbol row maxAge name relation url transactionDescription latestTransDate positionDirect positionDirectDate positionIndirect positionIndirectDate 0 aapl 0 1 BELL JAMES A Director Conversion of Exercise of derivative security 2020-01-31 7716 2020-01-31 nan nan 1 aapl 1 1 GORE ALBERT A JR Director Conversion of Exercise of derivative security 2020-01-31 115014 2020-01-31 nan nan 2 aapl 2 1 JUNG ANDREA Director Conversion of Exercise of derivative security 2020-04-28 nan nan 33548 1.58803e+09 3 aapl 3 1 KONDO CHRISTOPHER Officer Sale 2020-05-08 7370 2020-05-08 nan nan 4 aapl 4 1 LEVINSON ARTHUR D Director Sale 2020-02-03 1.14728e+06 2020-02-03 nan nan 5 aapl 5 1 MAESTRI LUCA Chief Financial Officer Sale 2020-04-07 27568 2020-04-07 nan nan 6 aapl 6 1 O'BRIEN DEIRDRE Officer Sale 2020-04-16 33972 2020-04-16 nan nan 7 aapl 7 1 SUGAR RONALD D Director Conversion of Exercise of derivative security 2020-01-31 24714 2020-01-31 nan nan 8 aapl 8 1 WAGNER SUSAN L Director Conversion of Exercise of derivative security 2020-01-31 14809 2020-01-31 nan nan 9 aapl 9 1 WILLIAMS JEFFREY E Chief Operating Officer Sale 2020-04-02 122315 2020-04-02 nan nan insider_transactions \u00b6 Details Description : Transactions by insiders for a given symbol(s) Module : insiderTransactions Return : pandas.DataFrame Example aapl = Ticker ( 'aapl' ) df = aapl . insider_transactions df . head () Data symbol row maxAge shares value filerUrl transactionText filerName filerRelation moneyText startDate ownership 0 aapl 0 1 4491 1.37254e+06 Sale at price 305.62 per share. KONDO CHRISTOPHER Officer 2020-05-08 D 1 aapl 1 1 9590 469389 Conversion of Exercise of derivative security at price 48.95 per share. JUNG ANDREA Director 2020-04-28 I 2 aapl 2 1 9137 2.60514e+06 Sale at price 283.82 - 286.82 per share. O'BRIEN DEIRDRE Officer 2020-04-16 D 3 aapl 3 1 5916 nan KONDO CHRISTOPHER Officer 2020-04-15 D 4 aapl 4 1 16634 nan O'BRIEN DEIRDRE Officer 2020-04-15 D institution_ownership \u00b6 Details Description : Top 10 owners of a given symbol(s) Module : intitutionOwnership Return : pandas.DataFrame Example aapl = Ticker ( 'aapl' ) aapl . institution_ownership Data symbol row maxAge reportDate organization pctHeld position value 0 aapl 0 1 2020-03-31 Vanguard Group, Inc. (The) 0.0777 336728608 85626717728 1 aapl 1 1 2020-03-31 Blackrock Inc. 0.0634 274684501 69849521759 2 aapl 2 1 2020-03-31 Berkshire Hathaway, Inc 0.0566 245155566 62340608878 3 aapl 3 1 2020-03-31 State Street Corporation 0.0417 180558954 45914336412 4 aapl 4 1 2020-03-31 Advisor Group, Inc. 0.0269 116768396 29693035418 5 aapl 5 1 2020-03-31 FMR, LLC 0.0215 93376233 23744642289 6 aapl 6 1 2020-03-31 Geode Capital Management, LLC 0.0148 64178586 16319972633 7 aapl 7 1 2020-03-31 Price (T.Rowe) Associates Inc 0.013 56203762 14292054638 8 aapl 8 1 2020-03-31 Northern Trust Corporation 0.0124 53859611 13695960481 9 aapl 9 1 2019-12-31 Norges Bank Investment Management 0.0108 46856273 13759344566 key_stats \u00b6 Details Description : KPIs for given symbol(s) (PE, enterprise value, EPS, EBITA, and more) Module : defaultKeyStatistics Return : dict Example aapl = Ticker ( 'aapl' ) aapl . key_stats Data { \"aapl\" : { \"maxAge\" : 1 , \"priceHint\" : 2 , \"enterpriseValue\" : 1672450801664 , \"forwardPE\" : 25.70207 , \"profitMargins\" : 0.21350001 , \"floatShares\" : 4329740605 , \"sharesOutstanding\" : 4334329856 , \"sharesShort\" : 35234606 , \"sharesShortPriorMonth\" : 34828293 , \"sharesShortPreviousMonthDate\" : \"2020-06-15 00:00:00\" , \"dateShortInterest\" : \"2020-07-15 00:00:00\" , \"sharesPercentSharesOut\" : 0.0081 , \"heldPercentInsiders\" : 0.00066 , \"heldPercentInstitutions\" : 0.62115 , \"shortRatio\" : 0.96 , \"shortPercentOfFloat\" : 0.0081 , \"beta\" : 1.182072 , \"category\" : null , \"bookValue\" : 18.137 , \"priceToBook\" : 21.214094 , \"fundFamily\" : null , \"legalType\" : null , \"lastFiscalYearEnd\" : \"2019-09-28 00:00:00\" , \"nextFiscalYearEnd\" : \"2021-09-28 00:00:00\" , \"mostRecentQuarter\" : \"2020-03-28 00:00:00\" , \"earningsQuarterlyGrowth\" : - 0.027 , \"netIncomeToCommon\" : 57215000576 , \"trailingEps\" : 12.728 , \"forwardEps\" : 14.97 , \"pegRatio\" : 2.78 , \"lastSplitFactor\" : \"7:1\" , \"lastSplitDate\" : \"2014-06-09 00:00:00\" , \"enterpriseToRevenue\" : 6.241 , \"enterpriseToEbitda\" : 21.634 , \"52WeekChange\" : 0.8239218 , \"SandP52WeekChange\" : 0.103224516 } } major_holders \u00b6 Details Description : Data showing breakdown of owners of given symbol(s), insiders, institutions, etc. Module : majorHoldersBreakdown Return : dict Example aapl = Ticker ( 'aapl' ) aapl . major_holders Data { \"maxAge\" : 1 , \"insidersPercentHeld\" : 0.00066 , \"institutionsPercentHeld\" : 0.62115 , \"institutionsFloatPercentHeld\" : 0.62156 , \"institutionsCount\" : 4296 } page_views \u00b6 Details Description : Short, Mid, and Long-term trend data regarding a symbol(s) page views Module : pageViews Return : dict Example aapl = Ticker ( 'aapl' ) aapl . page_views Data { 'aapl' : { 'shortTermTrend' : 'UP' , 'midTermTrend' : 'UP' , 'longTermTrend' : 'UP' , 'maxAge' : 1 } } price \u00b6 Details Description : Detailed pricing data for given symbol(s), exchange, quote type, currency, market cap, pre / post market data, etc. Module : price Return : dict Example aapl = Ticker ( 'aapl' ) aapl . price Data { \"aapl\" : { \"maxAge\" : 1 , \"preMarketChangePercent\" : - 0.0090225 , \"preMarketChange\" : - 3.42999 , \"preMarketTime\" : \"2020-07-30 13:29:59\" , \"preMarketPrice\" : 376.73 , \"preMarketSource\" : \"FREE_REALTIME\" , \"postMarketChangePercent\" : 0.05447549 , \"postMarketChange\" : 20.959991 , \"postMarketTime\" : 1596144518 , \"postMarketPrice\" : 405.72 , \"postMarketSource\" : \"DELAYED\" , \"regularMarketChangePercent\" : 0.012100184 , \"regularMarketChange\" : 4.600006 , \"regularMarketTime\" : \"2020-07-30 20:00:01\" , \"priceHint\" : 2 , \"regularMarketPrice\" : 384.76 , \"regularMarketDayHigh\" : 385.19 , \"regularMarketDayLow\" : 375.07 , \"regularMarketVolume\" : 30622619 , \"regularMarketPreviousClose\" : 380.16 , \"regularMarketSource\" : \"FREE_REALTIME\" , \"regularMarketOpen\" : 376.75 , \"exchange\" : \"NMS\" , \"exchangeName\" : \"NasdaqGS\" , \"exchangeDataDelayedBy\" : 0 , \"marketState\" : \"POST\" , \"quoteType\" : \"EQUITY\" , \"symbol\" : \"AAPL\" , \"underlyingSymbol\" : null , \"shortName\" : \"Apple Inc.\" , \"longName\" : \"Apple Inc.\" , \"currency\" : \"USD\" , \"quoteSourceName\" : \"Delayed Quote\" , \"currencySymbol\" : \"$\" , \"fromCurrency\" : null , \"toCurrency\" : null , \"lastMarket\" : null , \"marketCap\" : 1667676766208 } } quote_type \u00b6 Details Description : Stock exchange specific data for given symbol(s) Module : quoteType Return : dict Example aapl = Ticker ( 'aapl' ) aapl . quote_type Data { \"aapl\" : { \"exchange\" : \"NMS\" , \"quoteType\" : \"EQUITY\" , \"symbol\" : \"AAPL\" , \"underlyingSymbol\" : \"AAPL\" , \"shortName\" : \"Apple Inc.\" , \"longName\" : \"Apple Inc.\" , \"firstTradeDateEpochUtc\" : \"1980-12-12 14:30:00\" , \"timeZoneFullName\" : \"America/New_York\" , \"timeZoneShortName\" : \"EDT\" , \"uuid\" : \"8b10e4ae-9eeb-3684-921a-9ab27e4d87aa\" , \"messageBoardId\" : \"finmb_24937\" , \"gmtOffSetMilliseconds\" : - 14400000 , \"maxAge\" : 1 } } recommendation_trend \u00b6 Details Description : Data related to historical recommendations (buy, hold, sell) for a given symbol(s) Module : recommendationTrend Return : pandas.DataFrame Example aapl = Ticker ( 'aapl' ) aapl . recommendation_trend Data period strongBuy buy hold sell strongSell ('aapl', 0) 0m 11 21 6 0 0 ('aapl', 1) -1m 12 17 8 2 0 ('aapl', 2) -2m 12 17 7 3 0 ('aapl', 3) -3m 13 10 18 3 0 sec_filings \u00b6 Details Description : Historical SEC filings for a given symbol(s) Module : secFilings Return : pandas.DataFrame Example Example aapl = Ticker ( 'aapl' ) df = aapl . sec_filings df . head () Data date epochDate type title edgarUrl maxAge ('aapl', 0) 2020-05-11 2020-05-11 14:32:39 8-K Disclosing Other Events, Financial Statements and Exhibits https://yahoo.brand.edgar-online.com/DisplayFiling.aspx?TabIndex=2&dcn=0001193125-20-139112&nav=1&src=Yahoo 1 ('aapl', 1) 2020-05-01 2020-05-01 04:45:45 10-Q Quarterly Report https://yahoo.brand.edgar-online.com/DisplayFiling.aspx?TabIndex=2&dcn=0000320193-20-000052&nav=1&src=Yahoo 1 ('aapl', 2) 2020-04-30 2020-04-30 14:33:15 8-K Disclosing Results of Operations and Financial Condition, Financial Statements and Exhibits https://yahoo.brand.edgar-online.com/DisplayFiling.aspx?TabIndex=2&dcn=0000320193-20-000050&nav=1&src=Yahoo 1 ('aapl', 3) 2020-02-18 2020-02-18 04:35:28 8-K Disclosing Regulation FD Disclosure, Financial Statements and Exhibits https://yahoo.brand.edgar-online.com/DisplayFiling.aspx?TabIndex=2&dcn=0001193125-20-039203&nav=1&src=Yahoo 1 ('aapl', 4) 2020-01-29 2020-01-29 04:07:08 10-Q Quarterly Report https://yahoo.brand.edgar-online.com/DisplayFiling.aspx?TabIndex=2&dcn=0000320193-20-000010&nav=1&src=Yahoo 1 share_purchase_activity \u00b6 Details Description : High-level buy / sell data for given symbol(s) insiders Module : netSharePurchaseActivity Return : dict Example aapl = Ticker ( 'aapl' ) aapl . share_purchase_activity Data { \"aapl\" : { \"maxAge\" : 1 , \"period\" : \"6m\" , \"buyInfoCount\" : 11 , \"buyInfoShares\" : 212070 , \"buyPercentInsiderShares\" : 0.077 , \"sellInfoCount\" : 5 , \"sellInfoShares\" : 97181 , \"sellPercentInsiderShares\" : 0.035 , \"netInfoCount\" : 16 , \"netInfoShares\" : 114889 , \"netPercentInsiderShares\" : 0.042 , \"totalInsiderShares\" : 2860661 } } summary_detail \u00b6 Details Description : Contains information available via the Summary tab in Yahoo Finance for given symbol(s) Module : summaryDetail Return : dict Example aapl = Ticker ( 'aapl' ) aapl . summary_detail Data { \"aapl\" : { \"maxAge\" : 1 , \"priceHint\" : 2 , \"previousClose\" : 380.16 , \"open\" : 376.75 , \"dayLow\" : 375.07 , \"dayHigh\" : 385.19 , \"regularMarketPreviousClose\" : 380.16 , \"regularMarketOpen\" : 376.75 , \"regularMarketDayLow\" : 375.07 , \"regularMarketDayHigh\" : 385.19 , \"dividendRate\" : 3.28 , \"dividendYield\" : 0.0086 , \"exDividendDate\" : \"2020-05-08 00:00:00\" , \"payoutRatio\" : 0.2408 , \"fiveYearAvgDividendYield\" : 1.57 , \"beta\" : 1.182072 , \"trailingPE\" : 30.229418 , \"forwardPE\" : 25.70207 , \"volume\" : 30622619 , \"regularMarketVolume\" : 30622619 , \"averageVolume\" : 34597506 , \"averageVolume10days\" : 30632812 , \"averageDailyVolume10Day\" : 30632812 , \"bid\" : 384.92 , \"ask\" : 384.99 , \"bidSize\" : 800 , \"askSize\" : 1100 , \"marketCap\" : 1667676766208 , \"fiftyTwoWeekLow\" : 192.58 , \"fiftyTwoWeekHigh\" : 399.82 , \"priceToSalesTrailing12Months\" : 6.223116 , \"fiftyDayAverage\" : 368.7483 , \"twoHundredDayAverage\" : 313.38132 , \"trailingAnnualDividendRate\" : 3.08 , \"trailingAnnualDividendYield\" : 0.008101852 , \"currency\" : \"USD\" , \"fromCurrency\" : null , \"toCurrency\" : null , \"lastMarket\" : null , \"algorithm\" : null , \"tradeable\" : false } } summary_profile \u00b6 Details Description : Data related to given symbol(s) location and business summary Module : summaryProfile Return : dict Example aapl = Ticker ( 'aapl' ) aapl . summary_profile Data { \"aapl\" : { \"address1\" : \"One Apple Park Way\" , \"city\" : \"Cupertino\" , \"state\" : \"CA\" , \"zip\" : \"95014\" , \"country\" : \"United States\" , \"phone\" : \"408-996-1010\" , \"website\" : \"http://www.apple.com\" , \"industry\" : \"Consumer Electronics\" , \"sector\" : \"Technology\" , \"longBusinessSummary\" : \"Apple Inc. designs, manufactures, and markets smartphones, personal computers, tablets, wearables, and accessories worldwide. It also sells various related services. The company offers iPhone, a line of smartphones; Mac, a line of personal computers; iPad, a line of multi-purpose tablets; and wearables, home, and accessories comprising AirPods, Apple TV, Apple Watch, Beats products, HomePod, iPod touch, and other Apple-branded and third-party accessories. It also provides digital content stores and streaming services; AppleCare support services; and iCloud, a cloud service, which stores music, photos, contacts, calendars, mail, documents, and others. In addition, the company offers various service, such as Apple Arcade, a game subscription service; Apple Card, a co-branded credit card; Apple News+, a subscription news and magazine service; and Apple Pay, a cashless payment service, as well as licenses its intellectual property, and provides other related services. The company serves consumers, and small and mid-sized businesses; and the education, enterprise, and government markets. It sells and delivers third-party applications for its products through the App Store, Mac App Store, and Watch App Store. The company also sells its products through its retail and online stores, and direct sales force; and third-party cellular network carriers, wholesalers, retailers, and resellers. Apple Inc. has a collaboration with Google to develop COVID-19 tracking system for Android and iOS devices. Apple Inc. was founded in 1977 and is headquartered in Cupertino, California.\" , \"fullTimeEmployees\" : 137000 , \"companyOfficers\" : [], \"maxAge\" : 86400 } } Multiple Modules \u00b6 all_modules \u00b6 Details Description : Returns all modules from above Return : dict Info Each module will be a key in the dictionary returned Number of Requests The call to all_modules represents only 1 request per symbol Warning Data for symbols external to the United States will be inaccurate for the following modules: cashFlowStatementHistory , cashFlowStatementHistoryQuarterly , incomeStatementHistory , incomeStatementHistoryQuarterly , balanceSheetHistory , balanceSheetHistoryQuarterly . Tip See Financials for a better way to retrieve accurate data Example >>> aapl = Ticker ( 'aapl' ) >>> data = aapl . all_modules >>> data . keys () dict_keys ([ 'aapl' ]) >>> data [ 'aapl' ] . keys () dict_keys ([ 'assetProfile' , 'recommendationTrend' , 'cashflowStatementHistory' , 'indexTrend' , 'defaultKeyStatistics' , 'industryTrend' , 'quoteType' , 'incomeStatementHistory' , 'fundOwnership' , 'summaryDetail' , 'insiderHolders' , 'calendarEvents' , 'upgradeDowngradeHistory' , 'price' , 'balanceSheetHistory' , 'earningsTrend' , 'secFilings' , 'institutionOwnership' , 'majorHoldersBreakdown' , 'balanceSheetHistoryQuarterly' , 'earningsHistory' , 'esgScores' , 'summaryProfile' , 'netSharePurchaseActivity' , 'insiderTransactions' , 'sectorTrend' , 'incomeStatementHistoryQuarterly' , 'cashflowStatementHistoryQuarterly' , 'earnings' , 'pageViews' , 'financialData' ]) get_modules \u00b6 Details Description : Obtain specific modules for given symbol(s) Arguments : list or str of desired modules Return : dict Raises : ValueError is raised if invalid module is given View Available Modules [ 'assetProfile' , 'recommendationTrend' , 'cashflowStatementHistory' , 'indexTrend' , 'defaultKeyStatistics' , 'industryTrend' , 'quoteType' , 'incomeStatementHistory' , 'fundOwnership' , 'summaryDetail' , 'insiderHolders' , 'calendarEvents' , 'upgradeDowngradeHistory' , 'price' , 'balanceSheetHistory' , 'earningsTrend' , 'secFilings' , 'institutionOwnership' , 'majorHoldersBreakdown' , 'balanceSheetHistoryQuarterly' , 'earningsHistory' , 'esgScores' , 'summaryProfile' , 'netSharePurchaseActivity' , 'insiderTransactions' , 'sectorTrend' , 'incomeStatementHistoryQuarterly' , 'cashflowStatementHistoryQuarterly' , 'earnings' , 'pageViews' , 'financialData' ] Example aapl = Ticker ( 'aapl' ) modules = 'assetProfile earnings defaultKeyStatistics' aapl . get_modules ( modules ) Data Data { \"aapl\" : { \"assetProfile\" : { \"address1\" : \"One Apple Park Way\" , \"city\" : \"Cupertino\" , \"state\" : \"CA\" , \"zip\" : \"95014\" , \"country\" : \"United States\" , \"phone\" : \"408-996-1010\" , \"website\" : \"http://www.apple.com\" , \"industry\" : \"Consumer Electronics\" , \"sector\" : \"Technology\" , \"longBusinessSummary\" : \"Apple Inc. designs, manufactures, and markets smartphones, personal computers, tablets, wearables, and accessories worldwide. It also sells various related services. The company offers iPhone, a line of smartphones; Mac, a line of personal computers; iPad, a line of multi-purpose tablets; and wearables, home, and accessories comprising AirPods, Apple TV, Apple Watch, Beats products, HomePod, iPod touch, and other Apple-branded and third-party accessories. It also provides digital content stores and streaming services; AppleCare support services; and iCloud, a cloud service, which stores music, photos, contacts, calendars, mail, documents, and others. In addition, the company offers various service, such as Apple Arcade, a game subscription service; Apple Card, a co-branded credit card; Apple News+, a subscription news and magazine service; and Apple Pay, a cashless payment service, as well as licenses its intellectual property, and provides other related services. The company serves consumers, and small and mid-sized businesses; and the education, enterprise, and government markets. It sells and delivers third-party applications for its products through the App Store, Mac App Store, and Watch App Store. The company also sells its products through its retail and online stores, and direct sales force; and third-party cellular network carriers, wholesalers, retailers, and resellers. Apple Inc. has a collaboration with Google to develop COVID-19 tracking system for Android and iOS devices. Apple Inc. was founded in 1977 and is headquartered in Cupertino, California.\" , \"fullTimeEmployees\" : 137000 , \"companyOfficers\" : [{ \"maxAge\" : 1 , \"name\" : \"Mr. Timothy D. Cook\" , \"age\" : 58 , \"title\" : \"CEO & Director\" , \"yearBorn\" : 1961 , \"fiscalYear\" : 2019 , \"totalPay\" : 11555466 , \"exercisedValue\" : 0 , \"unexercisedValue\" : 0 }, { \"maxAge\" : 1 , \"name\" : \"Mr. Luca Maestri\" , \"age\" : 55 , \"title\" : \"CFO & Sr. VP\" , \"yearBorn\" : 1964 , \"fiscalYear\" : 2019 , \"totalPay\" : 3576221 , \"exercisedValue\" : 0 , \"unexercisedValue\" : 0 }, { \"maxAge\" : 1 , \"name\" : \"Mr. Jeffrey E. Williams\" , \"age\" : 55 , \"title\" : \"Chief Operating Officer\" , \"yearBorn\" : 1964 , \"fiscalYear\" : 2019 , \"totalPay\" : 3574503 , \"exercisedValue\" : 0 , \"unexercisedValue\" : 0 }, { \"maxAge\" : 1 , \"name\" : \"Ms. Katherine L. Adams\" , \"age\" : 55 , \"title\" : \"Sr. VP, Gen. Counsel & Sec.\" , \"yearBorn\" : 1964 , \"fiscalYear\" : 2019 , \"totalPay\" : 3598384 , \"exercisedValue\" : 0 , \"unexercisedValue\" : 0 }, { \"maxAge\" : 1 , \"name\" : \"Ms. Deirdre O'Brien\" , \"age\" : 52 , \"title\" : \"Sr. VP of People & Retail\" , \"yearBorn\" : 1967 , \"fiscalYear\" : 2019 , \"totalPay\" : 2690253 , \"exercisedValue\" : 0 , \"unexercisedValue\" : 0 } ], \"auditRisk\" : 1 , \"boardRisk\" : 1 , \"compensationRisk\" : 3 , \"shareHolderRightsRisk\" : 1 , \"overallRisk\" : 1 , \"governanceEpochDate\" : \"2019-12-07 00:00:00\" , \"compensationAsOfEpochDate\" : \"2019-12-31 00:00:00\" , \"maxAge\" : 86400 }, \"defaultKeyStatistics\" : { \"maxAge\" : 1 , \"priceHint\" : 2 , \"enterpriseValue\" : 1672450801664 , \"forwardPE\" : 25.70207 , \"profitMargins\" : 0.21350001 , \"floatShares\" : 4329740605 , \"sharesOutstanding\" : 4334329856 , \"sharesShort\" : 35234606 , \"sharesShortPriorMonth\" : 34828293 , \"sharesShortPreviousMonthDate\" : \"2020-06-15 00:00:00\" , \"dateShortInterest\" : \"2020-07-15 00:00:00\" , \"sharesPercentSharesOut\" : 0.0081 , \"heldPercentInsiders\" : 0.00066 , \"heldPercentInstitutions\" : 0.62115 , \"shortRatio\" : 0.96 , \"shortPercentOfFloat\" : 0.0081 , \"beta\" : 1.182072 , \"category\" : null , \"bookValue\" : 18.137 , \"priceToBook\" : 21.214094 , \"fundFamily\" : null , \"legalType\" : null , \"lastFiscalYearEnd\" : \"2019-09-28 00:00:00\" , \"nextFiscalYearEnd\" : \"2021-09-28 00:00:00\" , \"mostRecentQuarter\" : \"2020-03-28 00:00:00\" , \"earningsQuarterlyGrowth\" : - 0.027 , \"netIncomeToCommon\" : 57215000576 , \"trailingEps\" : 12.728 , \"forwardEps\" : 14.97 , \"pegRatio\" : 2.78 , \"lastSplitFactor\" : \"7:1\" , \"lastSplitDate\" : \"2014-06-09 00:00:00\" , \"enterpriseToRevenue\" : 6.241 , \"enterpriseToEbitda\" : 21.634 , \"52WeekChange\" : 0.8239218 , \"SandP52WeekChange\" : 0.103224516 }, \"earnings\" : { \"maxAge\" : 86400 , \"earningsChart\" : { \"quarterly\" : [{ \"date\" : \"2Q2019\" , \"actual\" : 2.18 , \"estimate\" : 2.1 }, { \"date\" : \"3Q2019\" , \"actual\" : 3.03 , \"estimate\" : 2.84 }, { \"date\" : \"4Q2019\" , \"actual\" : 4.99 , \"estimate\" : 4.55 }, { \"date\" : \"1Q2020\" , \"actual\" : 2.55 , \"estimate\" : 2.26 } ], \"currentQuarterEstimate\" : 2.04 , \"currentQuarterEstimateDate\" : \"2Q\" , \"currentQuarterEstimateYear\" : 2020 , \"earningsDate\" : [ 1596067200 ] }, \"financialsChart\" : { \"yearly\" : [{ \"date\" : 2016 , \"revenue\" : 215639000000 , \"earnings\" : 45687000000 }, { \"date\" : 2017 , \"revenue\" : 229234000000 , \"earnings\" : 48351000000 }, { \"date\" : 2018 , \"revenue\" : 265595000000 , \"earnings\" : 59531000000 }, { \"date\" : 2019 , \"revenue\" : 260174000000 , \"earnings\" : 55256000000 } ], \"quarterly\" : [{ \"date\" : \"2Q2019\" , \"revenue\" : 53809000000 , \"earnings\" : 10044000000 }, { \"date\" : \"3Q2019\" , \"revenue\" : 64040000000 , \"earnings\" : 13686000000 }, { \"date\" : \"4Q2019\" , \"revenue\" : 91819000000 , \"earnings\" : 22236000000 }, { \"date\" : \"1Q2020\" , \"revenue\" : 58313000000 , \"earnings\" : 11249000000 } ] }, \"financialCurrency\" : \"USD\" } } }","title":"Modules"},{"location":"guide/ticker/modules/#single-module","text":"","title":"Single Module"},{"location":"guide/ticker/modules/#asset_profile","text":"Details Description : Information related to the company's location, operations, and officers. Module : assetProfile Return : dict Example aapl = Ticker ( 'aapl' ) aapl . asset_profile Data { 'aapl' : { 'address1' : 'One Apple Park Way' , 'auditRisk' : 1 , 'boardRisk' : 1 , 'city' : 'Cupertino' , 'companyOfficers' : [{ 'age' : 58 , 'exercisedValue' : 0 , 'fiscalYear' : 2019 , 'maxAge' : 1 , 'name' : 'Mr. Timothy D. Cook' , 'title' : 'CEO & Director' , 'totalPay' : 11555466 , 'unexercisedValue' : 0 , 'yearBorn' : 1961 }, { 'age' : 55 , 'exercisedValue' : 0 , 'fiscalYear' : 2019 , 'maxAge' : 1 , 'name' : 'Mr. Luca Maestri' , 'title' : 'CFO & Sr. VP' , 'totalPay' : 3576221 , 'unexercisedValue' : 0 , 'yearBorn' : 1964 }, { 'age' : 55 , 'exercisedValue' : 0 , 'fiscalYear' : 2019 , 'maxAge' : 1 , 'name' : 'Mr. Jeffrey E. Williams' , 'title' : 'Chief Operating Officer' , 'totalPay' : 3574503 , 'unexercisedValue' : 0 , 'yearBorn' : 1964 }, { 'age' : 55 , 'exercisedValue' : 0 , 'fiscalYear' : 2019 , 'maxAge' : 1 , 'name' : 'Ms. Katherine L. Adams' , 'title' : 'Sr. VP, Gen. Counsel & Sec.' , 'totalPay' : 3598384 , 'unexercisedValue' : 0 , 'yearBorn' : 1964 }, { 'age' : 52 , 'exercisedValue' : 0 , 'fiscalYear' : 2019 , 'maxAge' : 1 , 'name' : \"Ms. Deirdre O'Brien\" , 'title' : 'Sr. VP of People & Retail' , 'totalPay' : 2690253 , 'unexercisedValue' : 0 , 'yearBorn' : 1967 }], 'compensationAsOfEpochDate' : '2019-12-30 17:00:00' , 'compensationRisk' : 3 , 'country' : 'United States' , 'fullTimeEmployees' : 137000 , 'governanceEpochDate' : '2019-12-06 17:00:00' , 'industry' : 'Consumer Electronics' , 'longBusinessSummary' : 'Apple Inc. designs, manufactures, and ' 'markets smartphones, personal computers, ' 'tablets, wearables, and accessories ' 'worldwide. It also sells various related ' 'services. The company offers iPhone, a line ' 'of smartphones; Mac, a line of personal ' 'computers; iPad, a line of multi-purpose ' 'tablets; and wearables, home, and ' 'accessories comprising AirPods, Apple TV, ' 'Apple Watch, Beats products, HomePod, iPod ' 'touch, and other Apple-branded and ' 'third-party accessories. It also provides ' 'digital content stores and streaming ' 'services; AppleCare support services; and ' 'iCloud, a cloud service, which stores music, ' 'photos, contacts, calendars, mail, ' 'documents, and others. In addition, the ' 'company offers various service, such as ' 'Apple Arcade, a game subscription service; ' 'Apple Card, a co-branded credit card; Apple ' 'News+, a subscription news and magazine ' 'service; and Apple Pay, a cashless payment ' 'service, as well as licenses its ' 'intellectual property, and provides other ' 'related services. The company serves ' 'consumers, and small and mid-sized ' 'businesses; and the education, enterprise, ' 'and government markets. It sells and ' 'delivers third-party applications for its ' 'products through the App Store, Mac App ' 'Store, and Watch App Store. The company also ' 'sells its products through its retail and ' 'online stores, and direct sales force; and ' 'third-party cellular network carriers, ' 'wholesalers, retailers, and resellers. Apple ' 'Inc. has a collaboration with Google to ' 'develop COVID-19 tracking system for Android ' 'and iOS devices. Apple Inc. was founded in ' '1977 and is headquartered in Cupertino, ' 'California.' , 'maxAge' : 86400 , 'overallRisk' : 1 , 'phone' : '408-996-1010' , 'sector' : 'Technology' , 'shareHolderRightsRisk' : 1 , 'state' : 'CA' , 'website' : 'http://www.apple.com' , 'zip' : '95014' }}","title":"asset_profile"},{"location":"guide/ticker/modules/#calendar_events","text":"Details Description : Earnings and Revenue expectations for upcoming earnings date for given symbol(s) Module : calendarEvents Return : dict Example aapl = Ticker ( 'aapl' ) aapl . calendar_events Data { 'aapl' : { 'dividendDate' : '2020-05-13 18:00:00' , 'earnings' : { 'earningsAverage' : 2.04 , 'earningsDate' : [ 1596067200 ], 'earningsHigh' : 2.47 , 'earningsLow' : 1.67 , 'revenueAverage' : 52247700000 , 'revenueHigh' : 55838000000 , 'revenueLow' : 48955000000 }, 'exDividendDate' : '2020-05-07 18:00:00' , 'maxAge' : 1 } }","title":"calendar_events"},{"location":"guide/ticker/modules/#company_officers","text":"Details Description : Retrieves top executives for given symbol(s) and their total pay package. Module : assetProfile Return : pandas.DataFrame Info This is a subset of the data returned from the assetProfile module Example aapl = Ticker ( 'aapl' ) aapl . company_officers Data name age title yearBorn fiscalYear totalPay exercisedValue unexercisedValue 0 Mr. Timothy D. Cook 58 CEO & Director 1961 2019 11555466 0 0 1 Mr. Luca Maestri 55 CFO & Sr. VP 1964 2019 3576221 0 0 2 Mr. Jeffrey E. Williams 55 Chief Operating Officer 1964 2019 3574503 0 0 3 Ms. Katherine L. Adams 55 Sr. VP, Gen. Counsel & Sec. 1964 2019 3598384 0 0 4 Ms. Deirdre O'Brien 52 Sr. VP of People & Retail 1967 2019 2690253 0 0","title":"company_officers"},{"location":"guide/ticker/modules/#earning_history","text":"Details Description : Data related to historical earnings (actual vs. estimate) for given symbol(s) Module : earningsHistory Return : pandas.DataFrame Example aapl = Ticker ( 'aapl' ) aapl . earning_history Data symbol row maxAge epsActual epsEstimate epsDifference surprisePercent quarter period 0 aapl 0 1 2.18 2.1 0.08 0.038 2019-06-30 -4q 1 aapl 1 1 3.03 2.84 0.19 0.067 2019-09-30 -3q 2 aapl 2 1 4.99 4.55 0.44 0.097 2019-12-31 -2q 3 aapl 3 1 2.55 2.26 0.29 0.128 2020-03-31 -1q","title":"earning_history"},{"location":"guide/ticker/modules/#earnings","text":"Details Description : Historical earnings data for given symbol(s) Module : earnings Return : dict Example aapl = Ticker ( 'aapl' ) aapl . earnings Data { \"aapl\" : { \"maxAge\" : 86400 , \"earningsChart\" : { \"quarterly\" : [{ \"date\" : \"2Q2019\" , \"actual\" : 2.18 , \"estimate\" : 2.1 }, { \"date\" : \"3Q2019\" , \"actual\" : 3.03 , \"estimate\" : 2.84 }, { \"date\" : \"4Q2019\" , \"actual\" : 4.99 , \"estimate\" : 4.55 }, { \"date\" : \"1Q2020\" , \"actual\" : 2.55 , \"estimate\" : 2.26 } ], \"currentQuarterEstimate\" : 2.04 , \"currentQuarterEstimateDate\" : \"2Q\" , \"currentQuarterEstimateYear\" : 2020 , \"earningsDate\" : [ 1596067200 ] }, \"financialsChart\" : { \"yearly\" : [{ \"date\" : 2016 , \"revenue\" : 215639000000 , \"earnings\" : 45687000000 }, { \"date\" : 2017 , \"revenue\" : 229234000000 , \"earnings\" : 48351000000 }, { \"date\" : 2018 , \"revenue\" : 265595000000 , \"earnings\" : 59531000000 }, { \"date\" : 2019 , \"revenue\" : 260174000000 , \"earnings\" : 55256000000 } ], \"quarterly\" : [{ \"date\" : \"2Q2019\" , \"revenue\" : 53809000000 , \"earnings\" : 10044000000 }, { \"date\" : \"3Q2019\" , \"revenue\" : 64040000000 , \"earnings\" : 13686000000 }, { \"date\" : \"4Q2019\" , \"revenue\" : 91819000000 , \"earnings\" : 22236000000 }, { \"date\" : \"1Q2020\" , \"revenue\" : 58313000000 , \"earnings\" : 11249000000 } ] }, \"financialCurrency\" : \"USD\" } }","title":"earnings"},{"location":"guide/ticker/modules/#earnings_trend","text":"Details Description : Historical trend data for earnings and revenue estimations for given symbol(s) Module : earningsTrend Return : dict Example aapl = Ticker ( 'aapl' ) aapl . earnings_trend Data { \"aapl\" : { \"trend\" : [{ \"maxAge\" : 1 , \"period\" : \"0q\" , \"endDate\" : \"2020-06-30\" , \"growth\" : - 0.064 , \"earningsEstimate\" : { \"avg\" : 2.04 , \"low\" : 1.67 , \"high\" : 2.47 , \"yearAgoEps\" : 2.18 , \"numberOfAnalysts\" : 31 , \"growth\" : - 0.064 }, \"revenueEstimate\" : { \"avg\" : 52247700000 , \"low\" : 48955000000 , \"high\" : 55838000000 , \"numberOfAnalysts\" : 27 , \"yearAgoRevenue\" : 53809000000 , \"growth\" : - 0.029000001 }, \"epsTrend\" : { \"current\" : 2.04 , \"7daysAgo\" : 2.02 , \"30daysAgo\" : 2 , \"60daysAgo\" : 2 , \"90daysAgo\" : 2.07 }, \"epsRevisions\" : { \"upLast7days\" : 4 , \"upLast30days\" : 10 , \"downLast30days\" : 0 , \"downLast90days\" : {} } }, { \"maxAge\" : 1 , \"period\" : \"+1q\" , \"endDate\" : \"2020-09-30\" , \"growth\" : - 0.083000004 , \"earningsEstimate\" : { \"avg\" : 2.78 , \"low\" : 2.09 , \"high\" : 3.64 , \"yearAgoEps\" : 3.03 , \"numberOfAnalysts\" : 30 , \"growth\" : - 0.083000004 }, \"revenueEstimate\" : { \"avg\" : 61536000000 , \"low\" : 50471000000 , \"high\" : 73554000000 , \"numberOfAnalysts\" : 28 , \"yearAgoRevenue\" : 64040000000 , \"growth\" : - 0.039 }, \"epsTrend\" : { \"current\" : 2.78 , \"7daysAgo\" : 2.81 , \"30daysAgo\" : 2.83 , \"60daysAgo\" : 2.8 , \"90daysAgo\" : 2.91 }, \"epsRevisions\" : { \"upLast7days\" : 3 , \"upLast30days\" : 5 , \"downLast30days\" : 1 , \"downLast90days\" : {} } }, { \"maxAge\" : 1 , \"period\" : \"0y\" , \"endDate\" : \"2020-09-30\" , \"growth\" : 0.045 , \"earningsEstimate\" : { \"avg\" : 12.43 , \"low\" : 11.89 , \"high\" : 13.69 , \"yearAgoEps\" : 11.89 , \"numberOfAnalysts\" : 37 , \"growth\" : 0.045 }, \"revenueEstimate\" : { \"avg\" : 264098000000 , \"low\" : 254618000000 , \"high\" : 279524000000 , \"numberOfAnalysts\" : 35 , \"yearAgoRevenue\" : 260174000000 , \"growth\" : 0.015 }, \"epsTrend\" : { \"current\" : 12.43 , \"7daysAgo\" : 12.42 , \"30daysAgo\" : 12.4 , \"60daysAgo\" : 12.32 , \"90daysAgo\" : 12.23 }, \"epsRevisions\" : { \"upLast7days\" : 3 , \"upLast30days\" : 9 , \"downLast30days\" : 1 , \"downLast90days\" : {} } }, { \"maxAge\" : 1 , \"period\" : \"+1y\" , \"endDate\" : \"2021-09-30\" , \"growth\" : 0.204 , \"earningsEstimate\" : { \"avg\" : 14.97 , \"low\" : 12.59 , \"high\" : 16.95 , \"yearAgoEps\" : 12.43 , \"numberOfAnalysts\" : 37 , \"growth\" : 0.204 }, \"revenueEstimate\" : { \"avg\" : 297911000000 , \"low\" : 271687000000 , \"high\" : 323720000000 , \"numberOfAnalysts\" : 35 , \"yearAgoRevenue\" : 264098000000 , \"growth\" : 0.128 }, \"epsTrend\" : { \"current\" : 14.97 , \"7daysAgo\" : 14.94 , \"30daysAgo\" : 14.85 , \"60daysAgo\" : 14.73 , \"90daysAgo\" : 14.79 }, \"epsRevisions\" : { \"upLast7days\" : 3 , \"upLast30days\" : 11 , \"downLast30days\" : 1 , \"downLast90days\" : {} } }, { \"maxAge\" : 1 , \"period\" : \"+5y\" , \"endDate\" : null , \"growth\" : 0.1099 , \"earningsEstimate\" : { \"avg\" : {}, \"low\" : {}, \"high\" : {}, \"yearAgoEps\" : {}, \"numberOfAnalysts\" : {}, \"growth\" : {} }, \"revenueEstimate\" : { \"avg\" : {}, \"low\" : {}, \"high\" : {}, \"numberOfAnalysts\" : {}, \"yearAgoRevenue\" : {}, \"growth\" : {} }, \"epsTrend\" : { \"current\" : {}, \"7daysAgo\" : {}, \"30daysAgo\" : {}, \"60daysAgo\" : {}, \"90daysAgo\" : {} }, \"epsRevisions\" : { \"upLast7days\" : {}, \"upLast30days\" : {}, \"downLast30days\" : {}, \"downLast90days\" : {} } }, { \"maxAge\" : 1 , \"period\" : \"-5y\" , \"endDate\" : null , \"growth\" : 0.08415 , \"earningsEstimate\" : { \"avg\" : {}, \"low\" : {}, \"high\" : {}, \"yearAgoEps\" : {}, \"numberOfAnalysts\" : {}, \"growth\" : {} }, \"revenueEstimate\" : { \"avg\" : {}, \"low\" : {}, \"high\" : {}, \"numberOfAnalysts\" : {}, \"yearAgoRevenue\" : {}, \"growth\" : {} }, \"epsTrend\" : { \"current\" : {}, \"7daysAgo\" : {}, \"30daysAgo\" : {}, \"60daysAgo\" : {}, \"90daysAgo\" : {} }, \"epsRevisions\" : { \"upLast7days\" : {}, \"upLast30days\" : {}, \"downLast30days\" : {}, \"downLast90days\" : {} } } ], \"maxAge\" : 1 } }","title":"earnings_trend"},{"location":"guide/ticker/modules/#esg_scores","text":"Details Description : Data related to a given symbol(s) environmental, social, and governance metrics Module : esgScores Return : dict Example aapl = Ticker ( 'aapl' ) aapl . esg_scores Data { \"aapl\" : { \"maxAge\" : 86400 , \"totalEsg\" : 23.62 , \"environmentScore\" : 0.49 , \"socialScore\" : 12.98 , \"governanceScore\" : 10.15 , \"ratingYear\" : 2020 , \"ratingMonth\" : 7 , \"highestControversy\" : 3 , \"esgPerformance\" : \"AVG_PERF\" , \"peerCount\" : 57 , \"peerGroup\" : \"Technology Hardware\" , \"relatedControversy\" : [ \"Social Supply Chain Incidents\" , \"Customer Incidents\" , \"Business Ethics Incidents\" ], \"peerEsgScorePerformance\" : { \"min\" : 8.59 , \"avg\" : 17.345438596491228 , \"max\" : 26.24 }, \"peerGovernancePerformance\" : { \"min\" : 3.89 , \"avg\" : 7.5931578947368426 , \"max\" : 13.36 }, \"peerSocialPerformance\" : { \"min\" : 2.69 , \"avg\" : 6.5699999999999985 , \"max\" : 12.98 }, \"peerEnvironmentPerformance\" : { \"min\" : 0.1 , \"avg\" : 3.1815789473684215 , \"max\" : 10.02 }, \"peerHighestControversyPerformance\" : { \"min\" : 0 , \"avg\" : 1.543859649122807 , \"max\" : 4 }, \"percentile\" : 33.02 , \"environmentPercentile\" : 0 , \"socialPercentile\" : 0 , \"governancePercentile\" : 0 , \"adult\" : false , \"alcoholic\" : false , \"animalTesting\" : false , \"catholic\" : false , \"controversialWeapons\" : false , \"smallArms\" : false , \"furLeather\" : false , \"gambling\" : false , \"gmo\" : false , \"militaryContract\" : false , \"nuclear\" : false , \"pesticides\" : false , \"palmOil\" : false , \"coal\" : false , \"tobacco\" : false } }","title":"esg_scores"},{"location":"guide/ticker/modules/#financial_data","text":"Details Description : Financial KPIs for given symbol(s) Module : financialData Return : dict Example aapl = Ticker ( 'aapl' ) aapl . financial_data Data { \"aapl\" : { \"maxAge\" : 86400 , \"currentPrice\" : 380.16 , \"targetHighPrice\" : 450 , \"targetLowPrice\" : 195.43 , \"targetMeanPrice\" : 371.96 , \"targetMedianPrice\" : 400 , \"recommendationMean\" : 2.1 , \"recommendationKey\" : \"buy\" , \"numberOfAnalystOpinions\" : 38 , \"totalCash\" : 94051000320 , \"totalCashPerShare\" : 21.699 , \"ebitda\" : 77305004032 , \"totalDebt\" : 118760996864 , \"quickRatio\" : 1.298 , \"currentRatio\" : 1.496 , \"totalRevenue\" : 267980996608 , \"debtToEquity\" : 151.433 , \"revenuePerShare\" : 60.097 , \"returnOnAssets\" : 0.12377 , \"returnOnEquity\" : 0.62094 , \"grossProfits\" : 98392000000 , \"freeCashflow\" : 45040123904 , \"operatingCashflow\" : 75373002752 , \"earningsGrowth\" : 0.037 , \"revenueGrowth\" : 0.005 , \"grossMargins\" : 0.3811 , \"ebitdaMargins\" : 0.28847 , \"operatingMargins\" : 0.24475999 , \"profitMargins\" : 0.21350001 , \"financialCurrency\" : \"USD\" } }","title":"financial_data"},{"location":"guide/ticker/modules/#fund_bond_holdings","text":"Details Description : Retrieves aggregated maturity and duration information for a given symbol(s) Module : topHoldings Return : pandas.DataFrame Info This is a subset of the data returned from the topHoldings module Warning This endpoint will only return data for specific securities (funds and etfs) Example fund = Ticker ( 'vbmfx' ) fund . fund_bond_holdings Data { \"vbmfx\" : { \"maturity\" : 8.1 , \"duration\" : 6.21 , \"maturityCat\" : 7.48 , \"durationCat\" : 5.34 } }","title":"fund_bond_holdings"},{"location":"guide/ticker/modules/#fund_bond_ratings","text":"Details Description : Retrieves aggregated maturity and duration information for a given symbol(s) Module : topHoldings Return : pandas.DataFrame Info This is a subset of the data returned from the topHoldings module Warning This endpoint will only return data for specific securities (funds and etfs) Example funds = Ticker ( 'vbmfx vicbx vstbx vwehx' ) funds . fund_bond_holdings Data vbmfx vicbx vstbx vwehx bb 0 0 0 0.4992 aa 0.0343 0.055 0.1114 -0.0002 aaa 0.6755 0.0134 0.0146 0.0372 a 0.1137 0.3697 0.4214 0 other 0 0 0 0.0346 b 0 0 0 0.3291 bbb 0.1765 0.5619 0.4526 0.0448 below_b 0 0 0 0.0553 us_government 0 0 0 0","title":"fund_bond_ratings"},{"location":"guide/ticker/modules/#fund_equity_holdings","text":"Details Description : Retrieves aggregated priceTo____ data for a given symbol(s) Module : topHoldings Return : dict Info This is a subset of the data returned from the topHoldings module Warning This endpoint will only return data for specific securities (funds and etfs) Example fund = Ticker ( 'hasgx' ) fund . fund_equity_holdings Data { \"hasgx\" : { \"priceToEarnings\" : 25.46 , \"priceToBook\" : 3.67 , \"priceToSales\" : 1.82 , \"priceToCashflow\" : 15.61 , \"medianMarketCap\" : 4411.09 , \"threeYearEarningsGrowth\" : 19.57 , \"priceToEarningsCat\" : 29.37 , \"priceToBookCat\" : 4.16 , \"priceToSalesCat\" : 2.65 , \"priceToCashflowCat\" : 19.68 , \"medianMarketCapCat\" : 4485.81 , \"threeYearEarningsGrowthCat\" : 20.39 } }","title":"fund_equity_holdings"},{"location":"guide/ticker/modules/#fund_holding_info","text":"Details Description : Contains information for a funds top holdings, bond ratings, bond holdings, equity holdings, sector weightings, and category breakdown Module : topHoldings Return : dict Info This is a subset of the data returned from the topHoldings module Warning This endpoint will only return data for specific securities (funds and etfs) Example fund = Ticker ( 'hasgx' ) fund . fund_holding_info Data { \"hasgx\" : { \"maxAge\" : 1 , \"cashPosition\" : 0.0301 , \"stockPosition\" : 0.96989995 , \"bondPosition\" : 0 , \"otherPosition\" : 0 , \"preferredPosition\" : 0 , \"convertiblePosition\" : 0 , \"holdings\" : [{ \"symbol\" : \"ICLR\" , \"holdingName\" : \"Icon PLC\" , \"holdingPercent\" : 0.028199999 }, { \"symbol\" : \"BIO\" , \"holdingName\" : \"Bio-Rad Laboratories Inc\" , \"holdingPercent\" : 0.0276 }, { \"symbol\" : \"BLD\" , \"holdingName\" : \"TopBuild Corp\" , \"holdingPercent\" : 0.0238 }, { \"symbol\" : \"ASND\" , \"holdingName\" : \"Ascendis Pharma A/S ADR\" , \"holdingPercent\" : 0.0228 }, { \"symbol\" : \"TREX\" , \"holdingName\" : \"Trex Co Inc\" , \"holdingPercent\" : 0.0219 }, { \"symbol\" : \"TKR\" , \"holdingName\" : \"The Timken Co\" , \"holdingPercent\" : 0.0215 }, { \"symbol\" : \"MIME\" , \"holdingName\" : \"Mimecast Ltd\" , \"holdingPercent\" : 0.020299999 }, { \"symbol\" : \"TDY\" , \"holdingName\" : \"Teledyne Technologies Inc\" , \"holdingPercent\" : 0.0198 }, { \"symbol\" : \"ERI\" , \"holdingName\" : \"Eldorado Resorts Inc\" , \"holdingPercent\" : 0.0196 }, { \"symbol\" : \"\" , \"holdingName\" : \"The Medicines Co\" , \"holdingPercent\" : 0.0194 } ], \"equityHoldings\" : { \"priceToEarnings\" : 25.46 , \"priceToBook\" : 3.67 , \"priceToSales\" : 1.82 , \"priceToCashflow\" : 15.61 , \"medianMarketCap\" : 4411.09 , \"threeYearEarningsGrowth\" : 19.57 , \"priceToEarningsCat\" : 29.37 , \"priceToBookCat\" : 4.16 , \"priceToSalesCat\" : 2.65 , \"priceToCashflowCat\" : 19.68 , \"medianMarketCapCat\" : 4485.81 , \"threeYearEarningsGrowthCat\" : 20.39 }, \"bondHoldings\" : {}, \"bondRatings\" : [{ \"bb\" : 0 }, { \"aa\" : 0 }, { \"aaa\" : 0 }, { \"a\" : 0 }, { \"other\" : 0 }, { \"b\" : 0 }, { \"bbb\" : 0 }, { \"below_b\" : 0 }, { \"us_government\" : 0 } ], \"sectorWeightings\" : [{ \"realestate\" : 0.0299 }, { \"consumer_cyclical\" : 0.105299994 }, { \"basic_materials\" : 0 }, { \"consumer_defensive\" : 0.0073 }, { \"technology\" : 0.24309999 }, { \"communication_services\" : 0.0312 }, { \"financial_services\" : 0.0889 }, { \"utilities\" : 0 }, { \"industrials\" : 0.1701 }, { \"energy\" : 0.031 }, { \"healthcare\" : 0.2933 } ] } }","title":"fund_holding_info"},{"location":"guide/ticker/modules/#fund_ownership","text":"Details Description : Top 10 owners of a given symbol(s) Module : fundOwnership Return : pandas.DataFrame Example aapl = Ticker ( 'aapl' ) aapl . fund_ownership Data symbol row maxAge reportDate organization pctHeld position value 0 aapl 0 1 2020-03-31 Vanguard Total Stock Market Index Fund 0.0271 117298701 29827886677 1 aapl 1 1 2020-03-31 Vanguard 500 Index Fund 0.0198 85980468 21863973207 2 aapl 2 1 2020-05-31 SPDR S&P 500 ETF Trust 0.0103 44553380 14165301637 3 aapl 3 1 2020-05-31 Invesco ETF Tr-Invesco QQQ Tr, Series 1 ETF 0.0089 38712448 12308235717 4 aapl 4 1 2020-03-31 Vanguard Institutional Index Fund-Institutional Index Fund 0.0085 36959990 9398555857 5 aapl 5 1 2020-05-31 Fidelity 500 Index Fund 0.0085 36919886 11738308554 6 aapl 6 1 2020-04-30 iShares Core S&P 500 ETF 0.0073 31473783 9246997445 7 aapl 7 1 2020-03-31 Vanguard Growth Index Fund 0.007 30336895 7714369029 8 aapl 8 1 2020-05-31 Select Sector SPDR Fund-Technology 0.0043 18642268 5927122687 9 aapl 9 1 2020-02-29 Vanguard Information Technology Index Fund 0.0043 18504465 5058380552","title":"fund_ownership"},{"location":"guide/ticker/modules/#fund_performance","text":"Details Description : Historical return data for a given symbol(s) and symbol(s) specific category Module : fundPerformance Return : dict Warning This endpoint will only return data for specific securities (funds and etfs) Example fund = Ticker ( 'hasgx' ) fund . fund_performance Data { \"hasgx\" : { \"maxAge\" : 1 , \"performanceOverview\" : { \"asOfDate\" : \"2019-02-04 00:00:00\" , \"morningStarReturnRating\" : 3 , \"ytdReturnPct\" : 0.1441 , \"fiveYrAvgReturnPct\" : 0.0855 , \"numYearsUp\" : 14 , \"numYearsDown\" : 5 , \"bestOneYrTotalReturn\" : 0.44779998 , \"worstOneYrTotalReturn\" : - 0.4042 , \"bestThreeYrTotalReturn\" : 0.44779998 , \"worstThreeYrTotalReturn\" : - 0.0912 }, \"performanceOverviewCat\" : { \"ytdReturnPct\" : - 0.001 , \"fiveYrAvgReturnPct\" : 0.0828 }, \"loadAdjustedReturns\" : { \"oneYear\" : 0.12060001 , \"threeYear\" : 0.1249 , \"fiveYear\" : 0.0877 , \"tenYear\" : 0.1383 }, \"trailingReturns\" : { \"asOfDate\" : \"2020-06-30 00:00:00\" , \"ytd\" : 0.0064999997 , \"oneMonth\" : 0.0294 , \"threeMonth\" : 0.3189 , \"oneYear\" : 0.12060001 , \"threeYear\" : 0.1249 , \"fiveYear\" : 0.0877 , \"tenYear\" : 0.1383 , \"lastBullMkt\" : 0.2784 , \"lastBearMkt\" : - 0.2858 }, \"trailingReturnsNav\" : { \"ytd\" : 0 , \"oneMonth\" : 0 , \"threeMonth\" : 0 , \"oneYear\" : 0 , \"threeYear\" : 0 , \"fiveYear\" : 0 , \"tenYear\" : 0 }, \"trailingReturnsCat\" : { \"ytd\" : - 0.001 , \"oneMonth\" : 0.038 , \"threeMonth\" : 0.32189998 , \"oneYear\" : 0.0446 , \"threeYear\" : 0.1008 , \"fiveYear\" : 0.0828 , \"tenYear\" : 0.1294 , \"lastBullMkt\" : 0.2792 , \"lastBearMkt\" : - 0.24200001 }, \"annualTotalReturns\" : { \"returns\" : [{ \"year\" : \"2020\" }, { \"year\" : \"2019\" , \"annualValue\" : 0.4233321 }, { \"year\" : \"2018\" , \"annualValue\" : - 0.107390605 }, { \"year\" : \"2017\" , \"annualValue\" : 0.2460054 }, { \"year\" : \"2016\" , \"annualValue\" : 0.062196396 }, { \"year\" : \"2015\" , \"annualValue\" : - 0.013101799 }, { \"year\" : \"2014\" , \"annualValue\" : 0.0828115 }, { \"year\" : \"2013\" , \"annualValue\" : 0.4478411 }, { \"year\" : \"2012\" , \"annualValue\" : 0.1447442 }, { \"year\" : \"2011\" , \"annualValue\" : - 0.0766004 }, { \"year\" : \"2010\" , \"annualValue\" : 0.3168667 }, { \"year\" : \"2009\" , \"annualValue\" : 0.4008322 }, { \"year\" : \"2008\" , \"annualValue\" : - 0.4041542 }, { \"year\" : \"2007\" , \"annualValue\" : 0.1363713 }, { \"year\" : \"2006\" , \"annualValue\" : 0.1087122 }, { \"year\" : \"2005\" , \"annualValue\" : 0.0564466 }, { \"year\" : \"2004\" , \"annualValue\" : 0.1115022 }, { \"year\" : \"2003\" , \"annualValue\" : 0.4439252 }, { \"year\" : \"2002\" , \"annualValue\" : - 0.200747 }, { \"year\" : \"2001\" , \"annualValue\" : 0.0229226 } ], \"returnsCat\" : [{ \"year\" : \"2019\" , \"annualValue\" : 0.27676532 }, { \"year\" : \"2018\" , \"annualValue\" : - 0.0576395 }, { \"year\" : \"2017\" , \"annualValue\" : 0.2150002 }, { \"year\" : \"2016\" , \"annualValue\" : 0.111996695 }, { \"year\" : \"2015\" , \"annualValue\" : - 0.0241295 }, { \"year\" : \"2014\" , \"annualValue\" : 0.024365399 }, { \"year\" : \"2013\" , \"annualValue\" : 0.40909082 }, { \"year\" : \"2012\" , \"annualValue\" : 0.1314999 }, { \"year\" : \"2011\" , \"annualValue\" : - 0.0355412 }, { \"year\" : \"2010\" , \"annualValue\" : 0.2698293 }, { \"year\" : \"2009\" , \"annualValue\" : 0.3545617 }, { \"year\" : \"2008\" , \"annualValue\" : - 0.41551048 }, { \"year\" : \"2007\" , \"annualValue\" : 0.075887196 }, { \"year\" : \"2006\" , \"annualValue\" : 0.1081437 }, { \"year\" : \"2005\" , \"annualValue\" : 0.060230598 }, { \"year\" : \"2004\" , \"annualValue\" : 0.12409429 }, { \"year\" : \"2003\" , \"annualValue\" : 0.45537603 }, { \"year\" : \"2002\" , \"annualValue\" : - 0.2787935 }, { \"year\" : \"2001\" , \"annualValue\" : - 0.0891243 }, { \"year\" : \"2000\" , \"annualValue\" : - 0.0384997 }, { \"year\" : \"1999\" , \"annualValue\" : 0.64770126 }, { \"year\" : \"1998\" , \"annualValue\" : 0.0523461 }, { \"year\" : \"1997\" , \"annualValue\" : 0.1741466 }, { \"year\" : \"1996\" , \"annualValue\" : 0.18674481 }, { \"year\" : \"1995\" , \"annualValue\" : 0.3614976 }, { \"year\" : \"1994\" , \"annualValue\" : - 0.0051973998 }, { \"year\" : \"1993\" , \"annualValue\" : 0.17361571 }, { \"year\" : \"1992\" , \"annualValue\" : 0.1094542 }, { \"year\" : \"1991\" , \"annualValue\" : 0.5725298 }, { \"year\" : \"1990\" , \"annualValue\" : - 0.0984044 }, { \"year\" : \"1989\" , \"annualValue\" : 0.2626742 }, { \"year\" : \"1988\" , \"annualValue\" : 0.18222731 }, { \"year\" : \"1987\" , \"annualValue\" : - 0.0370497 }, { \"year\" : \"1986\" , \"annualValue\" : 0.099111795 }, { \"year\" : \"1985\" , \"annualValue\" : 0.2643012 }, { \"year\" : \"1984\" , \"annualValue\" : - 0.104290105 }, { \"year\" : \"1983\" , \"annualValue\" : 0.2495246 }, { \"year\" : \"1982\" , \"annualValue\" : 0.2308341 }, { \"year\" : \"1981\" , \"annualValue\" : 0.0207251 }, { \"year\" : \"1980\" , \"annualValue\" : 0.3761657 }, { \"year\" : \"1979\" , \"annualValue\" : 0.3690657 }, { \"year\" : \"1978\" , \"annualValue\" : 0.1781299 }, { \"year\" : \"1977\" , \"annualValue\" : 0.1065682 }, { \"year\" : \"1976\" , \"annualValue\" : 0.3378357 }, { \"year\" : \"1975\" , \"annualValue\" : 0.3783118 }, { \"year\" : \"1974\" , \"annualValue\" : - 0.3575943 }, { \"year\" : \"1973\" , \"annualValue\" : - 0.3001683 }, { \"year\" : \"1972\" , \"annualValue\" : 0.1025676 }, { \"year\" : \"1971\" , \"annualValue\" : 0.19541731 }, { \"year\" : \"1970\" , \"annualValue\" : - 0.1831704 }, { \"year\" : \"1969\" , \"annualValue\" : - 0.16133231 }, { \"year\" : \"1968\" , \"annualValue\" : 0.1150183 }, { \"year\" : \"1967\" , \"annualValue\" : 0.5074166 }, { \"year\" : \"1966\" , \"annualValue\" : - 0.0137236 }, { \"year\" : \"1965\" , \"annualValue\" : 0.2515068 }, { \"year\" : \"1964\" , \"annualValue\" : 0.100048 }, { \"year\" : \"1963\" , \"annualValue\" : 0.1902171 }, { \"year\" : \"1962\" , \"annualValue\" : - 0.2464827 }, { \"year\" : \"1961\" , \"annualValue\" : 0.35685748 }, { \"year\" : \"1960\" , \"annualValue\" : 0.0359799 }, { \"year\" : \"1959\" , \"annualValue\" : 0.1342513 }, { \"year\" : \"1958\" , \"annualValue\" : 0.47772512 }, { \"year\" : \"1957\" , \"annualValue\" : - 0.17027621 }, { \"year\" : \"1956\" , \"annualValue\" : 0.0318841 }, { \"year\" : \"1955\" , \"annualValue\" : 0.1480865 }, { \"year\" : \"1954\" , \"annualValue\" : 0.2599581 }, { \"year\" : \"1953\" , \"annualValue\" : - 0.0041754004 }, { \"year\" : \"1952\" , \"annualValue\" : 0.098623894 }, { \"year\" : \"1951\" , \"annualValue\" : 0.0927318 }, { \"year\" : \"1950\" , \"annualValue\" : 0.1735294 }, { \"year\" : \"1949\" , \"annualValue\" : 0.09324761 }, { \"year\" : \"1948\" , \"annualValue\" : - 0.0220126 }, { \"year\" : \"1947\" , \"annualValue\" : - 0.0154799 } ] }, \"pastQuarterlyReturns\" : { \"returns\" : [{ \"year\" : \"2020\" , \"q1\" : - 0.23689881 , \"q2\" : 0.3189087 }, { \"year\" : \"2019\" , \"q1\" : 0.2161895 , \"q2\" : 0.051136397 , \"q3\" : - 0.0162162 , \"q4\" : 0.13173899 }, { \"year\" : \"2018\" , \"q1\" : 0.0388619 , \"q2\" : 0.0394122 , \"q3\" : 0.0745501 , \"q4\" : - 0.23071171 }, { \"year\" : \"2017\" , \"q1\" : 0.0800628 , \"q2\" : 0.0363372 , \"q3\" : 0.0406732 , \"q4\" : 0.0696838 }, { \"year\" : \"2016\" , \"q1\" : - 0.0721992 , \"q2\" : 0.029517 , \"q3\" : 0.0834057 , \"q4\" : 0.026420701 }, { \"year\" : \"2015\" , \"q1\" : 0.0832127 , \"q2\" : 0.012692099 , \"q3\" : - 0.14182061 , \"q4\" : 0.0483423 }, { \"year\" : \"2014\" , \"q1\" : 0.0207636 , \"q2\" : - 0.0013123 , \"q3\" : - 0.022339001 , \"q4\" : 0.0864499 }, { \"year\" : \"2013\" , \"q1\" : 0.1510549 , \"q2\" : 0.043255102 , \"q3\" : 0.0843289 , \"q4\" : 0.1119194 }, { \"year\" : \"2012\" , \"q1\" : 0.114889696 , \"q2\" : - 0.049464103 , \"q3\" : 0.0633131 , \"q4\" : 0.015890501 }, { \"year\" : \"2011\" , \"q1\" : 0.0738151 , \"q2\" : 0.0028944002 , \"q3\" : - 0.2590188 , \"q4\" : 0.1571717 }, { \"year\" : \"2010\" , \"q1\" : 0.0960396 , \"q2\" : - 0.089430906 , \"q3\" : 0.140873 , \"q4\" : 0.1565525 }, { \"year\" : \"2009\" , \"q1\" : - 0.0790569 , \"q2\" : 0.1957831 , \"q3\" : 0.1876574 , \"q4\" : 0.0710498 }, { \"year\" : \"2008\" , \"q1\" : - 0.1254996 , \"q2\" : 0.0585009 , \"q3\" : - 0.1200345 , \"q4\" : - 0.2684955 }, { \"year\" : \"2007\" , \"q1\" : 0.0392465 , \"q2\" : 0.0422961 , \"q3\" : 0.026087001 , \"q4\" : 0.0224132 }, { \"year\" : \"2006\" , \"q1\" : 0.15329629 , \"q2\" : - 0.0716253 , \"q3\" : - 0.0333828 , \"q4\" : 0.071273 }, { \"year\" : \"2005\" , \"q1\" : - 0.0541796 , \"q2\" : 0.0515548 , \"q3\" : 0.0529183 , \"q4\" : 0.0088167 }, { \"year\" : \"2004\" , \"q1\" : 0.0857605 , \"q2\" : - 0.009687 , \"q3\" : - 0.0579383 , \"q4\" : 0.0972977 }, { \"year\" : \"2003\" , \"q1\" : - 0.029205598 , \"q2\" : 0.2154031 , \"q3\" : 0.0910891 , \"q4\" : 0.1215971 }, { \"year\" : \"2002\" , \"q1\" : 0.0289449 , \"q2\" : - 0.0825771 , \"q3\" : - 0.18397631 , \"q4\" : 0.0375758 }, { \"year\" : \"2001\" , \"q1\" : - 0.1203438 , \"q2\" : 0.1921824 , \"q3\" : - 0.1575592 , \"q4\" : 0.15783781 } ] }, \"rankInCategory\" : { \"ytd\" : 43 , \"oneMonth\" : 68 , \"threeMonth\" : 48 , \"oneYear\" : 23 , \"threeYear\" : 36 , \"fiveYear\" : 46 }, \"riskOverviewStatistics\" : { \"riskRating\" : 4 , \"riskStatistics\" : [{ \"year\" : \"5y\" , \"alpha\" : - 3.56 , \"beta\" : 1.27 , \"meanAnnualReturn\" : 0.88 , \"rSquared\" : 85.23 , \"stdDev\" : 20.38 , \"sharpeRatio\" : 0.46 , \"treynorRatio\" : 5.97 }, { \"year\" : \"3y\" , \"alpha\" : 0 , \"beta\" : 1.28 , \"meanAnnualReturn\" : 1.21 , \"rSquared\" : 89.76 , \"stdDev\" : 22.94 , \"sharpeRatio\" : 0.56 , \"treynorRatio\" : 8.42 }, { \"year\" : \"10y\" , \"alpha\" : - 3.2 , \"beta\" : 1.3 , \"meanAnnualReturn\" : 1.24 , \"rSquared\" : 82.18 , \"stdDev\" : 19.24 , \"sharpeRatio\" : 0.74 , \"treynorRatio\" : 10.17 } ] }, \"riskOverviewStatisticsCat\" : { \"riskStatisticsCat\" : [{ \"year\" : \"5y\" , \"alpha\" : - 0.035099998 , \"beta\" : 0.012200001 , \"meanAnnualReturn\" : 0.0084 , \"rSquared\" : 0.78370005 , \"stdDev\" : 0.2039 , \"sharpeRatio\" : 0.0044 , \"treynorRatio\" : 0.059 }, { \"year\" : \"3y\" , \"alpha\" : - 0.0187 , \"beta\" : 0.0124 , \"meanAnnualReturn\" : 0.010199999 , \"rSquared\" : 0.8205 , \"stdDev\" : 0.2327 , \"sharpeRatio\" : 0.0045 , \"treynorRatio\" : 0.0686 }, { \"year\" : \"10y\" , \"alpha\" : - 0.0294 , \"beta\" : 0.0121 , \"meanAnnualReturn\" : 0.0116 , \"rSquared\" : 0.7644 , \"stdDev\" : 0.1864 , \"sharpeRatio\" : 0.0072000003 , \"treynorRatio\" : 0.102299996 } ] } } }","title":"fund_performance"},{"location":"guide/ticker/modules/#fund_profile","text":"Details Description : Summary level information for a given symbol(s) Module : fundProfile Return : dict Warning This endpoint will only return data for specific securities (funds and etfs) Example fund = Ticker ( 'hasgx' ) fund . fund_profile Data { \"hasgx\" : { \"maxAge\" : 1 , \"styleBoxUrl\" : \"http://us.i1.yimg.com/us.yimg.com/i/fi/3_0stylelargeeq6.gif\" , \"family\" : \"Harbor\" , \"categoryName\" : \"Small Growth\" , \"legalType\" : null , \"managementInfo\" : { \"managerName\" : \"William A. Muggia\" , \"managerBio\" : \"Will joined Westfield Capital Management in April 1994. In addition to his executive duties, he chairs the Investment Committee, serves as Market Strategist and contributes investment ideas primarily within the Health Care and Energy sectors. \\n\\n In 2001, Will was promoted to President and Chief Investment Officer and now oversees all of Westfield's US equity and hedge fund strategies. In this role, Will and his team have grown the firm from $2 billion to $13 billion in assets under management. \\n\\n Prior to joining Westfield, Will worked in the Technology Investment Banking Group at Alex Brown & Sons, where his responsibilities included mergers and acquisitions, restructuring, and spin-offs. Before that, he was a Vice President at Kidder, Peabody & Company. \\n\\n Will graduated from Middlebury College in 1983 and received a Masters in Business Administration from the Harvard Business School in 1992. \\n\\n Will and his family are very active in community service, focusing their efforts on education for underprivileged youth. He is a member of the Board of Directors of SquashBusters and the Advisory Board of The Base.\" , \"startdate\" : 973036800 }, \"feesExpensesInvestment\" : { \"annualReportExpenseRatio\" : 0.0088 , \"netExpRatio\" : 0.0088 , \"grossExpRatio\" : 0.0088 , \"projectionValues\" : { \"5y\" : 488 , \"3y\" : 281 , \"10y\" : 1084 } }, \"feesExpensesInvestmentCat\" : { \"annualReportExpenseRatio\" : 0.012200001 , \"frontEndSalesLoad\" : 0.0541 , \"deferredSalesLoad\" : 0.013200001 , \"projectionValuesCat\" : { \"5y\" : 815.16 , \"3y\" : 503.94 , \"10y\" : 1700.96 } }, \"initInvestment\" : 50000 , \"initIraInvestment\" : 500 , \"subseqInvestment\" : 0 , \"brokerages\" : [ \"TradeStation Securities\" , \"Northwestern Mutual Inv Srvc, LLC\" , \"Cetera Advisors LLC\" , \"Cetera Advisor Networks LLC\" , \"Pruco Securities, LLC\" , \"Protected Investors of America\" , \"Comerica Bank\" , \"Mid Atlantic Capital Corp\" , \"Morgan Stanley - Brokerage Accounts\" , \"Pershing FundCenter\" , \"Schwab Institutional\" , \"Td Ameritrade, Inc.\" , \"TD Ameritrade Institutional Services\" , \"Scottrade Load\" , \"Shareholders Services Group\" , \"JPMorgan\" , \"Merrill Lynch\" , \"Vanguard\" , \"TD Ameritrade Trust Company\" , \"CommonWealth PPS\" , \"LPL SAM Eligible\" , \"Fidelity Retail FundsNetwork\" , \"Fidelity Institutional FundsNetwork\" , \"Schwab Retail\" , \"DATALynx\" , \"PruChoice Investments\" , \"Ameriprise Brokerage\" , \"Federated TrustConnect\" , \"Cetera Advisors LLC- PAM, PRIME, Premier\" , \"Cetera Advisor Networks LLC- PAM, PRIME, Premier\" , \"Schwab RPS SDE\" , \"Ameriprise SPS Advantage\" , \"SunAmerica Securities Premier / Pinnacle\" , \"ETrade No Load Fee\" , \"SunGard Transaction Network\" , \"Raymond James\" , \"Raymond James WRAP Eligible\" , \"Bear Stearns No-Load Transaction Fee\" , \"Commonwealth Universe\" , \"FTJ FundChoice\" , \"Robert W. Baird & Co.\" , \"TRUSTlynx\" , \"JPMorgan INVEST\" , \"WFA MF Advisory Updated 7/01/2020\" , \"RBC Wealth Management-Network Eligible\" , \"DailyAccess Corporation RTC\" , \"DailyAccess Corporation FRIAG\" , \"WR Hambrecht Co LLC\" , \"Sterne, Agee & Leach, Inc.,\" , \"Schwab RPS All\" , \"ING Financial Ptnrs PAM and PRIME Approv\" , \"Firstrade\" , \"Scottrade TF\" , \"Scottrade NTF\" , \"Standard Retirement Services, Inc.\" , \"TIAA-CREF Brokerage Services\" , \"Thrivent Advisory Eligible\" , \"Matrix Financial Solutions\" , \"Trade PMR Transaction Fee\" , \"Trade PMR NTF\" , \"Morgan Stanley - Ntwk/Rdm Only-Brokerage\" , \"TD Ameritrade Retail\" , \"TD Ameritrade Institutional\" , \"NYLIM 401(k) Complete\" , \"Met Life Resources MFSP Alliance List\" , \"Mid Atlantic Capital Group\" , \"HD Vest - Vest Advisor\" , \"Securities America Advisors\" , \"Bear Stearns\" , \"Securities America Advisors Top Rated\" , \"JP MORGAN NO-LOAD NTF\" , \"JP MORGAN NO-LOAD TRANSACTION FEE\" , \"TD Ameritrade Retail NTF\" , \"TD Ameritrade Institutional NTF\" , \"MSWM Brokerage\" , \"WFA Fdntl Choice/PIM Updated 7/01/2020\" , \"ADP Access Open Fund Architecture\" , \"DailyAccess Corporation Mid-Atlantic\" , \"Waddell & Reed Choice MAP Flex\" , \"ING Financial Partners Inc.\" , \"Vanguard Load\" , \"Jiangsu Akcome Science & Technology Co Ltd\" , \"Vanguard TF\" , \"DailyAccess Corporation Matrix\" , \"DailyAccess Corporation Schwab\" , \"DailyAccess Corporation MATC\" , \"Cetera Financial Specialists LLC- Premier\" , \"LPL SWM\" , \"Schwab All (Retail, Instl, Retirement)\" , \"Schwab Existing Shareholders Only\" , \"Pershing Retirement Plan Network\" , \"HD Vest\" , \"Commonwealth (NTF)\" , \"Commonwealth (PPS/Advisory)\" ] } }","title":"fund_profile"},{"location":"guide/ticker/modules/#fund_sector_weightings","text":"Details Description : Retrieves aggregated sector weightings for a given symbol(s) Module : topHoldings Return : pandas.DataFrame Info This is a subset of the data returned from the topHoldings module Warning This endpoint will only return data for specific securities (funds and etfs) Example funds = Ticker ( 'hasgx dodgx cipnx' ) funds . fund_sector_weightings Data sector hasgx dodgx cipnx 0 realestate 0.0299 0 0 1 consumer_cyclical 0.1053 0.0325 0.0377 2 basic_materials 0 0.0083 0.0497 3 consumer_defensive 0.0073 0.0113 0.1815 4 technology 0.2431 0.1928 0.2064 5 communication_services 0.0312 0.1311 0.0188 6 financial_services 0.0889 0.2629 0.1424 7 utilities 0 0 0 8 industrials 0.1701 0.0616 0.1368 9 energy 0.031 0.0656 0 10 healthcare 0.2933 0.2339 0.2267","title":"fund_sector_weightings"},{"location":"guide/ticker/modules/#fund_top_holdings","text":"Details Description : Retrieves Top 10 holdings for a given symbol(s) Module : topHoldings Return : pandas.DataFrame Info This is a subset of the data returned from the topHoldings module Warning This endpoint will only return data for specific securities (funds and etfs) Example fund = Ticker ( 'hasgx' ) fund . fund_top_holdings Data symbol holdingName holdingPercent ('hasgx', 0) ICLR Icon PLC 0.0282 ('hasgx', 1) BIO Bio-Rad Laboratories Inc 0.0276 ('hasgx', 2) BLD TopBuild Corp 0.0238 ('hasgx', 3) ASND Ascendis Pharma A/S ADR 0.0228 ('hasgx', 4) TREX Trex Co Inc 0.0219 ('hasgx', 5) TKR The Timken Co 0.0215 ('hasgx', 6) MIME Mimecast Ltd 0.0203 ('hasgx', 7) TDY Teledyne Technologies Inc 0.0198 ('hasgx', 8) ERI Eldorado Resorts Inc 0.0196 ('hasgx', 9) The Medicines Co 0.0194","title":"fund_top_holdings"},{"location":"guide/ticker/modules/#grading_history","text":"Details Description : Data related to upgrades / downgrades by companies for a given symbol(s) Module : upgradeDowngradeHistory Return : pandas.DataFrame Example aapl = Ticker ( 'aapl' ) df = aapl . grading_history df . head () Data symbol row epochGradeDate firm toGrade fromGrade action 0 aapl 0 2020-07-29 08:37:18 Credit Suisse Neutral main 1 aapl 1 2020-07-15 04:22:07 Needham Buy main 2 aapl 2 2020-07-13 06:32:14 Morgan Stanley Overweight main 3 aapl 3 2020-07-13 05:47:09 Wedbush Outperform main 4 aapl 4 2020-07-07 09:04:24 Cascend Buy main","title":"grading_history"},{"location":"guide/ticker/modules/#index_trend","text":"Details Description : Trend data related given symbol(s) index, specificially PE and PEG ratios Module : indexTrend Return : dict Example aapl = Ticker ( 'aapl' ) aapl . index_trend Data { \"aapl\" : { \"maxAge\" : 1 , \"symbol\" : \"SP5\" , \"peRatio\" : 39.5608 , \"pegRatio\" : 5.59807 , \"estimates\" : [{ \"period\" : \"0q\" , \"growth\" : - 0.313 }, { \"period\" : \"+1q\" , \"growth\" : - 0.012999999 }, { \"period\" : \"0y\" , \"growth\" : - 0.199 }, { \"period\" : \"+1y\" , \"growth\" : 0.301 }, { \"period\" : \"+5y\" , \"growth\" : 0.0406009 }, { \"period\" : \"-5y\" } ] } }","title":"index_trend"},{"location":"guide/ticker/modules/#industry_trend","text":"Details Warning Appears to no longer be in use Example aapl = Ticker ( 'aapl' ) aapl . industry_trend","title":"industry_trend"},{"location":"guide/ticker/modules/#insider_holders","text":"Details Description : Data related to stock holdings of a given symbol(s) insiders Module : insiderHolders Return : pandas.DataFrame Example aapl = Ticker ( 'aapl' ) aapl . insider_holders Data symbol row maxAge name relation url transactionDescription latestTransDate positionDirect positionDirectDate positionIndirect positionIndirectDate 0 aapl 0 1 BELL JAMES A Director Conversion of Exercise of derivative security 2020-01-31 7716 2020-01-31 nan nan 1 aapl 1 1 GORE ALBERT A JR Director Conversion of Exercise of derivative security 2020-01-31 115014 2020-01-31 nan nan 2 aapl 2 1 JUNG ANDREA Director Conversion of Exercise of derivative security 2020-04-28 nan nan 33548 1.58803e+09 3 aapl 3 1 KONDO CHRISTOPHER Officer Sale 2020-05-08 7370 2020-05-08 nan nan 4 aapl 4 1 LEVINSON ARTHUR D Director Sale 2020-02-03 1.14728e+06 2020-02-03 nan nan 5 aapl 5 1 MAESTRI LUCA Chief Financial Officer Sale 2020-04-07 27568 2020-04-07 nan nan 6 aapl 6 1 O'BRIEN DEIRDRE Officer Sale 2020-04-16 33972 2020-04-16 nan nan 7 aapl 7 1 SUGAR RONALD D Director Conversion of Exercise of derivative security 2020-01-31 24714 2020-01-31 nan nan 8 aapl 8 1 WAGNER SUSAN L Director Conversion of Exercise of derivative security 2020-01-31 14809 2020-01-31 nan nan 9 aapl 9 1 WILLIAMS JEFFREY E Chief Operating Officer Sale 2020-04-02 122315 2020-04-02 nan nan","title":"insider_holders"},{"location":"guide/ticker/modules/#insider_transactions","text":"Details Description : Transactions by insiders for a given symbol(s) Module : insiderTransactions Return : pandas.DataFrame Example aapl = Ticker ( 'aapl' ) df = aapl . insider_transactions df . head () Data symbol row maxAge shares value filerUrl transactionText filerName filerRelation moneyText startDate ownership 0 aapl 0 1 4491 1.37254e+06 Sale at price 305.62 per share. KONDO CHRISTOPHER Officer 2020-05-08 D 1 aapl 1 1 9590 469389 Conversion of Exercise of derivative security at price 48.95 per share. JUNG ANDREA Director 2020-04-28 I 2 aapl 2 1 9137 2.60514e+06 Sale at price 283.82 - 286.82 per share. O'BRIEN DEIRDRE Officer 2020-04-16 D 3 aapl 3 1 5916 nan KONDO CHRISTOPHER Officer 2020-04-15 D 4 aapl 4 1 16634 nan O'BRIEN DEIRDRE Officer 2020-04-15 D","title":"insider_transactions"},{"location":"guide/ticker/modules/#institution_ownership","text":"Details Description : Top 10 owners of a given symbol(s) Module : intitutionOwnership Return : pandas.DataFrame Example aapl = Ticker ( 'aapl' ) aapl . institution_ownership Data symbol row maxAge reportDate organization pctHeld position value 0 aapl 0 1 2020-03-31 Vanguard Group, Inc. (The) 0.0777 336728608 85626717728 1 aapl 1 1 2020-03-31 Blackrock Inc. 0.0634 274684501 69849521759 2 aapl 2 1 2020-03-31 Berkshire Hathaway, Inc 0.0566 245155566 62340608878 3 aapl 3 1 2020-03-31 State Street Corporation 0.0417 180558954 45914336412 4 aapl 4 1 2020-03-31 Advisor Group, Inc. 0.0269 116768396 29693035418 5 aapl 5 1 2020-03-31 FMR, LLC 0.0215 93376233 23744642289 6 aapl 6 1 2020-03-31 Geode Capital Management, LLC 0.0148 64178586 16319972633 7 aapl 7 1 2020-03-31 Price (T.Rowe) Associates Inc 0.013 56203762 14292054638 8 aapl 8 1 2020-03-31 Northern Trust Corporation 0.0124 53859611 13695960481 9 aapl 9 1 2019-12-31 Norges Bank Investment Management 0.0108 46856273 13759344566","title":"institution_ownership"},{"location":"guide/ticker/modules/#key_stats","text":"Details Description : KPIs for given symbol(s) (PE, enterprise value, EPS, EBITA, and more) Module : defaultKeyStatistics Return : dict Example aapl = Ticker ( 'aapl' ) aapl . key_stats Data { \"aapl\" : { \"maxAge\" : 1 , \"priceHint\" : 2 , \"enterpriseValue\" : 1672450801664 , \"forwardPE\" : 25.70207 , \"profitMargins\" : 0.21350001 , \"floatShares\" : 4329740605 , \"sharesOutstanding\" : 4334329856 , \"sharesShort\" : 35234606 , \"sharesShortPriorMonth\" : 34828293 , \"sharesShortPreviousMonthDate\" : \"2020-06-15 00:00:00\" , \"dateShortInterest\" : \"2020-07-15 00:00:00\" , \"sharesPercentSharesOut\" : 0.0081 , \"heldPercentInsiders\" : 0.00066 , \"heldPercentInstitutions\" : 0.62115 , \"shortRatio\" : 0.96 , \"shortPercentOfFloat\" : 0.0081 , \"beta\" : 1.182072 , \"category\" : null , \"bookValue\" : 18.137 , \"priceToBook\" : 21.214094 , \"fundFamily\" : null , \"legalType\" : null , \"lastFiscalYearEnd\" : \"2019-09-28 00:00:00\" , \"nextFiscalYearEnd\" : \"2021-09-28 00:00:00\" , \"mostRecentQuarter\" : \"2020-03-28 00:00:00\" , \"earningsQuarterlyGrowth\" : - 0.027 , \"netIncomeToCommon\" : 57215000576 , \"trailingEps\" : 12.728 , \"forwardEps\" : 14.97 , \"pegRatio\" : 2.78 , \"lastSplitFactor\" : \"7:1\" , \"lastSplitDate\" : \"2014-06-09 00:00:00\" , \"enterpriseToRevenue\" : 6.241 , \"enterpriseToEbitda\" : 21.634 , \"52WeekChange\" : 0.8239218 , \"SandP52WeekChange\" : 0.103224516 } }","title":"key_stats"},{"location":"guide/ticker/modules/#major_holders","text":"Details Description : Data showing breakdown of owners of given symbol(s), insiders, institutions, etc. Module : majorHoldersBreakdown Return : dict Example aapl = Ticker ( 'aapl' ) aapl . major_holders Data { \"maxAge\" : 1 , \"insidersPercentHeld\" : 0.00066 , \"institutionsPercentHeld\" : 0.62115 , \"institutionsFloatPercentHeld\" : 0.62156 , \"institutionsCount\" : 4296 }","title":"major_holders"},{"location":"guide/ticker/modules/#page_views","text":"Details Description : Short, Mid, and Long-term trend data regarding a symbol(s) page views Module : pageViews Return : dict Example aapl = Ticker ( 'aapl' ) aapl . page_views Data { 'aapl' : { 'shortTermTrend' : 'UP' , 'midTermTrend' : 'UP' , 'longTermTrend' : 'UP' , 'maxAge' : 1 } }","title":"page_views"},{"location":"guide/ticker/modules/#price","text":"Details Description : Detailed pricing data for given symbol(s), exchange, quote type, currency, market cap, pre / post market data, etc. Module : price Return : dict Example aapl = Ticker ( 'aapl' ) aapl . price Data { \"aapl\" : { \"maxAge\" : 1 , \"preMarketChangePercent\" : - 0.0090225 , \"preMarketChange\" : - 3.42999 , \"preMarketTime\" : \"2020-07-30 13:29:59\" , \"preMarketPrice\" : 376.73 , \"preMarketSource\" : \"FREE_REALTIME\" , \"postMarketChangePercent\" : 0.05447549 , \"postMarketChange\" : 20.959991 , \"postMarketTime\" : 1596144518 , \"postMarketPrice\" : 405.72 , \"postMarketSource\" : \"DELAYED\" , \"regularMarketChangePercent\" : 0.012100184 , \"regularMarketChange\" : 4.600006 , \"regularMarketTime\" : \"2020-07-30 20:00:01\" , \"priceHint\" : 2 , \"regularMarketPrice\" : 384.76 , \"regularMarketDayHigh\" : 385.19 , \"regularMarketDayLow\" : 375.07 , \"regularMarketVolume\" : 30622619 , \"regularMarketPreviousClose\" : 380.16 , \"regularMarketSource\" : \"FREE_REALTIME\" , \"regularMarketOpen\" : 376.75 , \"exchange\" : \"NMS\" , \"exchangeName\" : \"NasdaqGS\" , \"exchangeDataDelayedBy\" : 0 , \"marketState\" : \"POST\" , \"quoteType\" : \"EQUITY\" , \"symbol\" : \"AAPL\" , \"underlyingSymbol\" : null , \"shortName\" : \"Apple Inc.\" , \"longName\" : \"Apple Inc.\" , \"currency\" : \"USD\" , \"quoteSourceName\" : \"Delayed Quote\" , \"currencySymbol\" : \"$\" , \"fromCurrency\" : null , \"toCurrency\" : null , \"lastMarket\" : null , \"marketCap\" : 1667676766208 } }","title":"price"},{"location":"guide/ticker/modules/#quote_type","text":"Details Description : Stock exchange specific data for given symbol(s) Module : quoteType Return : dict Example aapl = Ticker ( 'aapl' ) aapl . quote_type Data { \"aapl\" : { \"exchange\" : \"NMS\" , \"quoteType\" : \"EQUITY\" , \"symbol\" : \"AAPL\" , \"underlyingSymbol\" : \"AAPL\" , \"shortName\" : \"Apple Inc.\" , \"longName\" : \"Apple Inc.\" , \"firstTradeDateEpochUtc\" : \"1980-12-12 14:30:00\" , \"timeZoneFullName\" : \"America/New_York\" , \"timeZoneShortName\" : \"EDT\" , \"uuid\" : \"8b10e4ae-9eeb-3684-921a-9ab27e4d87aa\" , \"messageBoardId\" : \"finmb_24937\" , \"gmtOffSetMilliseconds\" : - 14400000 , \"maxAge\" : 1 } }","title":"quote_type"},{"location":"guide/ticker/modules/#recommendation_trend","text":"Details Description : Data related to historical recommendations (buy, hold, sell) for a given symbol(s) Module : recommendationTrend Return : pandas.DataFrame Example aapl = Ticker ( 'aapl' ) aapl . recommendation_trend Data period strongBuy buy hold sell strongSell ('aapl', 0) 0m 11 21 6 0 0 ('aapl', 1) -1m 12 17 8 2 0 ('aapl', 2) -2m 12 17 7 3 0 ('aapl', 3) -3m 13 10 18 3 0","title":"recommendation_trend"},{"location":"guide/ticker/modules/#sec_filings","text":"Details Description : Historical SEC filings for a given symbol(s) Module : secFilings Return : pandas.DataFrame Example Example aapl = Ticker ( 'aapl' ) df = aapl . sec_filings df . head () Data date epochDate type title edgarUrl maxAge ('aapl', 0) 2020-05-11 2020-05-11 14:32:39 8-K Disclosing Other Events, Financial Statements and Exhibits https://yahoo.brand.edgar-online.com/DisplayFiling.aspx?TabIndex=2&dcn=0001193125-20-139112&nav=1&src=Yahoo 1 ('aapl', 1) 2020-05-01 2020-05-01 04:45:45 10-Q Quarterly Report https://yahoo.brand.edgar-online.com/DisplayFiling.aspx?TabIndex=2&dcn=0000320193-20-000052&nav=1&src=Yahoo 1 ('aapl', 2) 2020-04-30 2020-04-30 14:33:15 8-K Disclosing Results of Operations and Financial Condition, Financial Statements and Exhibits https://yahoo.brand.edgar-online.com/DisplayFiling.aspx?TabIndex=2&dcn=0000320193-20-000050&nav=1&src=Yahoo 1 ('aapl', 3) 2020-02-18 2020-02-18 04:35:28 8-K Disclosing Regulation FD Disclosure, Financial Statements and Exhibits https://yahoo.brand.edgar-online.com/DisplayFiling.aspx?TabIndex=2&dcn=0001193125-20-039203&nav=1&src=Yahoo 1 ('aapl', 4) 2020-01-29 2020-01-29 04:07:08 10-Q Quarterly Report https://yahoo.brand.edgar-online.com/DisplayFiling.aspx?TabIndex=2&dcn=0000320193-20-000010&nav=1&src=Yahoo 1","title":"sec_filings"},{"location":"guide/ticker/modules/#share_purchase_activity","text":"Details Description : High-level buy / sell data for given symbol(s) insiders Module : netSharePurchaseActivity Return : dict Example aapl = Ticker ( 'aapl' ) aapl . share_purchase_activity Data { \"aapl\" : { \"maxAge\" : 1 , \"period\" : \"6m\" , \"buyInfoCount\" : 11 , \"buyInfoShares\" : 212070 , \"buyPercentInsiderShares\" : 0.077 , \"sellInfoCount\" : 5 , \"sellInfoShares\" : 97181 , \"sellPercentInsiderShares\" : 0.035 , \"netInfoCount\" : 16 , \"netInfoShares\" : 114889 , \"netPercentInsiderShares\" : 0.042 , \"totalInsiderShares\" : 2860661 } }","title":"share_purchase_activity"},{"location":"guide/ticker/modules/#summary_detail","text":"Details Description : Contains information available via the Summary tab in Yahoo Finance for given symbol(s) Module : summaryDetail Return : dict Example aapl = Ticker ( 'aapl' ) aapl . summary_detail Data { \"aapl\" : { \"maxAge\" : 1 , \"priceHint\" : 2 , \"previousClose\" : 380.16 , \"open\" : 376.75 , \"dayLow\" : 375.07 , \"dayHigh\" : 385.19 , \"regularMarketPreviousClose\" : 380.16 , \"regularMarketOpen\" : 376.75 , \"regularMarketDayLow\" : 375.07 , \"regularMarketDayHigh\" : 385.19 , \"dividendRate\" : 3.28 , \"dividendYield\" : 0.0086 , \"exDividendDate\" : \"2020-05-08 00:00:00\" , \"payoutRatio\" : 0.2408 , \"fiveYearAvgDividendYield\" : 1.57 , \"beta\" : 1.182072 , \"trailingPE\" : 30.229418 , \"forwardPE\" : 25.70207 , \"volume\" : 30622619 , \"regularMarketVolume\" : 30622619 , \"averageVolume\" : 34597506 , \"averageVolume10days\" : 30632812 , \"averageDailyVolume10Day\" : 30632812 , \"bid\" : 384.92 , \"ask\" : 384.99 , \"bidSize\" : 800 , \"askSize\" : 1100 , \"marketCap\" : 1667676766208 , \"fiftyTwoWeekLow\" : 192.58 , \"fiftyTwoWeekHigh\" : 399.82 , \"priceToSalesTrailing12Months\" : 6.223116 , \"fiftyDayAverage\" : 368.7483 , \"twoHundredDayAverage\" : 313.38132 , \"trailingAnnualDividendRate\" : 3.08 , \"trailingAnnualDividendYield\" : 0.008101852 , \"currency\" : \"USD\" , \"fromCurrency\" : null , \"toCurrency\" : null , \"lastMarket\" : null , \"algorithm\" : null , \"tradeable\" : false } }","title":"summary_detail"},{"location":"guide/ticker/modules/#summary_profile","text":"Details Description : Data related to given symbol(s) location and business summary Module : summaryProfile Return : dict Example aapl = Ticker ( 'aapl' ) aapl . summary_profile Data { \"aapl\" : { \"address1\" : \"One Apple Park Way\" , \"city\" : \"Cupertino\" , \"state\" : \"CA\" , \"zip\" : \"95014\" , \"country\" : \"United States\" , \"phone\" : \"408-996-1010\" , \"website\" : \"http://www.apple.com\" , \"industry\" : \"Consumer Electronics\" , \"sector\" : \"Technology\" , \"longBusinessSummary\" : \"Apple Inc. designs, manufactures, and markets smartphones, personal computers, tablets, wearables, and accessories worldwide. It also sells various related services. The company offers iPhone, a line of smartphones; Mac, a line of personal computers; iPad, a line of multi-purpose tablets; and wearables, home, and accessories comprising AirPods, Apple TV, Apple Watch, Beats products, HomePod, iPod touch, and other Apple-branded and third-party accessories. It also provides digital content stores and streaming services; AppleCare support services; and iCloud, a cloud service, which stores music, photos, contacts, calendars, mail, documents, and others. In addition, the company offers various service, such as Apple Arcade, a game subscription service; Apple Card, a co-branded credit card; Apple News+, a subscription news and magazine service; and Apple Pay, a cashless payment service, as well as licenses its intellectual property, and provides other related services. The company serves consumers, and small and mid-sized businesses; and the education, enterprise, and government markets. It sells and delivers third-party applications for its products through the App Store, Mac App Store, and Watch App Store. The company also sells its products through its retail and online stores, and direct sales force; and third-party cellular network carriers, wholesalers, retailers, and resellers. Apple Inc. has a collaboration with Google to develop COVID-19 tracking system for Android and iOS devices. Apple Inc. was founded in 1977 and is headquartered in Cupertino, California.\" , \"fullTimeEmployees\" : 137000 , \"companyOfficers\" : [], \"maxAge\" : 86400 } }","title":"summary_profile"},{"location":"guide/ticker/modules/#multiple-modules","text":"","title":"Multiple Modules"},{"location":"guide/ticker/modules/#all_modules","text":"Details Description : Returns all modules from above Return : dict Info Each module will be a key in the dictionary returned Number of Requests The call to all_modules represents only 1 request per symbol Warning Data for symbols external to the United States will be inaccurate for the following modules: cashFlowStatementHistory , cashFlowStatementHistoryQuarterly , incomeStatementHistory , incomeStatementHistoryQuarterly , balanceSheetHistory , balanceSheetHistoryQuarterly . Tip See Financials for a better way to retrieve accurate data Example >>> aapl = Ticker ( 'aapl' ) >>> data = aapl . all_modules >>> data . keys () dict_keys ([ 'aapl' ]) >>> data [ 'aapl' ] . keys () dict_keys ([ 'assetProfile' , 'recommendationTrend' , 'cashflowStatementHistory' , 'indexTrend' , 'defaultKeyStatistics' , 'industryTrend' , 'quoteType' , 'incomeStatementHistory' , 'fundOwnership' , 'summaryDetail' , 'insiderHolders' , 'calendarEvents' , 'upgradeDowngradeHistory' , 'price' , 'balanceSheetHistory' , 'earningsTrend' , 'secFilings' , 'institutionOwnership' , 'majorHoldersBreakdown' , 'balanceSheetHistoryQuarterly' , 'earningsHistory' , 'esgScores' , 'summaryProfile' , 'netSharePurchaseActivity' , 'insiderTransactions' , 'sectorTrend' , 'incomeStatementHistoryQuarterly' , 'cashflowStatementHistoryQuarterly' , 'earnings' , 'pageViews' , 'financialData' ])","title":"all_modules"},{"location":"guide/ticker/modules/#get_modules","text":"Details Description : Obtain specific modules for given symbol(s) Arguments : list or str of desired modules Return : dict Raises : ValueError is raised if invalid module is given View Available Modules [ 'assetProfile' , 'recommendationTrend' , 'cashflowStatementHistory' , 'indexTrend' , 'defaultKeyStatistics' , 'industryTrend' , 'quoteType' , 'incomeStatementHistory' , 'fundOwnership' , 'summaryDetail' , 'insiderHolders' , 'calendarEvents' , 'upgradeDowngradeHistory' , 'price' , 'balanceSheetHistory' , 'earningsTrend' , 'secFilings' , 'institutionOwnership' , 'majorHoldersBreakdown' , 'balanceSheetHistoryQuarterly' , 'earningsHistory' , 'esgScores' , 'summaryProfile' , 'netSharePurchaseActivity' , 'insiderTransactions' , 'sectorTrend' , 'incomeStatementHistoryQuarterly' , 'cashflowStatementHistoryQuarterly' , 'earnings' , 'pageViews' , 'financialData' ] Example aapl = Ticker ( 'aapl' ) modules = 'assetProfile earnings defaultKeyStatistics' aapl . get_modules ( modules ) Data Data { \"aapl\" : { \"assetProfile\" : { \"address1\" : \"One Apple Park Way\" , \"city\" : \"Cupertino\" , \"state\" : \"CA\" , \"zip\" : \"95014\" , \"country\" : \"United States\" , \"phone\" : \"408-996-1010\" , \"website\" : \"http://www.apple.com\" , \"industry\" : \"Consumer Electronics\" , \"sector\" : \"Technology\" , \"longBusinessSummary\" : \"Apple Inc. designs, manufactures, and markets smartphones, personal computers, tablets, wearables, and accessories worldwide. It also sells various related services. The company offers iPhone, a line of smartphones; Mac, a line of personal computers; iPad, a line of multi-purpose tablets; and wearables, home, and accessories comprising AirPods, Apple TV, Apple Watch, Beats products, HomePod, iPod touch, and other Apple-branded and third-party accessories. It also provides digital content stores and streaming services; AppleCare support services; and iCloud, a cloud service, which stores music, photos, contacts, calendars, mail, documents, and others. In addition, the company offers various service, such as Apple Arcade, a game subscription service; Apple Card, a co-branded credit card; Apple News+, a subscription news and magazine service; and Apple Pay, a cashless payment service, as well as licenses its intellectual property, and provides other related services. The company serves consumers, and small and mid-sized businesses; and the education, enterprise, and government markets. It sells and delivers third-party applications for its products through the App Store, Mac App Store, and Watch App Store. The company also sells its products through its retail and online stores, and direct sales force; and third-party cellular network carriers, wholesalers, retailers, and resellers. Apple Inc. has a collaboration with Google to develop COVID-19 tracking system for Android and iOS devices. Apple Inc. was founded in 1977 and is headquartered in Cupertino, California.\" , \"fullTimeEmployees\" : 137000 , \"companyOfficers\" : [{ \"maxAge\" : 1 , \"name\" : \"Mr. Timothy D. Cook\" , \"age\" : 58 , \"title\" : \"CEO & Director\" , \"yearBorn\" : 1961 , \"fiscalYear\" : 2019 , \"totalPay\" : 11555466 , \"exercisedValue\" : 0 , \"unexercisedValue\" : 0 }, { \"maxAge\" : 1 , \"name\" : \"Mr. Luca Maestri\" , \"age\" : 55 , \"title\" : \"CFO & Sr. VP\" , \"yearBorn\" : 1964 , \"fiscalYear\" : 2019 , \"totalPay\" : 3576221 , \"exercisedValue\" : 0 , \"unexercisedValue\" : 0 }, { \"maxAge\" : 1 , \"name\" : \"Mr. Jeffrey E. Williams\" , \"age\" : 55 , \"title\" : \"Chief Operating Officer\" , \"yearBorn\" : 1964 , \"fiscalYear\" : 2019 , \"totalPay\" : 3574503 , \"exercisedValue\" : 0 , \"unexercisedValue\" : 0 }, { \"maxAge\" : 1 , \"name\" : \"Ms. Katherine L. Adams\" , \"age\" : 55 , \"title\" : \"Sr. VP, Gen. Counsel & Sec.\" , \"yearBorn\" : 1964 , \"fiscalYear\" : 2019 , \"totalPay\" : 3598384 , \"exercisedValue\" : 0 , \"unexercisedValue\" : 0 }, { \"maxAge\" : 1 , \"name\" : \"Ms. Deirdre O'Brien\" , \"age\" : 52 , \"title\" : \"Sr. VP of People & Retail\" , \"yearBorn\" : 1967 , \"fiscalYear\" : 2019 , \"totalPay\" : 2690253 , \"exercisedValue\" : 0 , \"unexercisedValue\" : 0 } ], \"auditRisk\" : 1 , \"boardRisk\" : 1 , \"compensationRisk\" : 3 , \"shareHolderRightsRisk\" : 1 , \"overallRisk\" : 1 , \"governanceEpochDate\" : \"2019-12-07 00:00:00\" , \"compensationAsOfEpochDate\" : \"2019-12-31 00:00:00\" , \"maxAge\" : 86400 }, \"defaultKeyStatistics\" : { \"maxAge\" : 1 , \"priceHint\" : 2 , \"enterpriseValue\" : 1672450801664 , \"forwardPE\" : 25.70207 , \"profitMargins\" : 0.21350001 , \"floatShares\" : 4329740605 , \"sharesOutstanding\" : 4334329856 , \"sharesShort\" : 35234606 , \"sharesShortPriorMonth\" : 34828293 , \"sharesShortPreviousMonthDate\" : \"2020-06-15 00:00:00\" , \"dateShortInterest\" : \"2020-07-15 00:00:00\" , \"sharesPercentSharesOut\" : 0.0081 , \"heldPercentInsiders\" : 0.00066 , \"heldPercentInstitutions\" : 0.62115 , \"shortRatio\" : 0.96 , \"shortPercentOfFloat\" : 0.0081 , \"beta\" : 1.182072 , \"category\" : null , \"bookValue\" : 18.137 , \"priceToBook\" : 21.214094 , \"fundFamily\" : null , \"legalType\" : null , \"lastFiscalYearEnd\" : \"2019-09-28 00:00:00\" , \"nextFiscalYearEnd\" : \"2021-09-28 00:00:00\" , \"mostRecentQuarter\" : \"2020-03-28 00:00:00\" , \"earningsQuarterlyGrowth\" : - 0.027 , \"netIncomeToCommon\" : 57215000576 , \"trailingEps\" : 12.728 , \"forwardEps\" : 14.97 , \"pegRatio\" : 2.78 , \"lastSplitFactor\" : \"7:1\" , \"lastSplitDate\" : \"2014-06-09 00:00:00\" , \"enterpriseToRevenue\" : 6.241 , \"enterpriseToEbitda\" : 21.634 , \"52WeekChange\" : 0.8239218 , \"SandP52WeekChange\" : 0.103224516 }, \"earnings\" : { \"maxAge\" : 86400 , \"earningsChart\" : { \"quarterly\" : [{ \"date\" : \"2Q2019\" , \"actual\" : 2.18 , \"estimate\" : 2.1 }, { \"date\" : \"3Q2019\" , \"actual\" : 3.03 , \"estimate\" : 2.84 }, { \"date\" : \"4Q2019\" , \"actual\" : 4.99 , \"estimate\" : 4.55 }, { \"date\" : \"1Q2020\" , \"actual\" : 2.55 , \"estimate\" : 2.26 } ], \"currentQuarterEstimate\" : 2.04 , \"currentQuarterEstimateDate\" : \"2Q\" , \"currentQuarterEstimateYear\" : 2020 , \"earningsDate\" : [ 1596067200 ] }, \"financialsChart\" : { \"yearly\" : [{ \"date\" : 2016 , \"revenue\" : 215639000000 , \"earnings\" : 45687000000 }, { \"date\" : 2017 , \"revenue\" : 229234000000 , \"earnings\" : 48351000000 }, { \"date\" : 2018 , \"revenue\" : 265595000000 , \"earnings\" : 59531000000 }, { \"date\" : 2019 , \"revenue\" : 260174000000 , \"earnings\" : 55256000000 } ], \"quarterly\" : [{ \"date\" : \"2Q2019\" , \"revenue\" : 53809000000 , \"earnings\" : 10044000000 }, { \"date\" : \"3Q2019\" , \"revenue\" : 64040000000 , \"earnings\" : 13686000000 }, { \"date\" : \"4Q2019\" , \"revenue\" : 91819000000 , \"earnings\" : 22236000000 }, { \"date\" : \"1Q2020\" , \"revenue\" : 58313000000 , \"earnings\" : 11249000000 } ] }, \"financialCurrency\" : \"USD\" } } }","title":"get_modules"},{"location":"guide/ticker/options/","text":"Options \u00b6 option_chain \u00b6 Details Description : View option chain data for all expiration dates for a given symbol(s) Return : pandas.DataFrame Example faang = Ticker ( 'fb aapl amzn nflx goog' ) df = faang . option_chain df . head () Data contractSymbol strike currency lastPrice change percentChange volume openInterest bid ask contractSize lastTradeDate impliedVolatility inTheMoney ('aapl', Timestamp('2020-07-31 00:00:00'), 'calls') AAPL200731C00170000 170 USD 237.49 28.78 13.7895 1 4 239.8 244.1 REGULAR 2020-07-31 13:32:22 9.42383 True ('aapl', Timestamp('2020-07-31 00:00:00'), 'calls') AAPL200731C00175000 175 USD 206.7 0 0 1 1 235.15 239.1 REGULAR 2020-07-30 16:14:43 9.14454 True ('aapl', Timestamp('2020-07-31 00:00:00'), 'calls') AAPL200731C00180000 180 USD 191.6 0 0 0 1 229.8 234 REGULAR 2020-07-23 18:23:16 8.78321 True ('aapl', Timestamp('2020-07-31 00:00:00'), 'calls') AAPL200731C00185000 185 USD 188.38 0 0 1 0 224.9 229.1 REGULAR 2020-07-06 19:30:06 8.60938 True ('aapl', Timestamp('2020-07-31 00:00:00'), 'calls') AAPL200731C00190000 190 USD 173.7 0 0 0 1 178.4 182.9 REGULAR 2020-06-24 13:58:56 1e-05 True Filtering Examples faang = Ticker ( 'fb aapl amzn nflx goog' ) df = faang . option_chain # The dataframe contains a MultiIndex df . index . names FrozenList ([ 'symbol' , 'expiration' , 'optionType' ]) # Get specific expiration date for specified symbol df . loc [ 'aapl' , '2022-07-31' ] # Get specific option type for expiration date for specified symbol df . loc [ 'aapl' , '2022-07-31' , 'calls' ] # Retrieve only calls for all symbols df . xs ( 'calls' , level = 2 ) # Only include Apple in the money options df . loc [ df [ 'inTheMoney' ] == True ] . xs ( 'aapl' )","title":"Options"},{"location":"guide/ticker/options/#options","text":"","title":"Options"},{"location":"guide/ticker/options/#option_chain","text":"Details Description : View option chain data for all expiration dates for a given symbol(s) Return : pandas.DataFrame Example faang = Ticker ( 'fb aapl amzn nflx goog' ) df = faang . option_chain df . head () Data contractSymbol strike currency lastPrice change percentChange volume openInterest bid ask contractSize lastTradeDate impliedVolatility inTheMoney ('aapl', Timestamp('2020-07-31 00:00:00'), 'calls') AAPL200731C00170000 170 USD 237.49 28.78 13.7895 1 4 239.8 244.1 REGULAR 2020-07-31 13:32:22 9.42383 True ('aapl', Timestamp('2020-07-31 00:00:00'), 'calls') AAPL200731C00175000 175 USD 206.7 0 0 1 1 235.15 239.1 REGULAR 2020-07-30 16:14:43 9.14454 True ('aapl', Timestamp('2020-07-31 00:00:00'), 'calls') AAPL200731C00180000 180 USD 191.6 0 0 0 1 229.8 234 REGULAR 2020-07-23 18:23:16 8.78321 True ('aapl', Timestamp('2020-07-31 00:00:00'), 'calls') AAPL200731C00185000 185 USD 188.38 0 0 1 0 224.9 229.1 REGULAR 2020-07-06 19:30:06 8.60938 True ('aapl', Timestamp('2020-07-31 00:00:00'), 'calls') AAPL200731C00190000 190 USD 173.7 0 0 0 1 178.4 182.9 REGULAR 2020-06-24 13:58:56 1e-05 True Filtering Examples faang = Ticker ( 'fb aapl amzn nflx goog' ) df = faang . option_chain # The dataframe contains a MultiIndex df . index . names FrozenList ([ 'symbol' , 'expiration' , 'optionType' ]) # Get specific expiration date for specified symbol df . loc [ 'aapl' , '2022-07-31' ] # Get specific option type for expiration date for specified symbol df . loc [ 'aapl' , '2022-07-31' , 'calls' ] # Retrieve only calls for all symbols df . xs ( 'calls' , level = 2 ) # Only include Apple in the money options df . loc [ df [ 'inTheMoney' ] == True ] . xs ( 'aapl' )","title":"option_chain"},{"location":"guide/ticker/premium/","text":"Financials \u00b6 Individual \u00b6 p_balance_sheet \u00b6 Details Description : Retrieves balance sheet data for given symbol(s) Return : pandas.DataFrame Arguments Argument Type Default Required Options frequency str a optional Annual - a Quarter - q trailing bool True optional True False Example aapl = Ticker ( 'aapl' , username = 'username@yahoo.com' , password = 'password' ) df = aapl . p_balance_sheet () df . head () Data symbol asOfDate periodType AccountsPayable AccountsReceivable AccumulatedDepreciation AdditionalPaidInCapital AllowanceForDoubtfulAccountsReceivable AvailableForSaleSecurities BuildingsAndImprovements CapitalStock CashAndCashEquivalents CashCashEquivalentsAndShortTermInvestments CashEquivalents CashFinancial CommercialPaper CommonStock CommonStockEquity CurrentAccruedExpenses CurrentAssets CurrentDebt CurrentDebtAndCapitalLeaseObligation CurrentDeferredAssets CurrentDeferredLiabilities CurrentDeferredRevenue CurrentDeferredTaxesAssets CurrentLiabilities CurrentNotesPayable FinishedGoods ForeignCurrencyTranslationAdjustments GainsLossesNotAffectingRetainedEarnings Goodwill GoodwillAndOtherIntangibleAssets GrossAccountsReceivable GrossPPE IncomeTaxPayable Inventory InvestedCapital InvestmentinFinancialAssets InvestmentsAndAdvances LandAndImprovements Leases LongTermDebt LongTermDebtAndCapitalLeaseObligation MachineryFurnitureEquipment NetDebt NetPPE NetTangibleAssets NonCurrentDeferredAssets NonCurrentDeferredLiabilities NonCurrentDeferredRevenue NonCurrentDeferredTaxesAssets NonCurrentDeferredTaxesLiabilities NonCurrentPrepaidAssets OrdinarySharesNumber OtherCurrentAssets OtherCurrentBorrowings OtherCurrentLiabilities OtherEquityAdjustments OtherEquityInterest OtherIntangibleAssets OtherNonCurrentAssets OtherNonCurrentLiabilities OtherPayable OtherProperties OtherReceivables OtherShortTermInvestments Payables PayablesAndAccruedExpenses PensionandOtherPostRetirementBenefitPlansCurrent PreferredStock PreferredStockEquity PrepaidAssets Properties RawMaterials Receivables RetainedEarnings ShareIssued StockholdersEquity TangibleBookValue TotalAssets TotalCapitalization TotalDebt TotalEquityGrossMinorityInterest TotalLiabilitiesNetMinorityInterest TotalNonCurrentAssets TotalNonCurrentLiabilitiesNetMinorityInterest TotalTaxPayable TradeandOtherPayablesNonCurrent WorkInProcess WorkingCapital aapl 1985-09-30 00:00:00 12M nan nan -8.52e+07 nan nan nan nan nan 3.37e+08 3.37e+08 nan nan nan nan 5.505e+08 nan 8.221e+08 nan nan nan nan nan nan 2.954e+08 nan nan nan nan nan nan nan 1.756e+08 nan 1.67e+08 5.505e+08 nan nan nan nan nan nan nan nan 9.04e+07 5.505e+08 nan 9.03e+07 nan nan 9.03e+07 nan 3.4636e+09 9.79e+07 nan nan nan 2.302e+08 nan 2.37e+07 nan nan nan nan nan nan nan nan nan nan nan nan nan 2.202e+08 3.203e+08 3.4636e+09 5.505e+08 5.505e+08 9.362e+08 5.505e+08 nan 5.505e+08 3.857e+08 1.141e+08 9.03e+07 nan nan nan 5.267e+08 aapl 1986-09-30 00:00:00 12M nan nan -1.147e+08 nan nan nan nan nan 5.762e+08 5.762e+08 nan nan nan nan 6.941e+08 nan 1.0409e+09 nan nan nan nan nan nan 3.285e+08 nan nan nan nan nan nan nan 2.22e+08 nan 1.087e+08 6.941e+08 nan nan nan nan nan nan nan nan 1.073e+08 6.941e+08 nan 1.375e+08 nan nan 1.375e+08 nan 3.50717e+09 9.29e+07 nan nan nan 2.198e+08 nan 1.19e+07 nan nan nan nan nan nan nan nan nan nan nan nan nan 2.631e+08 4.743e+08 3.50717e+09 6.941e+08 6.941e+08 1.1601e+09 6.941e+08 nan 6.941e+08 4.66e+08 1.192e+08 1.375e+08 nan nan nan 7.124e+08 aapl 1987-09-30 00:00:00 12M nan nan -1.587e+08 nan nan nan nan nan 5.651e+08 5.651e+08 nan nan nan nan 8.365e+08 nan 1.3074e+09 nan nan nan nan nan nan 4.787e+08 nan nan nan nan nan nan nan 2.891e+08 nan 2.258e+08 8.365e+08 nan nan nan nan nan nan nan nan 1.304e+08 8.365e+08 nan 1.628e+08 nan nan 1.628e+08 nan 3.53046e+09 1.109e+08 nan nan nan 2.634e+08 nan 4.01e+07 -100000 nan nan nan nan nan nan nan nan nan nan nan nan 4.056e+08 5.731e+08 3.53046e+09 8.365e+08 8.365e+08 1.4779e+09 8.365e+08 nan 8.365e+08 6.414e+08 1.705e+08 1.627e+08 nan nan nan 8.287e+08 aapl 1988-09-30 00:00:00 12M nan nan -2.13e+08 nan nan nan nan nan 5.457e+08 5.457e+08 nan nan nan nan 1.0034e+09 nan 1.783e+09 1.279e+08 1.279e+08 nan nan nan nan 8.271e+08 nan nan nan nan nan nan nan 4.204e+08 nan 4.615e+08 1.1313e+09 nan nan nan nan nan nan nan nan 2.074e+08 1.0034e+09 nan 2.516e+08 nan nan 2.516e+08 nan 3.4375e+09 1.37e+08 nan 6.992e+08 nan 2.269e+08 nan 9.17e+07 nan nan nan nan nan nan nan nan nan nan nan nan nan 6.388e+08 7.765e+08 3.4375e+09 1.0034e+09 1.0034e+09 2.0821e+09 1.0034e+09 1.279e+08 1.0034e+09 1.0787e+09 2.991e+08 2.516e+08 nan nan nan 9.559e+08 aapl 1989-09-30 00:00:00 12M 3.342e+08 nan -3.091e+08 nan nan nan nan nan 4.383e+08 4.383e+08 nan nan nan nan 1.4857e+09 nan 2.2944e+09 5.68e+07 5.68e+07 nan nan nan nan 8.953e+08 nan nan nan nan nan nan nan 6.433e+08 nan 4.754e+08 1.5425e+09 nan nan nan nan nan nan nan nan 3.342e+08 1.4857e+09 nan 3.629e+08 nan nan 3.629e+08 nan 3.53556e+09 5.879e+08 nan 5.043e+08 nan 3.098e+08 nan 1.153e+08 nan nan nan nan nan 3.342e+08 3.342e+08 nan nan nan nan nan nan 7.928e+08 1.1759e+09 3.53556e+09 1.4857e+09 1.4857e+09 2.7439e+09 1.4857e+09 5.68e+07 1.4857e+09 1.2582e+09 4.495e+08 3.629e+08 nan nan nan 1.3991e+09 p_cash_flow \u00b6 Details Description : Retrieves cash flow data for given symbol(s) Return : pandas.DataFrame Arguments Argument Type Default Required Options frequency str a optional Annual - a Quarter - q trailing bool True optional True False Example aapl = Ticker ( 'aapl' , username = 'username@yahoo.com' , password = 'password' ) df = aapl . p_cash_flow () df . head () Data symbol asOfDate periodType BeginningCashPosition CapitalExpenditure CashDividendsPaid CashFlowFromContinuingFinancingActivities ChangeInAccountPayable ChangeInCashSupplementalAsReported ChangeInInventory ChangeInWorkingCapital ChangesInAccountReceivables CommonStockIssuance DeferredIncomeTax DepreciationAndAmortization EndCashPosition FreeCashFlow InvestingCashFlow NetIncome NetOtherFinancingCharges NetOtherInvestingChanges OperatingCashFlow OtherNonCashItems PurchaseOfBusiness PurchaseOfInvestment RepaymentOfDebt RepurchaseOfCapitalStock SaleOfInvestment StockBasedCompensation aapl 1985-09-30 00:00:00 12M nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan 6.12e+07 nan nan nan nan nan nan nan nan nan nan aapl 1986-09-30 00:00:00 12M nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan 1.54e+08 nan nan nan nan nan nan nan nan nan nan aapl 1987-09-30 00:00:00 12M nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan 2.175e+08 nan nan nan nan nan nan nan nan nan nan aapl 1988-09-30 00:00:00 12M nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan 4.003e+08 nan nan nan nan nan nan nan nan nan nan aapl 1989-09-30 00:00:00 12M 3.724e+08 -2.39e+08 -5.03e+07 -3.83e+07 nan 6.59e+07 -1.39e+07 -1.09e+08 nan 9.6e+07 1.113e+08 1.248e+08 0 2.683e+08 -4.031e+08 4.54e+08 nan 3.32e+07 5.073e+08 100000 nan -9.847e+08 nan -1.29e+07 7.874e+08 nan p_income_statement \u00b6 Details Description : Retrieves income statement data for most recent four quarters or most recent four years as well as trailing 12 months. Return : pandas.DataFrame Arguments Argument Type Default Required Options frequency str a optional Annual - a Quarter - q trailing bool True optional True False Example aapl = Ticker ( 'aapl' , username = 'username@yahoo.com' , password = 'password' ) df = aapl . income_statement () df . head () Data symbol asOfDate periodType BasicAverageShares BasicEPS CostOfRevenue DepreciationAmortizationDepletionIncomeStatement DepreciationAndAmortizationInIncomeStatement DilutedAverageShares DilutedEPS DilutedNIAvailtoComStockholders EBIT EBITDA EarningsFromEquityInterest GainOnSaleOfSecurity GrossProfit InterestExpense InterestExpenseNonOperating InterestIncome InterestIncomeNonOperating NetIncome NetIncomeCommonStockholders NetIncomeContinuousOperations NetIncomeExtraordinary NetIncomeFromContinuingAndDiscontinuedOperation NetIncomeFromContinuingOperationNetMinorityInterest NetIncomeFromTaxLossCarryforward NetIncomeIncludingNoncontrollingInterests NetInterestIncome NetNonOperatingInterestIncomeExpense NormalizedEBITDA NormalizedIncome OperatingExpense OperatingIncome OperatingRevenue OtherIncomeExpense OtherNonOperatingIncomeExpenses OtherOperatingExpenses OtherSpecialCharges PretaxIncome ReconciledCostOfRevenue ReconciledDepreciation ResearchAndDevelopment RestructuringAndMergernAcquisition SellingGeneralAndAdministration SpecialIncomeCharges TaxEffectOfUnusualItems TaxProvision TaxRateForCalcs TotalExpenses TotalOperatingIncomeAsReported TotalOtherFinanceCost TotalRevenue TotalUnusualItems TotalUnusualItemsExcludingGoodwill aapl 1985-09-30 00:00:00 12M 3.4272e+09 0.017857 1.076e+09 4.18e+07 4.18e+07 3.4272e+09 0.017857 6.12e+07 1.473e+08 nan nan nan 8.423e+08 nan nan nan nan 6.12e+07 6.12e+07 6.12e+07 nan 6.12e+07 6.12e+07 nan 6.12e+07 nan nan 2.163e+08 7.752e+07 6.95e+08 1.473e+08 1.9183e+09 -2.72e+07 nan nan nan 1.2e+08 1.076e+09 4.18e+07 nan nan 6.532e+08 -2.72e+07 -1.088e+07 5.88e+07 0.4 1.771e+09 1.473e+08 nan 1.9183e+09 -2.72e+07 -2.72e+07 aapl 1986-09-30 00:00:00 12M 3.59333e+09 0.042857 8.4e+08 5.11e+07 5.11e+07 3.59333e+09 0.042857 1.54e+08 2.735e+08 nan nan nan 1.0619e+09 nan nan nan nan 1.54e+08 1.54e+08 1.54e+08 nan 1.54e+08 1.54e+08 nan 1.54e+08 nan nan 2.884e+08 1.3228e+08 7.884e+08 2.735e+08 1.9019e+09 3.62e+07 nan nan nan 3.098e+08 8.4e+08 5.11e+07 nan nan 7.373e+08 3.62e+07 1.448e+07 1.558e+08 0.4 1.6284e+09 2.735e+08 nan 1.9019e+09 3.62e+07 3.62e+07 aapl 1987-09-30 00:00:00 12M 3.66867e+09 0.059286 1.2257e+09 7.05e+07 7.05e+07 3.66867e+09 0.059286 2.175e+08 3.715e+08 nan nan nan 1.4354e+09 nan nan nan nan 2.175e+08 2.175e+08 2.175e+08 nan 2.175e+08 2.175e+08 nan 2.175e+08 nan nan 4.031e+08 1.9416e+08 1.0639e+09 3.715e+08 2.6611e+09 3.89e+07 nan nan nan 4.104e+08 1.2257e+09 7.05e+07 nan nan 9.934e+08 3.89e+07 1.556e+07 1.929e+08 0.4 2.2896e+09 3.715e+08 nan 2.6611e+09 3.89e+07 3.89e+07 aapl 1988-09-30 00:00:00 12M 3.63909e+09 0.11 1.9132e+09 7.77e+07 7.77e+07 3.63909e+09 0.11 4.003e+08 6.203e+08 nan nan nan 2.1582e+09 nan nan nan nan 4.003e+08 4.003e+08 4.003e+08 nan 4.003e+08 4.003e+08 nan 4.003e+08 nan nan 6.622e+08 3.78461e+08 1.5379e+09 6.203e+08 4.0714e+09 3.58e+07 nan nan nan 6.562e+08 1.9132e+09 7.77e+07 nan nan 1.4602e+09 3.58e+07 1.3961e+07 2.559e+08 0.389973 3.4511e+09 6.203e+08 nan 4.0714e+09 3.58e+07 3.58e+07 aapl 1989-09-30 00:00:00 12M 3.59096e+09 0.126429 2.57e+09 1.248e+08 1.248e+08 3.59096e+09 0.126429 4.54e+08 6.343e+08 nan nan nan 2.714e+09 nan nan nan nan 4.54e+08 4.54e+08 4.54e+08 nan 4.54e+08 4.54e+08 nan 4.54e+08 nan nan 6.491e+08 3.86903e+08 2.0797e+09 6.343e+08 5.284e+09 1.1e+08 nan nan nan 7.443e+08 2.57e+09 1.248e+08 nan nan 1.9549e+09 1.1e+08 4.29034e+07 2.903e+08 0.390031 4.6497e+09 6.343e+08 nan 5.284e+09 1.1e+08 1.1e+08 p_valuation_measures \u00b6 Details Description : Retrieves valuation measures for given symbol(s) Return : pandas.DataFrame Arguments : Argument Type Default Required Options frequency str q optional Annual - a Quarter - q Monthly - m Example aapl = Ticker ( 'aapl' , username = 'username@yahoo.com' , password = 'password' ) df = aapl . p_valuation_measures () df . head () Data symbol asOfDate periodType EnterpriseValue EnterprisesValueEBITDARatio EnterprisesValueRevenueRatio ForwardPeRatio MarketCap PbRatio PeRatio PegRatio PsRatio aapl 1985-09-30 00:00:00 3M 6.37162e+08 -0.468054 1.55519 nan 9.74162e+08 1.7696 15.7505 nan 0.502489 aapl 1985-12-31 00:00:00 3M 1.02207e+09 1.91435 1.91435 nan 1.35907e+09 2.4688 18.9658 nan 0.774886 aapl 1986-03-31 00:00:00 3M 1.43289e+09 3.50425 3.50425 nan 1.76989e+09 3.21505 19.0878 nan 1.02454 aapl 1986-06-30 00:00:00 3M 1.94685e+09 4.34274 4.34274 nan 2.28385e+09 4.14868 15.7348 nan 1.26824 aapl 1986-09-30 00:00:00 3M 1.52184e+09 -1.3617 2.97932 nan 2.09804e+09 3.02267 13.9584 nan 1.13023 Multiple \u00b6 p_all_financial_data \u00b6 Details Description : Retrieve all financial data, including income statement, balance sheet, cash flow, and valuation measures. Return : pandas.DataFrame Arguments Argument Type Default Required Options frequency str a optional Annual - a Quarter - q Warning No trailing twelve month (TTM) data will be returned with this method Example aapl = Ticker ( 'aapl' , username = 'username@yahoo.com' , password = 'password' ) aapl . p_all_financial_data () Data symbol asOfDate periodType AccountsPayable AccountsReceivable AccumulatedDepreciation AdditionalPaidInCapital AllowanceForDoubtfulAccountsReceivable AvailableForSaleSecurities BasicAverageShares BasicEPS BeginningCashPosition BuildingsAndImprovements CapitalExpenditure CapitalStock CashAndCashEquivalents CashCashEquivalentsAndShortTermInvestments CashDividendsPaid CashEquivalents CashFinancial CashFlowFromContinuingFinancingActivities ChangeInAccountPayable ChangeInCashSupplementalAsReported ChangeInInventory ChangeInWorkingCapital ChangesInAccountReceivables CommercialPaper CommonStock CommonStockEquity CommonStockIssuance CostOfRevenue CurrentAccruedExpenses CurrentAssets CurrentDebt CurrentDebtAndCapitalLeaseObligation CurrentDeferredAssets CurrentDeferredLiabilities CurrentDeferredRevenue CurrentDeferredTaxesAssets CurrentLiabilities CurrentNotesPayable DeferredIncomeTax DepreciationAmortizationDepletionIncomeStatement DepreciationAndAmortization DepreciationAndAmortizationInIncomeStatement DilutedAverageShares DilutedEPS DilutedNIAvailtoComStockholders EBIT EarningsFromEquityInterest EndCashPosition EnterpriseValue EnterprisesValueEBITDARatio EnterprisesValueRevenueRatio FinishedGoods ForeignCurrencyTranslationAdjustments ForwardPeRatio FreeCashFlow GainOnSaleOfSecurity GainsLossesNotAffectingRetainedEarnings Goodwill GoodwillAndOtherIntangibleAssets GrossAccountsReceivable GrossPPE GrossProfit IncomeTaxPayable InterestExpense InterestExpenseNonOperating InterestIncome InterestIncomeNonOperating Inventory InvestedCapital InvestingCashFlow InvestmentinFinancialAssets InvestmentsAndAdvances LandAndImprovements Leases LongTermDebt LongTermDebtAndCapitalLeaseObligation MachineryFurnitureEquipment MarketCap NetDebt NetIncome NetIncomeCommonStockholders NetIncomeContinuousOperations NetIncomeExtraordinary NetIncomeFromContinuingAndDiscontinuedOperation NetIncomeFromContinuingOperationNetMinorityInterest NetIncomeFromTaxLossCarryforward NetIncomeIncludingNoncontrollingInterests NetInterestIncome NetNonOperatingInterestIncomeExpense NetOtherFinancingCharges NetOtherInvestingChanges NetPPE NetTangibleAssets NonCurrentDeferredAssets NonCurrentDeferredLiabilities NonCurrentDeferredRevenue NonCurrentDeferredTaxesAssets NonCurrentDeferredTaxesLiabilities NonCurrentPrepaidAssets NormalizedEBITDA NormalizedIncome OperatingCashFlow OperatingExpense OperatingIncome OperatingRevenue OrdinarySharesNumber OtherCurrentAssets OtherCurrentBorrowings OtherCurrentLiabilities OtherEquityAdjustments OtherEquityInterest OtherIncomeExpense OtherIntangibleAssets OtherNonCashItems OtherNonCurrentAssets OtherNonCurrentLiabilities OtherNonOperatingIncomeExpenses OtherOperatingExpenses OtherPayable OtherProperties OtherReceivables OtherShortTermInvestments OtherSpecialCharges Payables PayablesAndAccruedExpenses PbRatio PeRatio PegRatio PensionandOtherPostRetirementBenefitPlansCurrent PreferredStock PreferredStockEquity PrepaidAssets PretaxIncome Properties PsRatio PurchaseOfBusiness PurchaseOfInvestment RawMaterials Receivables ReconciledCostOfRevenue ReconciledDepreciation RepaymentOfDebt RepurchaseOfCapitalStock ResearchAndDevelopment RestructuringAndMergernAcquisition RetainedEarnings SaleOfInvestment SellingGeneralAndAdministration ShareIssued SpecialIncomeCharges StockBasedCompensation StockholdersEquity TangibleBookValue TaxEffectOfUnusualItems TaxProvision TaxRateForCalcs TotalAssets TotalCapitalization TotalDebt TotalEquityGrossMinorityInterest TotalExpenses TotalLiabilitiesNetMinorityInterest TotalNonCurrentAssets TotalNonCurrentLiabilitiesNetMinorityInterest TotalOperatingIncomeAsReported TotalOtherFinanceCost TotalRevenue TotalTaxPayable TotalUnusualItems TotalUnusualItemsExcludingGoodwill TradeandOtherPayablesNonCurrent WorkInProcess WorkingCapital aapl 1985-09-30 00:00:00 12M nan nan -8.52e+07 nan nan nan 3.4272e+09 0.017857 nan nan nan nan 3.37e+08 3.37e+08 nan nan nan nan nan nan nan nan nan nan nan 5.505e+08 nan 1.076e+09 nan 8.221e+08 nan nan nan nan nan nan 2.954e+08 nan nan 4.18e+07 nan 4.18e+07 3.4272e+09 0.017857 6.12e+07 1.473e+08 nan nan 6.37162e+08 3.36945 0.332149 nan nan nan nan nan nan nan nan nan 1.756e+08 8.423e+08 nan nan nan nan nan 1.67e+08 5.505e+08 nan nan nan nan nan nan nan nan 9.74162e+08 nan 6.12e+07 6.12e+07 6.12e+07 nan 6.12e+07 6.12e+07 nan 6.12e+07 nan nan nan nan 9.04e+07 5.505e+08 nan 9.03e+07 nan nan 9.03e+07 nan 2.163e+08 7.752e+07 nan 6.95e+08 1.473e+08 1.9183e+09 3.4636e+09 9.79e+07 nan nan nan 2.302e+08 -2.72e+07 nan nan 2.37e+07 nan nan nan nan nan nan nan nan nan nan 1.7696 15.7505 nan nan nan nan nan 1.2e+08 nan 0.502489 nan nan nan 2.202e+08 1.076e+09 4.18e+07 nan nan nan nan 3.203e+08 nan 6.532e+08 3.4636e+09 -2.72e+07 nan 5.505e+08 5.505e+08 -1.088e+07 5.88e+07 0.4 9.362e+08 5.505e+08 nan 5.505e+08 1.771e+09 3.857e+08 1.141e+08 9.03e+07 1.473e+08 nan 1.9183e+09 nan -2.72e+07 -2.72e+07 nan nan 5.267e+08 aapl 1986-09-30 00:00:00 12M nan nan -1.147e+08 nan nan nan 3.59333e+09 0.042857 nan nan nan nan 5.762e+08 5.762e+08 nan nan nan nan nan nan nan nan nan nan nan 6.941e+08 nan 8.4e+08 nan 1.0409e+09 nan nan nan nan nan nan 3.285e+08 nan nan 5.11e+07 nan 5.11e+07 3.59333e+09 0.042857 1.54e+08 2.735e+08 nan nan 1.52184e+09 4.68835 0.800167 nan nan nan nan nan nan nan nan nan 2.22e+08 1.0619e+09 nan nan nan nan nan 1.087e+08 6.941e+08 nan nan nan nan nan nan nan nan 2.09804e+09 nan 1.54e+08 1.54e+08 1.54e+08 nan 1.54e+08 1.54e+08 nan 1.54e+08 nan nan nan nan 1.073e+08 6.941e+08 nan 1.375e+08 nan nan 1.375e+08 nan 2.884e+08 1.3228e+08 nan 7.884e+08 2.735e+08 1.9019e+09 3.50717e+09 9.29e+07 nan nan nan 2.198e+08 3.62e+07 nan nan 1.19e+07 nan nan nan nan nan nan nan nan nan nan 3.02267 13.9584 nan nan nan nan nan 3.098e+08 nan 1.13023 nan nan nan 2.631e+08 8.4e+08 5.11e+07 nan nan nan nan 4.743e+08 nan 7.373e+08 3.50717e+09 3.62e+07 nan 6.941e+08 6.941e+08 1.448e+07 1.558e+08 0.4 1.1601e+09 6.941e+08 nan 6.941e+08 1.6284e+09 4.66e+08 1.192e+08 1.375e+08 2.735e+08 nan 1.9019e+09 nan 3.62e+07 3.62e+07 nan nan 7.124e+08 aapl 1987-09-30 00:00:00 12M nan nan -1.587e+08 nan nan nan 3.66867e+09 0.059286 nan nan nan nan 5.651e+08 5.651e+08 nan nan nan nan nan nan nan nan nan nan nan 8.365e+08 nan 1.2257e+09 nan 1.3074e+09 nan nan nan nan nan nan 4.787e+08 nan nan 7.05e+07 nan 7.05e+07 3.66867e+09 0.059286 2.175e+08 3.715e+08 nan nan 6.55887e+09 14.8391 2.46472 nan nan nan nan nan nan nan nan nan 2.891e+08 1.4354e+09 nan nan nan nan nan 2.258e+08 8.365e+08 nan nan nan nan nan nan nan nan 7.12397e+09 nan 2.175e+08 2.175e+08 2.175e+08 nan 2.175e+08 2.175e+08 nan 2.175e+08 nan nan nan nan 1.304e+08 8.365e+08 nan 1.628e+08 nan nan 1.628e+08 nan 4.031e+08 1.9416e+08 nan 1.0639e+09 3.715e+08 2.6611e+09 3.53046e+09 1.109e+08 nan nan nan 2.634e+08 3.89e+07 nan nan 4.01e+07 -100000 nan nan nan nan nan nan nan nan nan 8.5164 34.036 nan nan nan nan nan 4.104e+08 nan 2.78188 nan nan nan 4.056e+08 1.2257e+09 7.05e+07 nan nan nan nan 5.731e+08 nan 9.934e+08 3.53046e+09 3.89e+07 nan 8.365e+08 8.365e+08 1.556e+07 1.929e+08 0.4 1.4779e+09 8.365e+08 nan 8.365e+08 2.2896e+09 6.414e+08 1.705e+08 1.627e+08 3.715e+08 nan 2.6611e+09 nan 3.89e+07 3.89e+07 nan nan 8.287e+08 aapl 1988-09-30 00:00:00 12M nan nan -2.13e+08 nan nan nan 3.63909e+09 0.11 nan nan nan nan 5.457e+08 5.457e+08 nan nan nan nan nan nan nan nan nan nan nan 1.0034e+09 nan 1.9132e+09 nan 1.783e+09 1.279e+08 1.279e+08 nan nan nan nan 8.271e+08 nan nan 7.77e+07 nan 7.77e+07 3.63909e+09 0.11 4.003e+08 6.203e+08 nan nan 4.89192e+09 7.00848 1.20153 nan nan nan nan nan nan nan nan nan 4.204e+08 2.1582e+09 nan nan nan nan nan 4.615e+08 1.1313e+09 nan nan nan nan nan nan nan nan 5.30972e+09 nan 4.003e+08 4.003e+08 4.003e+08 nan 4.003e+08 4.003e+08 nan 4.003e+08 nan nan nan nan 2.074e+08 1.0034e+09 nan 2.516e+08 nan nan 2.516e+08 nan 6.622e+08 3.78461e+08 nan 1.5379e+09 6.203e+08 4.0714e+09 3.4375e+09 1.37e+08 nan 6.992e+08 nan 2.269e+08 3.58e+07 nan nan 9.17e+07 nan nan nan nan nan nan nan nan nan nan 5.29172 14.0422 nan nan nan nan nan 6.562e+08 nan 1.38063 nan nan nan 6.388e+08 1.9132e+09 7.77e+07 nan nan nan nan 7.765e+08 nan 1.4602e+09 3.4375e+09 3.58e+07 nan 1.0034e+09 1.0034e+09 1.3961e+07 2.559e+08 0.389973 2.0821e+09 1.0034e+09 1.279e+08 1.0034e+09 3.4511e+09 1.0787e+09 2.991e+08 2.516e+08 6.203e+08 nan 4.0714e+09 nan 3.58e+07 3.58e+07 nan nan 9.559e+08 aapl 1989-09-30 00:00:00 12M 3.342e+08 nan -3.091e+08 nan nan nan 3.59096e+09 0.126429 3.724e+08 nan -2.39e+08 nan 4.383e+08 4.383e+08 -5.03e+07 nan nan -3.83e+07 nan 6.59e+07 -1.39e+07 -1.09e+08 nan nan nan 1.4857e+09 9.6e+07 2.57e+09 nan 2.2944e+09 5.68e+07 5.68e+07 nan nan nan nan 8.953e+08 nan 1.113e+08 1.248e+08 1.248e+08 1.248e+08 3.59096e+09 0.126429 4.54e+08 6.343e+08 nan 0 5.20121e+09 6.85182 0.984333 nan nan nan 2.683e+08 nan nan nan nan nan 6.433e+08 2.714e+09 nan nan nan nan nan 4.754e+08 1.5425e+09 -4.031e+08 nan nan nan nan nan nan nan 5.61901e+09 nan 4.54e+08 4.54e+08 4.54e+08 nan 4.54e+08 4.54e+08 nan 4.54e+08 nan nan nan 3.32e+07 3.342e+08 1.4857e+09 nan 3.629e+08 nan nan 3.629e+08 nan 6.491e+08 3.86903e+08 5.073e+08 2.0797e+09 6.343e+08 5.284e+09 3.53556e+09 5.879e+08 nan 5.043e+08 nan 3.098e+08 1.1e+08 nan 100000 1.153e+08 nan nan nan nan nan nan nan nan 3.342e+08 3.342e+08 5.59997 14.2628 nan nan nan nan nan 7.443e+08 nan 1.08872 nan -9.847e+08 nan 7.928e+08 2.57e+09 1.248e+08 nan -1.29e+07 nan nan 1.1759e+09 7.874e+08 1.9549e+09 3.53556e+09 1.1e+08 nan 1.4857e+09 1.4857e+09 4.29034e+07 2.903e+08 0.390031 2.7439e+09 1.4857e+09 5.68e+07 1.4857e+09 4.6497e+09 1.2582e+09 4.495e+08 3.629e+08 6.343e+08 nan 5.284e+09 nan 1.1e+08 1.1e+08 nan nan 1.3991e+09 p_get_financial_data \u00b6 Details Description : Obtain specific data from either cash flow, income statement, balance sheet, or valuation measures. Return : pandas.DataFrame Arguments Argument Type Default Required Options types list or str None Required See options below frequency str a optional Annual - a Quarter - q trailing bool True optional True False Warning If you try and use all of the options below AND trailing=True , you will receive an error because the requested URL will be too long Balance Sheet [ 'AccountsPayable' , 'AccountsReceivable' , 'AccruedInterestReceivable' , 'AccumulatedDepreciation' , 'AdditionalPaidInCapital' , 'AllowanceForDoubtfulAccountsReceivable' , 'AssetsHeldForSaleCurrent' , 'AvailableForSaleSecurities' , 'BuildingsAndImprovements' , 'CapitalLeaseObligations' , 'CapitalStock' , 'CashAndCashEquivalents' , 'CashCashEquivalentsAndShortTermInvestments' , 'CashEquivalents' , 'CashFinancial' , 'CommercialPaper' , 'CommonStock' , 'CommonStockEquity' , 'ConstructionInProgress' , 'CurrentAccruedExpenses' , 'CurrentAssets' , 'CurrentCapitalLeaseObligation' , 'CurrentDebt' , 'CurrentDebtAndCapitalLeaseObligation' , 'CurrentDeferredAssets' , 'CurrentDeferredLiabilities' , 'CurrentDeferredRevenue' , 'CurrentDeferredTaxesAssets' , 'CurrentDeferredTaxesLiabilities' , 'CurrentLiabilities' , 'CurrentNotesPayable' , 'CurrentProvisions' , 'DefinedPensionBenefit' , 'DerivativeProductLiabilities' , 'DividendsPayable' , 'DuefromRelatedPartiesCurrent' , 'DuefromRelatedPartiesNonCurrent' , 'DuetoRelatedPartiesCurrent' , 'DuetoRelatedPartiesNonCurrent' , 'EmployeeBenefits' , 'FinancialAssets' , 'FinancialAssetsDesignatedasFairValueThroughProfitorLossTotal' , 'FinishedGoods' , 'FixedAssetsRevaluationReserve' , 'ForeignCurrencyTranslationAdjustments' , 'GainsLossesNotAffectingRetainedEarnings' , 'GeneralPartnershipCapital' , 'Goodwill' , 'GoodwillAndOtherIntangibleAssets' , 'GrossAccountsReceivable' , 'GrossPPE' , 'HedgingAssetsCurrent' , 'HeldToMaturitySecurities' , 'IncomeTaxPayable' , 'InterestPayable' , 'InventoriesAdjustmentsAllowances' , 'Inventory' , 'InvestedCapital' , 'InvestmentProperties' , 'InvestmentinFinancialAssets' , 'InvestmentsAndAdvances' , 'InvestmentsInOtherVenturesUnderEquityMethod' , 'InvestmentsinAssociatesatCost' , 'InvestmentsinJointVenturesatCost' , 'InvestmentsinSubsidiariesatCost' , 'LandAndImprovements' , 'Leases' , 'LiabilitiesHeldforSaleNonCurrent' , 'LimitedPartnershipCapital' , 'LineOfCredit' , 'LoansReceivable' , 'LongTermCapitalLeaseObligation' , 'LongTermDebt' , 'LongTermDebtAndCapitalLeaseObligation' , 'LongTermEquityInvestment' , 'LongTermProvisions' , 'MachineryFurnitureEquipment' , 'MinimumPensionLiabilities' , 'MinorityInterest' , 'NetDebt' , 'NetPPE' , 'NetTangibleAssets' , 'NonCurrentAccountsReceivable' , 'NonCurrentAccruedExpenses' , 'NonCurrentDeferredAssets' , 'NonCurrentDeferredLiabilities' , 'NonCurrentDeferredRevenue' , 'NonCurrentDeferredTaxesAssets' , 'NonCurrentDeferredTaxesLiabilities' , 'NonCurrentNoteReceivables' , 'NonCurrentPensionAndOtherPostretirementBenefitPlans' , 'NonCurrentPrepaidAssets' , 'NotesReceivable' , 'OrdinarySharesNumber' , 'OtherCapitalStock' , 'OtherCurrentAssets' , 'OtherCurrentBorrowings' , 'OtherCurrentLiabilities' , 'OtherEquityAdjustments' , 'OtherEquityInterest' , 'OtherIntangibleAssets' , 'OtherInventories' , 'OtherInvestments' , 'OtherNonCurrentAssets' , 'OtherNonCurrentLiabilities' , 'OtherPayable' , 'OtherProperties' , 'OtherReceivables' , 'OtherShortTermInvestments' , 'Payables' , 'PayablesAndAccruedExpenses' , 'PensionandOtherPostRetirementBenefitPlansCurrent' , 'PreferredSecuritiesOutsideStockEquity' , 'PreferredSharesNumber' , 'PreferredStock' , 'PreferredStockEquity' , 'PrepaidAssets' , 'Properties' , 'RawMaterials' , 'Receivables' , 'ReceivablesAdjustmentsAllowances' , 'RestrictedCash' , 'RestrictedCommonStock' , 'RetainedEarnings' , 'ShareIssued' , 'StockholdersEquity' , 'TangibleBookValue' , 'TaxesReceivable' , 'TotalAssets' , 'TotalCapitalization' , 'TotalDebt' , 'TotalEquityGrossMinorityInterest' , 'TotalLiabilitiesNetMinorityInterest' , 'TotalNonCurrentAssets' , 'TotalNonCurrentLiabilitiesNetMinorityInterest' , 'TotalPartnershipCapital' , 'TotalTaxPayable' , 'TradeandOtherPayablesNonCurrent' , 'TradingSecurities' , 'TreasurySharesNumber' , 'TreasuryStock' , 'UnrealizedGainLoss' , 'WorkInProcess' , 'WorkingCapital' ] Cash Flow [ 'RepaymentOfDebt' , 'RepurchaseOfCapitalStock' , 'CashDividendsPaid' , 'CommonStockIssuance' , 'ChangeInWorkingCapital' , 'CapitalExpenditure' , 'CashFlowFromContinuingFinancingActivities' , 'NetIncome' , 'FreeCashFlow' , 'ChangeInCashSupplementalAsReported' , 'SaleOfInvestment' , 'EndCashPosition' , 'OperatingCashFlow' , 'DeferredIncomeTax' , 'NetOtherInvestingChanges' , 'ChangeInAccountPayable' , 'NetOtherFinancingCharges' , 'PurchaseOfInvestment' , 'ChangeInInventory' , 'DepreciationAndAmortization' , 'PurchaseOfBusiness' , 'InvestingCashFlow' , 'ChangesInAccountReceivables' , 'StockBasedCompensation' , 'OtherNonCashItems' , 'BeginningCashPosition' ] Income Statement [ 'Amortization' , 'AmortizationOfIntangiblesIncomeStatement' , 'AverageDilutionEarnings' , 'BasicAccountingChange' , 'BasicAverageShares' , 'BasicContinuousOperations' , 'BasicDiscontinuousOperations' , 'BasicEPS' , 'BasicEPSOtherGainsLosses' , 'BasicExtraordinary' , 'ContinuingAndDiscontinuedBasicEPS' , 'ContinuingAndDiscontinuedDilutedEPS' , 'CostOfRevenue' , 'DepletionIncomeStatement' , 'DepreciationAmortizationDepletionIncomeStatement' , 'DepreciationAndAmortizationInIncomeStatement' , 'DepreciationIncomeStatement' , 'DilutedAccountingChange' , 'DilutedAverageShares' , 'DilutedContinuousOperations' , 'DilutedDiscontinuousOperations' , 'DilutedEPS' , 'DilutedEPSOtherGainsLosses' , 'DilutedExtraordinary' , 'DilutedNIAvailtoComStockholders' , 'DividendPerShare' , 'EBIT' , 'EBITDA' , 'EarningsFromEquityInterest' , 'EarningsFromEquityInterestNetOfTax' , 'ExciseTaxes' , 'GainOnSaleOfBusiness' , 'GainOnSaleOfPPE' , 'GainOnSaleOfSecurity' , 'GeneralAndAdministrativeExpense' , 'GrossProfit' , 'ImpairmentOfCapitalAssets' , 'InsuranceAndClaims' , 'InterestExpense' , 'InterestExpenseNonOperating' , 'InterestIncome' , 'InterestIncomeNonOperating' , 'MinorityInterests' , 'NetIncome' , 'NetIncomeCommonStockholders' , 'NetIncomeContinuousOperations' , 'NetIncomeDiscontinuousOperations' , 'NetIncomeExtraordinary' , 'NetIncomeFromContinuingAndDiscontinuedOperation' , 'NetIncomeFromContinuingOperationNetMinorityInterest' , 'NetIncomeFromTaxLossCarryforward' , 'NetIncomeIncludingNoncontrollingInterests' , 'NetInterestIncome' , 'NetNonOperatingInterestIncomeExpense' , 'NormalizedBasicEPS' , 'NormalizedDilutedEPS' , 'NormalizedEBITDA' , 'NormalizedIncome' , 'OperatingExpense' , 'OperatingIncome' , 'OperatingRevenue' , 'OtherGandA' , 'OtherIncomeExpense' , 'OtherNonOperatingIncomeExpenses' , 'OtherOperatingExpenses' , 'OtherSpecialCharges' , 'OtherTaxes' , 'OtherunderPreferredStockDividend' , 'PreferredStockDividends' , 'PretaxIncome' , 'ProvisionForDoubtfulAccounts' , 'ReconciledCostOfRevenue' , 'ReconciledDepreciation' , 'RentAndLandingFees' , 'RentExpenseSupplemental' , 'ReportedNormalizedBasicEPS' , 'ReportedNormalizedDilutedEPS' , 'ResearchAndDevelopment' , 'RestructuringAndMergernAcquisition' , 'SalariesAndWages' , 'SecuritiesAmortization' , 'SellingAndMarketingExpense' , 'SellingGeneralAndAdministration' , 'SpecialIncomeCharges' , 'TaxEffectOfUnusualItems' , 'TaxLossCarryforwardBasicEPS' , 'TaxLossCarryforwardDilutedEPS' , 'TaxProvision' , 'TaxRateForCalcs' , 'TotalExpenses' , 'TotalOperatingIncomeAsReported' , 'TotalOtherFinanceCost' , 'TotalRevenue' , 'TotalUnusualItems' , 'TotalUnusualItemsExcludingGoodwill' , 'WriteOff' ] Valuation Measures [ 'ForwardPeRatio' , 'PsRatio' , 'PbRatio' , 'EnterprisesValueEBITDARatio' , 'EnterprisesValueRevenueRatio' , 'PeRatio' , 'MarketCap' , 'EnterpriseValue' , 'PegRatio' ] Example aapl = Ticker ( 'aapl' , username = 'username@yahoo.com' , password = 'password' ) types = [ 'TotalDebt' , 'TotalAssets' , 'EBIT' , 'EBITDA' , 'PeRatio' ] aapl . p_get_financial_data ( types , trailing = False ) Data symbol asOfDate periodType EBIT EBITDA PeRatio TotalAssets TotalDebt aapl 1985-09-30 00:00:00 12M 1.473e+08 nan 15.7505 9.362e+08 nan aapl 1986-09-30 00:00:00 12M 2.735e+08 nan 13.9584 1.1601e+09 nan aapl 1987-09-30 00:00:00 12M 3.715e+08 nan 34.036 1.4779e+09 nan aapl 1988-09-30 00:00:00 12M 6.203e+08 nan 14.0422 2.0821e+09 1.279e+08 aapl 1989-09-30 00:00:00 12M 6.343e+08 nan 14.2628 2.7439e+09 5.68e+07 Miscellaneous \u00b6 p_company_360 \u00b6 Details Description : Retrieve data related to innovation, hiring, insider sentiment, developments, supply chain, sustainability, and company outlook for given symbol(s) Return : dict Example aapl = Ticker ( 'aapl' , username = 'username@yahoo.com' , password = 'password' ) aapl . p_company_360 Data { 'aapl' : { 'metaData' : { 'symbol' : 'aapl' }, 'innovations' : { 'score' : 94.0 , 'text' : 'Outperform' , 'sectorAvg' : 52.6145648312611 }, 'sustainability' : { 'totalScore' : 64 , 'totalScorePercentile' : 83 , 'environmentScore' : 66 , 'environmentScorePercentile' : 85 , 'socialScore' : 66 , 'socialScorePercentile' : 70 , 'governanceScore' : 66 , 'governanceScorePercentile' : 89 , 'controversyLevel' : 2 }, 'insiderSentiments' : { 'vickersIndex' : - 57 , 'vickersIndexChange' : 0 , 'sentimentText' : 'Negative' }, 'significantDevelopments' : [{ 'id' : 4252812 , 'symbol' : 'AAPL' , 'date' : '2020-07-30' , 'headline' : 'Apple Reports Q3 Earnings Of $2.58 Per Share' }, { 'id' : 4248528 , 'symbol' : 'AAPL' , 'date' : '2020-07-23' , 'headline' : 'Apple Faces Multi-State Consumer Protection Probe - Axios' }, { 'id' : 4246944 , 'symbol' : 'AAPL' , 'date' : '2020-07-21' , 'headline' : 'Apple To Become Carbon Neutral Across Manufacturing Supply Chain, Product Life Cycle By 2030' }, { 'id' : 4244661 , 'symbol' : 'AAPL' , 'date' : '2020-07-15' , 'headline' : 'TomTom Eyes Better Operational Revenues In H2 - Conf Call' }, { 'id' : 4241255 , 'symbol' : 'AAPL' , 'date' : '2020-07-07' , 'headline' : 'Apple Opts For OLED Screens For Entire 5G iPhone Range - Nikkei' }], 'companySnapshot' : { 'sectorInfo' : 'Technology' , 'company' : { 'innovativeness' : 0.9983 , 'hiring' : 0.9795 , 'sustainability' : 0.8240000000000001 , 'insiderSentiments' : 0.2217 , 'earningsReports' : 0.8340000000000001 , 'dividends' : 0.25 }, 'sector' : { 'innovativeness' : 0.5 , 'hiring' : 0.5 , 'sustainability' : 0.5 , 'insiderSentiments' : 0.5 , 'earningsReports' : 0.5 , 'dividends' : 0.5 } }, 'hiring' : [{ 'month' : 2 , 'year' : 2019 , 'hiringChangePercent' : - 0.18330134 , 'sectorAvgChangePercent' : - 0.21709615 }, { 'month' : 3 , 'year' : 2019 , 'hiringChangePercent' : 0.89659226 , 'sectorAvgChangePercent' : 0.998416 }, { 'month' : 4 , 'year' : 2019 , 'hiringChangePercent' : - 0.19826518 , 'sectorAvgChangePercent' : - 0.48218337 }, { 'month' : 5 , 'year' : 2019 , 'hiringChangePercent' : - 0.311051 , 'sectorAvgChangePercent' : - 0.3965309 }, { 'month' : 6 , 'year' : 2019 , 'hiringChangePercent' : - 0.11497476 , 'sectorAvgChangePercent' : - 0.13750465 }, { 'month' : 7 , 'year' : 2019 , 'hiringChangePercent' : - 0.20278834 , 'sectorAvgChangePercent' : - 0.14868993 }, { 'month' : 8 , 'year' : 2019 , 'hiringChangePercent' : 0.057233706 , 'sectorAvgChangePercent' : 0.18088417 }, { 'month' : 9 , 'year' : 2019 , 'hiringChangePercent' : - 0.25413534 , 'sectorAvgChangePercent' : - 0.2411767 }, { 'month' : 10 , 'year' : 2019 , 'hiringChangePercent' : 0.25705644 , 'sectorAvgChangePercent' : - 0.03286806 }, { 'month' : 11 , 'year' : 2019 , 'hiringChangePercent' : - 0.21892542 , 'sectorAvgChangePercent' : - 0.17327583 }, { 'month' : 12 , 'year' : 2019 , 'hiringChangePercent' : 0.1550308 , 'sectorAvgChangePercent' : - 0.012864476 }, { 'month' : 1 , 'year' : 2020 , 'hiringChangePercent' : - 0.13511111 , 'sectorAvgChangePercent' : - 0.031074993 }, { 'month' : 2 , 'year' : 2020 , 'hiringChangePercent' : - 0.18602261 , 'sectorAvgChangePercent' : - 0.1585546 }, { 'month' : 3 , 'year' : 2020 , 'hiringChangePercent' : 0.24368687 , 'sectorAvgChangePercent' : 0.90801805 }, { 'month' : 4 , 'year' : 2020 , 'hiringChangePercent' : - 0.17766498 , 'sectorAvgChangePercent' : - 0.59851396 }, { 'month' : 5 , 'year' : 2020 , 'hiringChangePercent' : - 0.24444444 , 'sectorAvgChangePercent' : - 0.12799595 }, { 'month' : 6 , 'year' : 2020 , 'hiringChangePercent' : 0.0 , 'sectorAvgChangePercent' : - 0.04588681 }, { 'month' : 7 , 'year' : 2020 , 'hiringChangePercent' : - 0.6535948 , 'sectorAvgChangePercent' : - 0.6510271 }], 'supplyChain' : { 'topSuppliers' : [{ 'entityYName' : 'POSCO' , 'entityYTicker' : 'PKXFF' , 'relationToType' : 'Supplier' , 'exposureTotal' : 0.016477 , 'exposureFinancial' : 0.000125 , 'exposureMedia' : 0.000301 , 'exposureEconomic' : 0.049003 , 'economicValue' : 8136720000.0 }, { 'entityYName' : 'ENEOS Holdings, Inc.' , 'entityYTicker' : 'JXHGF' , 'relationToType' : 'Supplier' , 'exposureTotal' : 0.012025 , 'exposureFinancial' : 1.7e-05 , 'exposureMedia' : 0.00015 , 'exposureEconomic' : 0.035907 , 'economicValue' : 5962190000.0 }, { 'entityYName' : 'Jabil Inc.' , 'entityYTicker' : 'JBL' , 'relationToType' : 'Supplier' , 'exposureTotal' : 0.018778 , 'exposureFinancial' : 0.020268 , 'exposureMedia' : 0.000902 , 'exposureEconomic' : 0.035164 , 'economicValue' : 5838770000.0 }, { 'entityYName' : 'Quanta Computer Inc.' , 'entityYTicker' : '2382.TW' , 'relationToType' : 'Supplier' , 'exposureTotal' : 0.014186 , 'exposureFinancial' : 0.007526 , 'exposureMedia' : 0.001955 , 'exposureEconomic' : 0.033077 , 'economicValue' : 5492230000.0 }, { 'entityYName' : 'Hon Hai Precision Industry Co., Ltd.' , 'entityYTicker' : 'HNHAF' , 'relationToType' : 'Supplier' , 'exposureTotal' : 0.012083 , 'exposureFinancial' : 0.003068 , 'exposureMedia' : 0.00015 , 'exposureEconomic' : 0.033029 , 'economicValue' : 5484340000.0 }], 'topCustomers' : [{ 'entityYName' : 'Costco Wholesale Corporation' , 'entityYTicker' : 'COST' , 'relationToType' : 'Customer' , 'exposureTotal' : 0.034341 , 'exposureFinancial' : 0.018305 , 'exposureMedia' : 0.034568 , 'exposureEconomic' : 0.050148 , 'economicValue' : 10429790000.0 }, { 'entityYName' : 'AT&T Inc.' , 'entityYTicker' : 'T' , 'relationToType' : 'Customer' , 'exposureTotal' : 0.078284 , 'exposureFinancial' : 0.032478 , 'exposureMedia' : 0.158848 , 'exposureEconomic' : 0.043524 , 'economicValue' : 9052120000.0 }, { 'entityYName' : 'Cencosud S.A.' , 'entityYTicker' : 'CENCOSUD.SN' , 'relationToType' : 'Customer' , 'exposureTotal' : 0.012515 , 'exposureFinancial' : 0.000711 , 'exposureMedia' : 0.000823 , 'exposureEconomic' : 0.03601 , 'economicValue' : 7489330000.0 }, { 'entityYName' : 'Vodafone Idea Limited' , 'entityYTicker' : 'IDEA.NS' , 'relationToType' : 'Customer' , 'exposureTotal' : 0.011229 , 'exposureFinancial' : 8.8e-05 , 'exposureMedia' : 0.000823 , 'exposureEconomic' : 0.032777 , 'economicValue' : 6816940000.0 }, { 'entityYName' : 'Mazda Motor Corporation' , 'entityYTicker' : 'MZDAF' , 'relationToType' : 'Customer' , 'exposureTotal' : 0.011536 , 'exposureFinancial' : 0.000236 , 'exposureMedia' : 0.001646 , 'exposureEconomic' : 0.032727 , 'economicValue' : 6806610000.0 }], 'remainingSuppliers' : 0 , 'remainingCustomers' : 0 }, 'earnings' : [{ 'quarter' : 'Q3' , 'year' : '2017' , 'actual' : 0.9 , 'consensus' : 0.96 }, { 'quarter' : 'Q4' , 'year' : '2017' , 'actual' : 1.1 , 'consensus' : 1.04 }, { 'quarter' : 'Q1' , 'year' : '2018' , 'actual' : 1.1 , 'consensus' : 1.1 }], 'dividend' : { 'amount' : 0.82 , 'date' : '2020-05-08' , 'yield' : 0.0101 , 'sectorMedian' : 0.0172 , 'marketMedian' : 0.0379 }, 'companyOutlookSummary' : { 'innovationTrend' : 'trending up' , 'innovationScore' : 94.0 , 'innovationPerformance' : 'outperforming' , 'hiringTrend' : 'decreased' , 'insiderSentiment' : 'negative' , 'topSupplier' : 'POSCO' , 'dividendsPerformance' : 'lower' } } } p_corporate_events \u00b6 Details Description : Obtain significant corporate events related to given symbol(s) Return : pandas.DataFrame Example aapl = Ticker ( 'aapl' , username = 'username@yahoo.com' , password = 'password' ) df = aapl . p_corporate_events df . head () Data id significance headline description parentTopics ('aapl', Timestamp('2011-01-17 00:00:00')) 2064853 1 Apple Inc.'s Steve Jobs Takes Second Medical Leave-Reuters Reuters reported that Apple Inc. Chief Executive Steve Jobs is taking medical leave for the second time in as many years, sending its shares tumbling as the unexpected news revived concerns over the long-term future of Apple. The news, which was disclosed early on a U.S. holiday when markets were closed, came nearly two years to the date after Jobs first took a six-month break to undergo a liver transplant. Unlike the previous announcement, Apple did not specify any timeline for Jobs to resume his duties. Jobs said Chief Operating Officer Tim Cook would take responsibility for day-to-day operations but he would continue to be Chief Executive and be involved in major strategic decisions. Restructuring/Reorganization/Related ('aapl', Timestamp('2011-08-24 00:00:00')) 2389197 1 Steve Jobs Resigns as CEO of Apple Inc.; Names Tim Cook As New CEO Apple Inc.'s Board of Directors announced that Steve Jobs has resigned as Chief Executive Officer (CEO), and the Board has named Tim Cook, previously Apple's Chief Operating Officer, as the Company's new CEO. Jobs has been elected Chairman of the Board and Cook will join the Board, effective immediately. Jobs submitted his resignation to the Board on August 24, 2011, and recommended that the Board implement its succession plan and name Tim Cook as CEO. Restructuring/Reorganization/Related ('aapl', Timestamp('2011-10-05 00:00:00')) 2410928 1 Apple Inc.'s Steve Jobs Passes Away Apple Inc. announced that Steve Jobs, Chairman of the Company, passed away. Restructuring/Reorganization/Related ('aapl', Timestamp('2011-11-15 00:00:00')) 2435048 1 Apple Inc. Names Arthur D. Levinson As Chairman Of Board Apple Inc. announced that it named Arthur D. Levinson, Ph. D. as the Company\u2019s non-executive Chairman of the Board. Levinson has been a co-lead director of Apple\u2019s board since 2005, has served on all three board committees\u2014audit and finance, nominating and corporate governance, and compensation\u2014and will continue to serve on the audit committee. Apple also announced that Robert A. Iger, President and Chief Executive Officer of The Walt Disney Company, will join Apple\u2019s board and will serve on the audit committee. Restructuring/Reorganization/Related ('aapl', Timestamp('2014-03-04 00:00:00')) 2935872 2 Apple Inc's Peter Oppenheimer to retire at the end of september Apple Inc:Says that Peter Oppenheimer, its senior vice president and CFO, will retire at the end of September.Luca Maestri, Apple's vice president of Finance and corporate controller, will succeed Peter as CFO.Peter will transition the CFO role to Luca in June and the balance of his responsibilities over the remaining time allowing for a professional and seamless transition. Restructuring/Reorganization/Related p_ideas \u00b6 Tip See Research p_reports \u00b6 Tip See Research p_value_analyzer_drilldown \u00b6 Details Description : Valuation metrics for given symbol(s) Return : dict Example aapl = Ticker ( 'aapl' , username = 'username@yahoo.com' , password = 'password' ) aapl . p_value_analyzer_drilldown Data { 'aapl' : { 'currentPrice' : 425.04 , 'revenue' : 260174000000.0 , 'epsGrowth' : 11.02 , 'peRatio' : 28.5418 , 'dps' : 3.28 , 'priceBookRatio' : 21.010402 , 'symbol' : 'aapl' , 'valuationDescription' : 'Overvalued' , 'valuationColor' : 0.0 , 'outlook' : '-8%' , 'currentFairValue' : 146.5 , 'timeSeries' : [{ 'timestamp' : [ 20101231 , 20111231 , 20121231 , 20131231 , 20141231 , 20151231 , 20161231 , 20171231 , 20181231 , 20191231 ], 'annualEps' : [{ 'basicNetEps' : 2.201429 , 'yoyPercentage' : 66.022039 , 'yoyPercentageFormatted' : '66.02%' }, { 'basicNetEps' : 4.007143 , 'yoyPercentage' : 82.02463 , 'yoyPercentageFormatted' : '82.02%' }, { 'basicNetEps' : 6.38 , 'yoyPercentage' : 59.215681 , 'yoyPercentageFormatted' : '59.22%' }, { 'basicNetEps' : 5.72 , 'yoyPercentage' : - 10.344828 , 'yoyPercentageFormatted' : '-10.34%' }, { 'basicNetEps' : 6.49 , 'yoyPercentage' : 13.461538 , 'yoyPercentageFormatted' : '13.46%' }, { 'basicNetEps' : 9.28 , 'yoyPercentage' : 42.989214 , 'yoyPercentageFormatted' : '42.99%' }, { 'basicNetEps' : 8.35 , 'yoyPercentage' : - 10.021552 , 'yoyPercentageFormatted' : '-10.02%' }, { 'basicNetEps' : 9.27 , 'yoyPercentage' : 11.017964 , 'yoyPercentageFormatted' : '11.02%' }, { 'basicNetEps' : 12.01 , 'yoyPercentage' : 29.557713 , 'yoyPercentageFormatted' : '29.56%' }, { 'basicNetEps' : 11.97 , 'yoyPercentage' : - 0.333056 , 'yoyPercentageFormatted' : '-0.33%' }], 'type' : 'annualEps' }, { 'timestamp' : [ 20101231 , 20111231 , 20121231 , 20131231 , 20141231 , 20151231 , 20161231 , 20171231 , 20181231 , 20191231 ], 'annualSharesOutstanding' : [{ 'sharesOutstanding' : 6411790350 }, { 'sharesOutstanding' : 6504939000 }, { 'sharesOutstanding' : 6574456000 }, { 'sharesOutstanding' : 6294491000 }, { 'sharesOutstanding' : 5866161000 }, { 'sharesOutstanding' : 5578753000 }, { 'sharesOutstanding' : 5336166000 }, { 'sharesOutstanding' : 5126201000 }, { 'sharesOutstanding' : 4754986000 }, { 'sharesOutstanding' : 4443236000 }], 'type' : 'annualSharesOutstanding' }, { 'timestamp' : [ 20200930 , 20210930 , 20220930 , 20230930 , 20240930 , 20250930 ], 'futureFairValue' : [{ 'fairValue' : 146.5 }, { 'fairValue' : 162.64 }, { 'fairValue' : 180.56 }, { 'fairValue' : 200.46 }, { 'fairValue' : 222.55 }, { 'fairValue' : 247.08 }], 'type' : 'futureFairValue' }, { 'timestamp' : [ 20101231 , 20111231 , 20121231 , 20131231 , 20141231 , 20151231 , 20161231 , 20171231 , 20181231 , 20191231 ], 'annualLogEps' : [{ 'logEarningsPerShare' : 0.0 }, { 'logEarningsPerShare' : 0.598972 }, { 'logEarningsPerShare' : 1.064061 }, { 'logEarningsPerShare' : 0.954862 }, { 'logEarningsPerShare' : 1.081156 }, { 'logEarningsPerShare' : 1.438755 }, { 'logEarningsPerShare' : 1.333155 }, { 'logEarningsPerShare' : 1.437677 }, { 'logEarningsPerShare' : 1.696633 }, { 'logEarningsPerShare' : 1.693297 }], 'type' : 'annualLogEps' }, { 'timestamp' : [ 20101231 , 20111231 , 20121231 , 20131231 , 20141231 , 20151231 , 20161231 , 20171231 , 20181231 , 20191231 ], 'annualPriceRange' : [{ 'priceHigh' : 42.104244 , 'priceLow' : 25.81426 }, { 'priceHigh' : 60.408511 , 'priceLow' : 39.681389 }, { 'priceHigh' : 100.724185 , 'priceLow' : 50.605664 }, { 'priceHigh' : 96.678475 , 'priceLow' : 55.014231 }, { 'priceHigh' : 103.74 , 'priceLow' : 67.772932 }, { 'priceHigh' : 134.54 , 'priceLow' : 92.0 }, { 'priceHigh' : 123.82 , 'priceLow' : 89.47 }, { 'priceHigh' : 164.94 , 'priceLow' : 104.08 }, { 'priceHigh' : 229.67 , 'priceLow' : 150.24 }, { 'priceHigh' : 233.47 , 'priceLow' : 142.0 }], 'type' : 'annualPriceRange' }, { 'timestamp' : [ 20140930 , 20141231 , 20150331 , 20150630 , 20150930 , 20151231 , 20160331 , 20160630 , 20160930 , 20161231 , 20170331 , 20170630 , 20170930 , 20171231 , 20180331 , 20180630 , 20180930 , 20181231 , 20190331 , 20190630 , 20190930 , 20191231 , 20200331 ], 'quarterlyEps' : [{ 'basicNetEps' : 1.43 }, { 'basicNetEps' : 3.08 }, { 'basicNetEps' : 2.34 }, { 'basicNetEps' : 1.86 }, { 'basicNetEps' : 1.97 }, { 'basicNetEps' : 3.3 }, { 'basicNetEps' : 1.91 }, { 'basicNetEps' : 1.43 }, { 'basicNetEps' : 1.68 }, { 'basicNetEps' : 3.38 }, { 'basicNetEps' : 2.11 }, { 'basicNetEps' : 1.68 }, { 'basicNetEps' : 2.08 }, { 'basicNetEps' : 3.92 }, { 'basicNetEps' : 2.75 }, { 'basicNetEps' : 2.36 }, { 'basicNetEps' : 2.94 }, { 'basicNetEps' : 4.22 }, { 'basicNetEps' : 2.47 }, { 'basicNetEps' : 2.2 }, { 'basicNetEps' : 3.05 }, { 'basicNetEps' : 5.04 }, { 'basicNetEps' : 2.58 }], 'type' : 'quarterlyEps' }, { 'timestamp' : [ 20131231 , 20141231 , 20151231 , 20161231 , 20171231 , 20181231 , 20191231 ], 'annualDebtToEquityRatio' : [{ 'debtToEquityRatio' : 0.137273 }, { 'debtToEquityRatio' : 0.316414 }, { 'debtToEquityRatio' : 0.538964 }, { 'debtToEquityRatio' : 0.678617 }, { 'debtToEquityRatio' : 0.862981 }, { 'debtToEquityRatio' : 1.068467 }, { 'debtToEquityRatio' : 1.194048 }], 'type' : 'annualDebtToEquityRatio' }, { 'timestamp' : [ 20101231 , 20111231 , 20121231 , 20131231 , 20141231 , 20151231 , 20161231 , 20171231 , 20181231 , 20191231 ], 'annualLogRevenue' : [{ 'logRevenue' : 0.926689 }, { 'logRevenue' : 1.433281 }, { 'logRevenue' : 1.801954 }, { 'logRevenue' : 1.889984 }, { 'logRevenue' : 1.957212 }, { 'logRevenue' : 2.202949 }, { 'logRevenue' : 2.122452 }, { 'logRevenue' : 2.18359 }, { 'logRevenue' : 2.330819 }, { 'logRevenue' : 2.310197 }], 'type' : 'annualLogRevenue' }, { 'timestamp' : [ 20101231 , 20111231 , 20121231 , 20131231 , 20141231 , 20151231 , 20161231 , 20171231 , 20181231 , 20191231 ], 'annualCash' : [{ 'cash' : 25620000000.0 , 'cashFormatted' : '25.62B' }, { 'cash' : 25952000000.0 , 'cashFormatted' : '25.95B' }, { 'cash' : 29129000000.0 , 'cashFormatted' : '29.13B' }, { 'cash' : 40546000000.0 , 'cashFormatted' : '40.55B' }, { 'cash' : 25077000000.0 , 'cashFormatted' : '25.08B' }, { 'cash' : 41601000000.0 , 'cashFormatted' : '41.60B' }, { 'cash' : 67155000000.0 , 'cashFormatted' : '67.16B' }, { 'cash' : 74181000000.0 , 'cashFormatted' : '74.18B' }, { 'cash' : 66301000000.0 , 'cashFormatted' : '66.30B' }, { 'cash' : 100557000000.0 , 'cashFormatted' : '100.56B' }], 'type' : 'annualCash' }, { 'timestamp' : [ 20101231 , 20111231 , 20121231 , 20131231 , 20141231 , 20151231 , 20161231 , 20171231 , 20181231 , 20191231 ], 'annualDps' : [{ 'dividendPerShare' : 0.0 }, { 'dividendPerShare' : 0.0 }, { 'dividendPerShare' : 0.378571 }, { 'dividendPerShare' : 1.628571 }, { 'dividendPerShare' : 1.811429 }, { 'dividendPerShare' : 1.98 }, { 'dividendPerShare' : 2.18 }, { 'dividendPerShare' : 2.4 }, { 'dividendPerShare' : 2.72 }, { 'dividendPerShare' : 3.0 }], 'type' : 'annualDps' }, { 'timestamp' : [ 20101231 , 20111231 , 20121231 , 20131231 , 20141231 , 20151231 , 20161231 , 20171231 , 20181231 , 20191231 ], 'annualFairValue' : [{ 'fairValue' : 24.268181 }, { 'fairValue' : 44.174066 }, { 'fairValue' : 70.33204 }, { 'fairValue' : 63.056312 }, { 'fairValue' : 71.544661 }, { 'fairValue' : 102.301149 }, { 'fairValue' : 92.048987 }, { 'fairValue' : 102.190911 }, { 'fairValue' : 132.396207 }, { 'fairValue' : 131.955254 }], 'type' : 'annualFairValue' , 'futureTimestamp' : [ 2020 , 2021 , 2022 , 2023 , 2024 ], 'futureAnnualFairValue' : [{ 'fairValue' : 146.5 }, { 'fairValue' : 162.64 }, { 'fairValue' : 180.56 }, { 'fairValue' : 200.46 }, { 'fairValue' : 222.55 }] }, { 'timestamp' : [ 20140930 , 20141231 , 20150331 , 20150630 , 20150930 , 20151231 , 20160331 , 20160630 , 20160930 , 20161231 , 20170331 , 20170630 , 20170930 , 20171231 , 20180331 , 20180630 , 20180930 , 20181231 , 20190331 , 20190630 , 20190930 , 20191231 , 20200331 ], 'quarterlyAdjustedRevenue' : [{ 'adjustedRevenue' : 2.618226 }, { 'adjustedRevenue' : 4.636826 }, { 'adjustedRevenue' : 3.881656 }, { 'adjustedRevenue' : 3.319248 }, { 'adjustedRevenue' : 3.446116 }, { 'adjustedRevenue' : 5.076867 }, { 'adjustedRevenue' : 3.885146 }, { 'adjustedRevenue' : 3.255078 }, { 'adjustedRevenue' : 3.600428 }, { 'adjustedRevenue' : 6.021027 }, { 'adjustedRevenue' : 4.06489 }, { 'adjustedRevenue' : 3.489461 }, { 'adjustedRevenue' : 4.04053 }, { 'adjustedRevenue' : 6.785038 }, { 'adjustedRevenue' : 4.698185 }, { 'adjustedRevenue' : 4.093247 }, { 'adjustedRevenue' : 4.833666 }, { 'adjustedRevenue' : 6.478957 }, { 'adjustedRevenue' : 4.458269 }, { 'adjustedRevenue' : 4.135052 }, { 'adjustedRevenue' : 4.921272 }, { 'adjustedRevenue' : 7.056 }, { 'adjustedRevenue' : 4.48117 }], 'type' : 'quarterlyAdjustedRevenue' }, { 'timestamp' : [ 20101231 , 20111231 , 20121231 , 20131231 , 20141231 , 20151231 , 20161231 , 20171231 , 20181231 , 20191231 ], 'annualRevenue' : [{ 'revenue' : 65225000000.0 , 'formatted' : '65.22B' , 'yoyPercentage' : 52.021909 , 'yoyPercentageFormatted' : '52.02%' }, { 'revenue' : 108249000000.0 , 'formatted' : '108.25B' , 'yoyPercentage' : 65.962438 , 'yoyPercentageFormatted' : '65.96%' }, { 'revenue' : 156508000000.0 , 'formatted' : '156.51B' , 'yoyPercentage' : 44.581474 , 'yoyPercentageFormatted' : '44.58%' }, { 'revenue' : 170910000000.0 , 'formatted' : '170.91B' , 'yoyPercentage' : 9.202086 , 'yoyPercentageFormatted' : '9.20%' }, { 'revenue' : 182795000000.0 , 'formatted' : '182.79B' , 'yoyPercentage' : 6.953952 , 'yoyPercentageFormatted' : '6.95%' }, { 'revenue' : 233715000000.0 , 'formatted' : '233.72B' , 'yoyPercentage' : 27.856342 , 'yoyPercentageFormatted' : '27.86%' }, { 'revenue' : 215639000000.0 , 'formatted' : '215.64B' , 'yoyPercentage' : - 7.734206 , 'yoyPercentageFormatted' : '-7.73%' }, { 'revenue' : 229234000000.0 , 'formatted' : '229.23B' , 'yoyPercentage' : 6.304518 , 'yoyPercentageFormatted' : '6.30%' }, { 'revenue' : 265595000000.0 , 'formatted' : '265.60B' , 'yoyPercentage' : 15.861958 , 'yoyPercentageFormatted' : '15.86%' }, { 'revenue' : 260174000000.0 , 'formatted' : '260.17B' , 'yoyPercentage' : - 2.041078 , 'yoyPercentageFormatted' : '-2.04%' }], 'type' : 'annualRevenue' }] } }","title":"Premium"},{"location":"guide/ticker/premium/#financials","text":"","title":"Financials"},{"location":"guide/ticker/premium/#individual","text":"","title":"Individual"},{"location":"guide/ticker/premium/#p_balance_sheet","text":"Details Description : Retrieves balance sheet data for given symbol(s) Return : pandas.DataFrame Arguments Argument Type Default Required Options frequency str a optional Annual - a Quarter - q trailing bool True optional True False Example aapl = Ticker ( 'aapl' , username = 'username@yahoo.com' , password = 'password' ) df = aapl . p_balance_sheet () df . head () Data symbol asOfDate periodType AccountsPayable AccountsReceivable AccumulatedDepreciation AdditionalPaidInCapital AllowanceForDoubtfulAccountsReceivable AvailableForSaleSecurities BuildingsAndImprovements CapitalStock CashAndCashEquivalents CashCashEquivalentsAndShortTermInvestments CashEquivalents CashFinancial CommercialPaper CommonStock CommonStockEquity CurrentAccruedExpenses CurrentAssets CurrentDebt CurrentDebtAndCapitalLeaseObligation CurrentDeferredAssets CurrentDeferredLiabilities CurrentDeferredRevenue CurrentDeferredTaxesAssets CurrentLiabilities CurrentNotesPayable FinishedGoods ForeignCurrencyTranslationAdjustments GainsLossesNotAffectingRetainedEarnings Goodwill GoodwillAndOtherIntangibleAssets GrossAccountsReceivable GrossPPE IncomeTaxPayable Inventory InvestedCapital InvestmentinFinancialAssets InvestmentsAndAdvances LandAndImprovements Leases LongTermDebt LongTermDebtAndCapitalLeaseObligation MachineryFurnitureEquipment NetDebt NetPPE NetTangibleAssets NonCurrentDeferredAssets NonCurrentDeferredLiabilities NonCurrentDeferredRevenue NonCurrentDeferredTaxesAssets NonCurrentDeferredTaxesLiabilities NonCurrentPrepaidAssets OrdinarySharesNumber OtherCurrentAssets OtherCurrentBorrowings OtherCurrentLiabilities OtherEquityAdjustments OtherEquityInterest OtherIntangibleAssets OtherNonCurrentAssets OtherNonCurrentLiabilities OtherPayable OtherProperties OtherReceivables OtherShortTermInvestments Payables PayablesAndAccruedExpenses PensionandOtherPostRetirementBenefitPlansCurrent PreferredStock PreferredStockEquity PrepaidAssets Properties RawMaterials Receivables RetainedEarnings ShareIssued StockholdersEquity TangibleBookValue TotalAssets TotalCapitalization TotalDebt TotalEquityGrossMinorityInterest TotalLiabilitiesNetMinorityInterest TotalNonCurrentAssets TotalNonCurrentLiabilitiesNetMinorityInterest TotalTaxPayable TradeandOtherPayablesNonCurrent WorkInProcess WorkingCapital aapl 1985-09-30 00:00:00 12M nan nan -8.52e+07 nan nan nan nan nan 3.37e+08 3.37e+08 nan nan nan nan 5.505e+08 nan 8.221e+08 nan nan nan nan nan nan 2.954e+08 nan nan nan nan nan nan nan 1.756e+08 nan 1.67e+08 5.505e+08 nan nan nan nan nan nan nan nan 9.04e+07 5.505e+08 nan 9.03e+07 nan nan 9.03e+07 nan 3.4636e+09 9.79e+07 nan nan nan 2.302e+08 nan 2.37e+07 nan nan nan nan nan nan nan nan nan nan nan nan nan 2.202e+08 3.203e+08 3.4636e+09 5.505e+08 5.505e+08 9.362e+08 5.505e+08 nan 5.505e+08 3.857e+08 1.141e+08 9.03e+07 nan nan nan 5.267e+08 aapl 1986-09-30 00:00:00 12M nan nan -1.147e+08 nan nan nan nan nan 5.762e+08 5.762e+08 nan nan nan nan 6.941e+08 nan 1.0409e+09 nan nan nan nan nan nan 3.285e+08 nan nan nan nan nan nan nan 2.22e+08 nan 1.087e+08 6.941e+08 nan nan nan nan nan nan nan nan 1.073e+08 6.941e+08 nan 1.375e+08 nan nan 1.375e+08 nan 3.50717e+09 9.29e+07 nan nan nan 2.198e+08 nan 1.19e+07 nan nan nan nan nan nan nan nan nan nan nan nan nan 2.631e+08 4.743e+08 3.50717e+09 6.941e+08 6.941e+08 1.1601e+09 6.941e+08 nan 6.941e+08 4.66e+08 1.192e+08 1.375e+08 nan nan nan 7.124e+08 aapl 1987-09-30 00:00:00 12M nan nan -1.587e+08 nan nan nan nan nan 5.651e+08 5.651e+08 nan nan nan nan 8.365e+08 nan 1.3074e+09 nan nan nan nan nan nan 4.787e+08 nan nan nan nan nan nan nan 2.891e+08 nan 2.258e+08 8.365e+08 nan nan nan nan nan nan nan nan 1.304e+08 8.365e+08 nan 1.628e+08 nan nan 1.628e+08 nan 3.53046e+09 1.109e+08 nan nan nan 2.634e+08 nan 4.01e+07 -100000 nan nan nan nan nan nan nan nan nan nan nan nan 4.056e+08 5.731e+08 3.53046e+09 8.365e+08 8.365e+08 1.4779e+09 8.365e+08 nan 8.365e+08 6.414e+08 1.705e+08 1.627e+08 nan nan nan 8.287e+08 aapl 1988-09-30 00:00:00 12M nan nan -2.13e+08 nan nan nan nan nan 5.457e+08 5.457e+08 nan nan nan nan 1.0034e+09 nan 1.783e+09 1.279e+08 1.279e+08 nan nan nan nan 8.271e+08 nan nan nan nan nan nan nan 4.204e+08 nan 4.615e+08 1.1313e+09 nan nan nan nan nan nan nan nan 2.074e+08 1.0034e+09 nan 2.516e+08 nan nan 2.516e+08 nan 3.4375e+09 1.37e+08 nan 6.992e+08 nan 2.269e+08 nan 9.17e+07 nan nan nan nan nan nan nan nan nan nan nan nan nan 6.388e+08 7.765e+08 3.4375e+09 1.0034e+09 1.0034e+09 2.0821e+09 1.0034e+09 1.279e+08 1.0034e+09 1.0787e+09 2.991e+08 2.516e+08 nan nan nan 9.559e+08 aapl 1989-09-30 00:00:00 12M 3.342e+08 nan -3.091e+08 nan nan nan nan nan 4.383e+08 4.383e+08 nan nan nan nan 1.4857e+09 nan 2.2944e+09 5.68e+07 5.68e+07 nan nan nan nan 8.953e+08 nan nan nan nan nan nan nan 6.433e+08 nan 4.754e+08 1.5425e+09 nan nan nan nan nan nan nan nan 3.342e+08 1.4857e+09 nan 3.629e+08 nan nan 3.629e+08 nan 3.53556e+09 5.879e+08 nan 5.043e+08 nan 3.098e+08 nan 1.153e+08 nan nan nan nan nan 3.342e+08 3.342e+08 nan nan nan nan nan nan 7.928e+08 1.1759e+09 3.53556e+09 1.4857e+09 1.4857e+09 2.7439e+09 1.4857e+09 5.68e+07 1.4857e+09 1.2582e+09 4.495e+08 3.629e+08 nan nan nan 1.3991e+09","title":"p_balance_sheet"},{"location":"guide/ticker/premium/#p_cash_flow","text":"Details Description : Retrieves cash flow data for given symbol(s) Return : pandas.DataFrame Arguments Argument Type Default Required Options frequency str a optional Annual - a Quarter - q trailing bool True optional True False Example aapl = Ticker ( 'aapl' , username = 'username@yahoo.com' , password = 'password' ) df = aapl . p_cash_flow () df . head () Data symbol asOfDate periodType BeginningCashPosition CapitalExpenditure CashDividendsPaid CashFlowFromContinuingFinancingActivities ChangeInAccountPayable ChangeInCashSupplementalAsReported ChangeInInventory ChangeInWorkingCapital ChangesInAccountReceivables CommonStockIssuance DeferredIncomeTax DepreciationAndAmortization EndCashPosition FreeCashFlow InvestingCashFlow NetIncome NetOtherFinancingCharges NetOtherInvestingChanges OperatingCashFlow OtherNonCashItems PurchaseOfBusiness PurchaseOfInvestment RepaymentOfDebt RepurchaseOfCapitalStock SaleOfInvestment StockBasedCompensation aapl 1985-09-30 00:00:00 12M nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan 6.12e+07 nan nan nan nan nan nan nan nan nan nan aapl 1986-09-30 00:00:00 12M nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan 1.54e+08 nan nan nan nan nan nan nan nan nan nan aapl 1987-09-30 00:00:00 12M nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan 2.175e+08 nan nan nan nan nan nan nan nan nan nan aapl 1988-09-30 00:00:00 12M nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan 4.003e+08 nan nan nan nan nan nan nan nan nan nan aapl 1989-09-30 00:00:00 12M 3.724e+08 -2.39e+08 -5.03e+07 -3.83e+07 nan 6.59e+07 -1.39e+07 -1.09e+08 nan 9.6e+07 1.113e+08 1.248e+08 0 2.683e+08 -4.031e+08 4.54e+08 nan 3.32e+07 5.073e+08 100000 nan -9.847e+08 nan -1.29e+07 7.874e+08 nan","title":"p_cash_flow"},{"location":"guide/ticker/premium/#p_income_statement","text":"Details Description : Retrieves income statement data for most recent four quarters or most recent four years as well as trailing 12 months. Return : pandas.DataFrame Arguments Argument Type Default Required Options frequency str a optional Annual - a Quarter - q trailing bool True optional True False Example aapl = Ticker ( 'aapl' , username = 'username@yahoo.com' , password = 'password' ) df = aapl . income_statement () df . head () Data symbol asOfDate periodType BasicAverageShares BasicEPS CostOfRevenue DepreciationAmortizationDepletionIncomeStatement DepreciationAndAmortizationInIncomeStatement DilutedAverageShares DilutedEPS DilutedNIAvailtoComStockholders EBIT EBITDA EarningsFromEquityInterest GainOnSaleOfSecurity GrossProfit InterestExpense InterestExpenseNonOperating InterestIncome InterestIncomeNonOperating NetIncome NetIncomeCommonStockholders NetIncomeContinuousOperations NetIncomeExtraordinary NetIncomeFromContinuingAndDiscontinuedOperation NetIncomeFromContinuingOperationNetMinorityInterest NetIncomeFromTaxLossCarryforward NetIncomeIncludingNoncontrollingInterests NetInterestIncome NetNonOperatingInterestIncomeExpense NormalizedEBITDA NormalizedIncome OperatingExpense OperatingIncome OperatingRevenue OtherIncomeExpense OtherNonOperatingIncomeExpenses OtherOperatingExpenses OtherSpecialCharges PretaxIncome ReconciledCostOfRevenue ReconciledDepreciation ResearchAndDevelopment RestructuringAndMergernAcquisition SellingGeneralAndAdministration SpecialIncomeCharges TaxEffectOfUnusualItems TaxProvision TaxRateForCalcs TotalExpenses TotalOperatingIncomeAsReported TotalOtherFinanceCost TotalRevenue TotalUnusualItems TotalUnusualItemsExcludingGoodwill aapl 1985-09-30 00:00:00 12M 3.4272e+09 0.017857 1.076e+09 4.18e+07 4.18e+07 3.4272e+09 0.017857 6.12e+07 1.473e+08 nan nan nan 8.423e+08 nan nan nan nan 6.12e+07 6.12e+07 6.12e+07 nan 6.12e+07 6.12e+07 nan 6.12e+07 nan nan 2.163e+08 7.752e+07 6.95e+08 1.473e+08 1.9183e+09 -2.72e+07 nan nan nan 1.2e+08 1.076e+09 4.18e+07 nan nan 6.532e+08 -2.72e+07 -1.088e+07 5.88e+07 0.4 1.771e+09 1.473e+08 nan 1.9183e+09 -2.72e+07 -2.72e+07 aapl 1986-09-30 00:00:00 12M 3.59333e+09 0.042857 8.4e+08 5.11e+07 5.11e+07 3.59333e+09 0.042857 1.54e+08 2.735e+08 nan nan nan 1.0619e+09 nan nan nan nan 1.54e+08 1.54e+08 1.54e+08 nan 1.54e+08 1.54e+08 nan 1.54e+08 nan nan 2.884e+08 1.3228e+08 7.884e+08 2.735e+08 1.9019e+09 3.62e+07 nan nan nan 3.098e+08 8.4e+08 5.11e+07 nan nan 7.373e+08 3.62e+07 1.448e+07 1.558e+08 0.4 1.6284e+09 2.735e+08 nan 1.9019e+09 3.62e+07 3.62e+07 aapl 1987-09-30 00:00:00 12M 3.66867e+09 0.059286 1.2257e+09 7.05e+07 7.05e+07 3.66867e+09 0.059286 2.175e+08 3.715e+08 nan nan nan 1.4354e+09 nan nan nan nan 2.175e+08 2.175e+08 2.175e+08 nan 2.175e+08 2.175e+08 nan 2.175e+08 nan nan 4.031e+08 1.9416e+08 1.0639e+09 3.715e+08 2.6611e+09 3.89e+07 nan nan nan 4.104e+08 1.2257e+09 7.05e+07 nan nan 9.934e+08 3.89e+07 1.556e+07 1.929e+08 0.4 2.2896e+09 3.715e+08 nan 2.6611e+09 3.89e+07 3.89e+07 aapl 1988-09-30 00:00:00 12M 3.63909e+09 0.11 1.9132e+09 7.77e+07 7.77e+07 3.63909e+09 0.11 4.003e+08 6.203e+08 nan nan nan 2.1582e+09 nan nan nan nan 4.003e+08 4.003e+08 4.003e+08 nan 4.003e+08 4.003e+08 nan 4.003e+08 nan nan 6.622e+08 3.78461e+08 1.5379e+09 6.203e+08 4.0714e+09 3.58e+07 nan nan nan 6.562e+08 1.9132e+09 7.77e+07 nan nan 1.4602e+09 3.58e+07 1.3961e+07 2.559e+08 0.389973 3.4511e+09 6.203e+08 nan 4.0714e+09 3.58e+07 3.58e+07 aapl 1989-09-30 00:00:00 12M 3.59096e+09 0.126429 2.57e+09 1.248e+08 1.248e+08 3.59096e+09 0.126429 4.54e+08 6.343e+08 nan nan nan 2.714e+09 nan nan nan nan 4.54e+08 4.54e+08 4.54e+08 nan 4.54e+08 4.54e+08 nan 4.54e+08 nan nan 6.491e+08 3.86903e+08 2.0797e+09 6.343e+08 5.284e+09 1.1e+08 nan nan nan 7.443e+08 2.57e+09 1.248e+08 nan nan 1.9549e+09 1.1e+08 4.29034e+07 2.903e+08 0.390031 4.6497e+09 6.343e+08 nan 5.284e+09 1.1e+08 1.1e+08","title":"p_income_statement"},{"location":"guide/ticker/premium/#p_valuation_measures","text":"Details Description : Retrieves valuation measures for given symbol(s) Return : pandas.DataFrame Arguments : Argument Type Default Required Options frequency str q optional Annual - a Quarter - q Monthly - m Example aapl = Ticker ( 'aapl' , username = 'username@yahoo.com' , password = 'password' ) df = aapl . p_valuation_measures () df . head () Data symbol asOfDate periodType EnterpriseValue EnterprisesValueEBITDARatio EnterprisesValueRevenueRatio ForwardPeRatio MarketCap PbRatio PeRatio PegRatio PsRatio aapl 1985-09-30 00:00:00 3M 6.37162e+08 -0.468054 1.55519 nan 9.74162e+08 1.7696 15.7505 nan 0.502489 aapl 1985-12-31 00:00:00 3M 1.02207e+09 1.91435 1.91435 nan 1.35907e+09 2.4688 18.9658 nan 0.774886 aapl 1986-03-31 00:00:00 3M 1.43289e+09 3.50425 3.50425 nan 1.76989e+09 3.21505 19.0878 nan 1.02454 aapl 1986-06-30 00:00:00 3M 1.94685e+09 4.34274 4.34274 nan 2.28385e+09 4.14868 15.7348 nan 1.26824 aapl 1986-09-30 00:00:00 3M 1.52184e+09 -1.3617 2.97932 nan 2.09804e+09 3.02267 13.9584 nan 1.13023","title":"p_valuation_measures"},{"location":"guide/ticker/premium/#multiple","text":"","title":"Multiple"},{"location":"guide/ticker/premium/#p_all_financial_data","text":"Details Description : Retrieve all financial data, including income statement, balance sheet, cash flow, and valuation measures. Return : pandas.DataFrame Arguments Argument Type Default Required Options frequency str a optional Annual - a Quarter - q Warning No trailing twelve month (TTM) data will be returned with this method Example aapl = Ticker ( 'aapl' , username = 'username@yahoo.com' , password = 'password' ) aapl . p_all_financial_data () Data symbol asOfDate periodType AccountsPayable AccountsReceivable AccumulatedDepreciation AdditionalPaidInCapital AllowanceForDoubtfulAccountsReceivable AvailableForSaleSecurities BasicAverageShares BasicEPS BeginningCashPosition BuildingsAndImprovements CapitalExpenditure CapitalStock CashAndCashEquivalents CashCashEquivalentsAndShortTermInvestments CashDividendsPaid CashEquivalents CashFinancial CashFlowFromContinuingFinancingActivities ChangeInAccountPayable ChangeInCashSupplementalAsReported ChangeInInventory ChangeInWorkingCapital ChangesInAccountReceivables CommercialPaper CommonStock CommonStockEquity CommonStockIssuance CostOfRevenue CurrentAccruedExpenses CurrentAssets CurrentDebt CurrentDebtAndCapitalLeaseObligation CurrentDeferredAssets CurrentDeferredLiabilities CurrentDeferredRevenue CurrentDeferredTaxesAssets CurrentLiabilities CurrentNotesPayable DeferredIncomeTax DepreciationAmortizationDepletionIncomeStatement DepreciationAndAmortization DepreciationAndAmortizationInIncomeStatement DilutedAverageShares DilutedEPS DilutedNIAvailtoComStockholders EBIT EarningsFromEquityInterest EndCashPosition EnterpriseValue EnterprisesValueEBITDARatio EnterprisesValueRevenueRatio FinishedGoods ForeignCurrencyTranslationAdjustments ForwardPeRatio FreeCashFlow GainOnSaleOfSecurity GainsLossesNotAffectingRetainedEarnings Goodwill GoodwillAndOtherIntangibleAssets GrossAccountsReceivable GrossPPE GrossProfit IncomeTaxPayable InterestExpense InterestExpenseNonOperating InterestIncome InterestIncomeNonOperating Inventory InvestedCapital InvestingCashFlow InvestmentinFinancialAssets InvestmentsAndAdvances LandAndImprovements Leases LongTermDebt LongTermDebtAndCapitalLeaseObligation MachineryFurnitureEquipment MarketCap NetDebt NetIncome NetIncomeCommonStockholders NetIncomeContinuousOperations NetIncomeExtraordinary NetIncomeFromContinuingAndDiscontinuedOperation NetIncomeFromContinuingOperationNetMinorityInterest NetIncomeFromTaxLossCarryforward NetIncomeIncludingNoncontrollingInterests NetInterestIncome NetNonOperatingInterestIncomeExpense NetOtherFinancingCharges NetOtherInvestingChanges NetPPE NetTangibleAssets NonCurrentDeferredAssets NonCurrentDeferredLiabilities NonCurrentDeferredRevenue NonCurrentDeferredTaxesAssets NonCurrentDeferredTaxesLiabilities NonCurrentPrepaidAssets NormalizedEBITDA NormalizedIncome OperatingCashFlow OperatingExpense OperatingIncome OperatingRevenue OrdinarySharesNumber OtherCurrentAssets OtherCurrentBorrowings OtherCurrentLiabilities OtherEquityAdjustments OtherEquityInterest OtherIncomeExpense OtherIntangibleAssets OtherNonCashItems OtherNonCurrentAssets OtherNonCurrentLiabilities OtherNonOperatingIncomeExpenses OtherOperatingExpenses OtherPayable OtherProperties OtherReceivables OtherShortTermInvestments OtherSpecialCharges Payables PayablesAndAccruedExpenses PbRatio PeRatio PegRatio PensionandOtherPostRetirementBenefitPlansCurrent PreferredStock PreferredStockEquity PrepaidAssets PretaxIncome Properties PsRatio PurchaseOfBusiness PurchaseOfInvestment RawMaterials Receivables ReconciledCostOfRevenue ReconciledDepreciation RepaymentOfDebt RepurchaseOfCapitalStock ResearchAndDevelopment RestructuringAndMergernAcquisition RetainedEarnings SaleOfInvestment SellingGeneralAndAdministration ShareIssued SpecialIncomeCharges StockBasedCompensation StockholdersEquity TangibleBookValue TaxEffectOfUnusualItems TaxProvision TaxRateForCalcs TotalAssets TotalCapitalization TotalDebt TotalEquityGrossMinorityInterest TotalExpenses TotalLiabilitiesNetMinorityInterest TotalNonCurrentAssets TotalNonCurrentLiabilitiesNetMinorityInterest TotalOperatingIncomeAsReported TotalOtherFinanceCost TotalRevenue TotalTaxPayable TotalUnusualItems TotalUnusualItemsExcludingGoodwill TradeandOtherPayablesNonCurrent WorkInProcess WorkingCapital aapl 1985-09-30 00:00:00 12M nan nan -8.52e+07 nan nan nan 3.4272e+09 0.017857 nan nan nan nan 3.37e+08 3.37e+08 nan nan nan nan nan nan nan nan nan nan nan 5.505e+08 nan 1.076e+09 nan 8.221e+08 nan nan nan nan nan nan 2.954e+08 nan nan 4.18e+07 nan 4.18e+07 3.4272e+09 0.017857 6.12e+07 1.473e+08 nan nan 6.37162e+08 3.36945 0.332149 nan nan nan nan nan nan nan nan nan 1.756e+08 8.423e+08 nan nan nan nan nan 1.67e+08 5.505e+08 nan nan nan nan nan nan nan nan 9.74162e+08 nan 6.12e+07 6.12e+07 6.12e+07 nan 6.12e+07 6.12e+07 nan 6.12e+07 nan nan nan nan 9.04e+07 5.505e+08 nan 9.03e+07 nan nan 9.03e+07 nan 2.163e+08 7.752e+07 nan 6.95e+08 1.473e+08 1.9183e+09 3.4636e+09 9.79e+07 nan nan nan 2.302e+08 -2.72e+07 nan nan 2.37e+07 nan nan nan nan nan nan nan nan nan nan 1.7696 15.7505 nan nan nan nan nan 1.2e+08 nan 0.502489 nan nan nan 2.202e+08 1.076e+09 4.18e+07 nan nan nan nan 3.203e+08 nan 6.532e+08 3.4636e+09 -2.72e+07 nan 5.505e+08 5.505e+08 -1.088e+07 5.88e+07 0.4 9.362e+08 5.505e+08 nan 5.505e+08 1.771e+09 3.857e+08 1.141e+08 9.03e+07 1.473e+08 nan 1.9183e+09 nan -2.72e+07 -2.72e+07 nan nan 5.267e+08 aapl 1986-09-30 00:00:00 12M nan nan -1.147e+08 nan nan nan 3.59333e+09 0.042857 nan nan nan nan 5.762e+08 5.762e+08 nan nan nan nan nan nan nan nan nan nan nan 6.941e+08 nan 8.4e+08 nan 1.0409e+09 nan nan nan nan nan nan 3.285e+08 nan nan 5.11e+07 nan 5.11e+07 3.59333e+09 0.042857 1.54e+08 2.735e+08 nan nan 1.52184e+09 4.68835 0.800167 nan nan nan nan nan nan nan nan nan 2.22e+08 1.0619e+09 nan nan nan nan nan 1.087e+08 6.941e+08 nan nan nan nan nan nan nan nan 2.09804e+09 nan 1.54e+08 1.54e+08 1.54e+08 nan 1.54e+08 1.54e+08 nan 1.54e+08 nan nan nan nan 1.073e+08 6.941e+08 nan 1.375e+08 nan nan 1.375e+08 nan 2.884e+08 1.3228e+08 nan 7.884e+08 2.735e+08 1.9019e+09 3.50717e+09 9.29e+07 nan nan nan 2.198e+08 3.62e+07 nan nan 1.19e+07 nan nan nan nan nan nan nan nan nan nan 3.02267 13.9584 nan nan nan nan nan 3.098e+08 nan 1.13023 nan nan nan 2.631e+08 8.4e+08 5.11e+07 nan nan nan nan 4.743e+08 nan 7.373e+08 3.50717e+09 3.62e+07 nan 6.941e+08 6.941e+08 1.448e+07 1.558e+08 0.4 1.1601e+09 6.941e+08 nan 6.941e+08 1.6284e+09 4.66e+08 1.192e+08 1.375e+08 2.735e+08 nan 1.9019e+09 nan 3.62e+07 3.62e+07 nan nan 7.124e+08 aapl 1987-09-30 00:00:00 12M nan nan -1.587e+08 nan nan nan 3.66867e+09 0.059286 nan nan nan nan 5.651e+08 5.651e+08 nan nan nan nan nan nan nan nan nan nan nan 8.365e+08 nan 1.2257e+09 nan 1.3074e+09 nan nan nan nan nan nan 4.787e+08 nan nan 7.05e+07 nan 7.05e+07 3.66867e+09 0.059286 2.175e+08 3.715e+08 nan nan 6.55887e+09 14.8391 2.46472 nan nan nan nan nan nan nan nan nan 2.891e+08 1.4354e+09 nan nan nan nan nan 2.258e+08 8.365e+08 nan nan nan nan nan nan nan nan 7.12397e+09 nan 2.175e+08 2.175e+08 2.175e+08 nan 2.175e+08 2.175e+08 nan 2.175e+08 nan nan nan nan 1.304e+08 8.365e+08 nan 1.628e+08 nan nan 1.628e+08 nan 4.031e+08 1.9416e+08 nan 1.0639e+09 3.715e+08 2.6611e+09 3.53046e+09 1.109e+08 nan nan nan 2.634e+08 3.89e+07 nan nan 4.01e+07 -100000 nan nan nan nan nan nan nan nan nan 8.5164 34.036 nan nan nan nan nan 4.104e+08 nan 2.78188 nan nan nan 4.056e+08 1.2257e+09 7.05e+07 nan nan nan nan 5.731e+08 nan 9.934e+08 3.53046e+09 3.89e+07 nan 8.365e+08 8.365e+08 1.556e+07 1.929e+08 0.4 1.4779e+09 8.365e+08 nan 8.365e+08 2.2896e+09 6.414e+08 1.705e+08 1.627e+08 3.715e+08 nan 2.6611e+09 nan 3.89e+07 3.89e+07 nan nan 8.287e+08 aapl 1988-09-30 00:00:00 12M nan nan -2.13e+08 nan nan nan 3.63909e+09 0.11 nan nan nan nan 5.457e+08 5.457e+08 nan nan nan nan nan nan nan nan nan nan nan 1.0034e+09 nan 1.9132e+09 nan 1.783e+09 1.279e+08 1.279e+08 nan nan nan nan 8.271e+08 nan nan 7.77e+07 nan 7.77e+07 3.63909e+09 0.11 4.003e+08 6.203e+08 nan nan 4.89192e+09 7.00848 1.20153 nan nan nan nan nan nan nan nan nan 4.204e+08 2.1582e+09 nan nan nan nan nan 4.615e+08 1.1313e+09 nan nan nan nan nan nan nan nan 5.30972e+09 nan 4.003e+08 4.003e+08 4.003e+08 nan 4.003e+08 4.003e+08 nan 4.003e+08 nan nan nan nan 2.074e+08 1.0034e+09 nan 2.516e+08 nan nan 2.516e+08 nan 6.622e+08 3.78461e+08 nan 1.5379e+09 6.203e+08 4.0714e+09 3.4375e+09 1.37e+08 nan 6.992e+08 nan 2.269e+08 3.58e+07 nan nan 9.17e+07 nan nan nan nan nan nan nan nan nan nan 5.29172 14.0422 nan nan nan nan nan 6.562e+08 nan 1.38063 nan nan nan 6.388e+08 1.9132e+09 7.77e+07 nan nan nan nan 7.765e+08 nan 1.4602e+09 3.4375e+09 3.58e+07 nan 1.0034e+09 1.0034e+09 1.3961e+07 2.559e+08 0.389973 2.0821e+09 1.0034e+09 1.279e+08 1.0034e+09 3.4511e+09 1.0787e+09 2.991e+08 2.516e+08 6.203e+08 nan 4.0714e+09 nan 3.58e+07 3.58e+07 nan nan 9.559e+08 aapl 1989-09-30 00:00:00 12M 3.342e+08 nan -3.091e+08 nan nan nan 3.59096e+09 0.126429 3.724e+08 nan -2.39e+08 nan 4.383e+08 4.383e+08 -5.03e+07 nan nan -3.83e+07 nan 6.59e+07 -1.39e+07 -1.09e+08 nan nan nan 1.4857e+09 9.6e+07 2.57e+09 nan 2.2944e+09 5.68e+07 5.68e+07 nan nan nan nan 8.953e+08 nan 1.113e+08 1.248e+08 1.248e+08 1.248e+08 3.59096e+09 0.126429 4.54e+08 6.343e+08 nan 0 5.20121e+09 6.85182 0.984333 nan nan nan 2.683e+08 nan nan nan nan nan 6.433e+08 2.714e+09 nan nan nan nan nan 4.754e+08 1.5425e+09 -4.031e+08 nan nan nan nan nan nan nan 5.61901e+09 nan 4.54e+08 4.54e+08 4.54e+08 nan 4.54e+08 4.54e+08 nan 4.54e+08 nan nan nan 3.32e+07 3.342e+08 1.4857e+09 nan 3.629e+08 nan nan 3.629e+08 nan 6.491e+08 3.86903e+08 5.073e+08 2.0797e+09 6.343e+08 5.284e+09 3.53556e+09 5.879e+08 nan 5.043e+08 nan 3.098e+08 1.1e+08 nan 100000 1.153e+08 nan nan nan nan nan nan nan nan 3.342e+08 3.342e+08 5.59997 14.2628 nan nan nan nan nan 7.443e+08 nan 1.08872 nan -9.847e+08 nan 7.928e+08 2.57e+09 1.248e+08 nan -1.29e+07 nan nan 1.1759e+09 7.874e+08 1.9549e+09 3.53556e+09 1.1e+08 nan 1.4857e+09 1.4857e+09 4.29034e+07 2.903e+08 0.390031 2.7439e+09 1.4857e+09 5.68e+07 1.4857e+09 4.6497e+09 1.2582e+09 4.495e+08 3.629e+08 6.343e+08 nan 5.284e+09 nan 1.1e+08 1.1e+08 nan nan 1.3991e+09","title":"p_all_financial_data"},{"location":"guide/ticker/premium/#p_get_financial_data","text":"Details Description : Obtain specific data from either cash flow, income statement, balance sheet, or valuation measures. Return : pandas.DataFrame Arguments Argument Type Default Required Options types list or str None Required See options below frequency str a optional Annual - a Quarter - q trailing bool True optional True False Warning If you try and use all of the options below AND trailing=True , you will receive an error because the requested URL will be too long Balance Sheet [ 'AccountsPayable' , 'AccountsReceivable' , 'AccruedInterestReceivable' , 'AccumulatedDepreciation' , 'AdditionalPaidInCapital' , 'AllowanceForDoubtfulAccountsReceivable' , 'AssetsHeldForSaleCurrent' , 'AvailableForSaleSecurities' , 'BuildingsAndImprovements' , 'CapitalLeaseObligations' , 'CapitalStock' , 'CashAndCashEquivalents' , 'CashCashEquivalentsAndShortTermInvestments' , 'CashEquivalents' , 'CashFinancial' , 'CommercialPaper' , 'CommonStock' , 'CommonStockEquity' , 'ConstructionInProgress' , 'CurrentAccruedExpenses' , 'CurrentAssets' , 'CurrentCapitalLeaseObligation' , 'CurrentDebt' , 'CurrentDebtAndCapitalLeaseObligation' , 'CurrentDeferredAssets' , 'CurrentDeferredLiabilities' , 'CurrentDeferredRevenue' , 'CurrentDeferredTaxesAssets' , 'CurrentDeferredTaxesLiabilities' , 'CurrentLiabilities' , 'CurrentNotesPayable' , 'CurrentProvisions' , 'DefinedPensionBenefit' , 'DerivativeProductLiabilities' , 'DividendsPayable' , 'DuefromRelatedPartiesCurrent' , 'DuefromRelatedPartiesNonCurrent' , 'DuetoRelatedPartiesCurrent' , 'DuetoRelatedPartiesNonCurrent' , 'EmployeeBenefits' , 'FinancialAssets' , 'FinancialAssetsDesignatedasFairValueThroughProfitorLossTotal' , 'FinishedGoods' , 'FixedAssetsRevaluationReserve' , 'ForeignCurrencyTranslationAdjustments' , 'GainsLossesNotAffectingRetainedEarnings' , 'GeneralPartnershipCapital' , 'Goodwill' , 'GoodwillAndOtherIntangibleAssets' , 'GrossAccountsReceivable' , 'GrossPPE' , 'HedgingAssetsCurrent' , 'HeldToMaturitySecurities' , 'IncomeTaxPayable' , 'InterestPayable' , 'InventoriesAdjustmentsAllowances' , 'Inventory' , 'InvestedCapital' , 'InvestmentProperties' , 'InvestmentinFinancialAssets' , 'InvestmentsAndAdvances' , 'InvestmentsInOtherVenturesUnderEquityMethod' , 'InvestmentsinAssociatesatCost' , 'InvestmentsinJointVenturesatCost' , 'InvestmentsinSubsidiariesatCost' , 'LandAndImprovements' , 'Leases' , 'LiabilitiesHeldforSaleNonCurrent' , 'LimitedPartnershipCapital' , 'LineOfCredit' , 'LoansReceivable' , 'LongTermCapitalLeaseObligation' , 'LongTermDebt' , 'LongTermDebtAndCapitalLeaseObligation' , 'LongTermEquityInvestment' , 'LongTermProvisions' , 'MachineryFurnitureEquipment' , 'MinimumPensionLiabilities' , 'MinorityInterest' , 'NetDebt' , 'NetPPE' , 'NetTangibleAssets' , 'NonCurrentAccountsReceivable' , 'NonCurrentAccruedExpenses' , 'NonCurrentDeferredAssets' , 'NonCurrentDeferredLiabilities' , 'NonCurrentDeferredRevenue' , 'NonCurrentDeferredTaxesAssets' , 'NonCurrentDeferredTaxesLiabilities' , 'NonCurrentNoteReceivables' , 'NonCurrentPensionAndOtherPostretirementBenefitPlans' , 'NonCurrentPrepaidAssets' , 'NotesReceivable' , 'OrdinarySharesNumber' , 'OtherCapitalStock' , 'OtherCurrentAssets' , 'OtherCurrentBorrowings' , 'OtherCurrentLiabilities' , 'OtherEquityAdjustments' , 'OtherEquityInterest' , 'OtherIntangibleAssets' , 'OtherInventories' , 'OtherInvestments' , 'OtherNonCurrentAssets' , 'OtherNonCurrentLiabilities' , 'OtherPayable' , 'OtherProperties' , 'OtherReceivables' , 'OtherShortTermInvestments' , 'Payables' , 'PayablesAndAccruedExpenses' , 'PensionandOtherPostRetirementBenefitPlansCurrent' , 'PreferredSecuritiesOutsideStockEquity' , 'PreferredSharesNumber' , 'PreferredStock' , 'PreferredStockEquity' , 'PrepaidAssets' , 'Properties' , 'RawMaterials' , 'Receivables' , 'ReceivablesAdjustmentsAllowances' , 'RestrictedCash' , 'RestrictedCommonStock' , 'RetainedEarnings' , 'ShareIssued' , 'StockholdersEquity' , 'TangibleBookValue' , 'TaxesReceivable' , 'TotalAssets' , 'TotalCapitalization' , 'TotalDebt' , 'TotalEquityGrossMinorityInterest' , 'TotalLiabilitiesNetMinorityInterest' , 'TotalNonCurrentAssets' , 'TotalNonCurrentLiabilitiesNetMinorityInterest' , 'TotalPartnershipCapital' , 'TotalTaxPayable' , 'TradeandOtherPayablesNonCurrent' , 'TradingSecurities' , 'TreasurySharesNumber' , 'TreasuryStock' , 'UnrealizedGainLoss' , 'WorkInProcess' , 'WorkingCapital' ] Cash Flow [ 'RepaymentOfDebt' , 'RepurchaseOfCapitalStock' , 'CashDividendsPaid' , 'CommonStockIssuance' , 'ChangeInWorkingCapital' , 'CapitalExpenditure' , 'CashFlowFromContinuingFinancingActivities' , 'NetIncome' , 'FreeCashFlow' , 'ChangeInCashSupplementalAsReported' , 'SaleOfInvestment' , 'EndCashPosition' , 'OperatingCashFlow' , 'DeferredIncomeTax' , 'NetOtherInvestingChanges' , 'ChangeInAccountPayable' , 'NetOtherFinancingCharges' , 'PurchaseOfInvestment' , 'ChangeInInventory' , 'DepreciationAndAmortization' , 'PurchaseOfBusiness' , 'InvestingCashFlow' , 'ChangesInAccountReceivables' , 'StockBasedCompensation' , 'OtherNonCashItems' , 'BeginningCashPosition' ] Income Statement [ 'Amortization' , 'AmortizationOfIntangiblesIncomeStatement' , 'AverageDilutionEarnings' , 'BasicAccountingChange' , 'BasicAverageShares' , 'BasicContinuousOperations' , 'BasicDiscontinuousOperations' , 'BasicEPS' , 'BasicEPSOtherGainsLosses' , 'BasicExtraordinary' , 'ContinuingAndDiscontinuedBasicEPS' , 'ContinuingAndDiscontinuedDilutedEPS' , 'CostOfRevenue' , 'DepletionIncomeStatement' , 'DepreciationAmortizationDepletionIncomeStatement' , 'DepreciationAndAmortizationInIncomeStatement' , 'DepreciationIncomeStatement' , 'DilutedAccountingChange' , 'DilutedAverageShares' , 'DilutedContinuousOperations' , 'DilutedDiscontinuousOperations' , 'DilutedEPS' , 'DilutedEPSOtherGainsLosses' , 'DilutedExtraordinary' , 'DilutedNIAvailtoComStockholders' , 'DividendPerShare' , 'EBIT' , 'EBITDA' , 'EarningsFromEquityInterest' , 'EarningsFromEquityInterestNetOfTax' , 'ExciseTaxes' , 'GainOnSaleOfBusiness' , 'GainOnSaleOfPPE' , 'GainOnSaleOfSecurity' , 'GeneralAndAdministrativeExpense' , 'GrossProfit' , 'ImpairmentOfCapitalAssets' , 'InsuranceAndClaims' , 'InterestExpense' , 'InterestExpenseNonOperating' , 'InterestIncome' , 'InterestIncomeNonOperating' , 'MinorityInterests' , 'NetIncome' , 'NetIncomeCommonStockholders' , 'NetIncomeContinuousOperations' , 'NetIncomeDiscontinuousOperations' , 'NetIncomeExtraordinary' , 'NetIncomeFromContinuingAndDiscontinuedOperation' , 'NetIncomeFromContinuingOperationNetMinorityInterest' , 'NetIncomeFromTaxLossCarryforward' , 'NetIncomeIncludingNoncontrollingInterests' , 'NetInterestIncome' , 'NetNonOperatingInterestIncomeExpense' , 'NormalizedBasicEPS' , 'NormalizedDilutedEPS' , 'NormalizedEBITDA' , 'NormalizedIncome' , 'OperatingExpense' , 'OperatingIncome' , 'OperatingRevenue' , 'OtherGandA' , 'OtherIncomeExpense' , 'OtherNonOperatingIncomeExpenses' , 'OtherOperatingExpenses' , 'OtherSpecialCharges' , 'OtherTaxes' , 'OtherunderPreferredStockDividend' , 'PreferredStockDividends' , 'PretaxIncome' , 'ProvisionForDoubtfulAccounts' , 'ReconciledCostOfRevenue' , 'ReconciledDepreciation' , 'RentAndLandingFees' , 'RentExpenseSupplemental' , 'ReportedNormalizedBasicEPS' , 'ReportedNormalizedDilutedEPS' , 'ResearchAndDevelopment' , 'RestructuringAndMergernAcquisition' , 'SalariesAndWages' , 'SecuritiesAmortization' , 'SellingAndMarketingExpense' , 'SellingGeneralAndAdministration' , 'SpecialIncomeCharges' , 'TaxEffectOfUnusualItems' , 'TaxLossCarryforwardBasicEPS' , 'TaxLossCarryforwardDilutedEPS' , 'TaxProvision' , 'TaxRateForCalcs' , 'TotalExpenses' , 'TotalOperatingIncomeAsReported' , 'TotalOtherFinanceCost' , 'TotalRevenue' , 'TotalUnusualItems' , 'TotalUnusualItemsExcludingGoodwill' , 'WriteOff' ] Valuation Measures [ 'ForwardPeRatio' , 'PsRatio' , 'PbRatio' , 'EnterprisesValueEBITDARatio' , 'EnterprisesValueRevenueRatio' , 'PeRatio' , 'MarketCap' , 'EnterpriseValue' , 'PegRatio' ] Example aapl = Ticker ( 'aapl' , username = 'username@yahoo.com' , password = 'password' ) types = [ 'TotalDebt' , 'TotalAssets' , 'EBIT' , 'EBITDA' , 'PeRatio' ] aapl . p_get_financial_data ( types , trailing = False ) Data symbol asOfDate periodType EBIT EBITDA PeRatio TotalAssets TotalDebt aapl 1985-09-30 00:00:00 12M 1.473e+08 nan 15.7505 9.362e+08 nan aapl 1986-09-30 00:00:00 12M 2.735e+08 nan 13.9584 1.1601e+09 nan aapl 1987-09-30 00:00:00 12M 3.715e+08 nan 34.036 1.4779e+09 nan aapl 1988-09-30 00:00:00 12M 6.203e+08 nan 14.0422 2.0821e+09 1.279e+08 aapl 1989-09-30 00:00:00 12M 6.343e+08 nan 14.2628 2.7439e+09 5.68e+07","title":"p_get_financial_data"},{"location":"guide/ticker/premium/#miscellaneous","text":"","title":"Miscellaneous"},{"location":"guide/ticker/premium/#p_company_360","text":"Details Description : Retrieve data related to innovation, hiring, insider sentiment, developments, supply chain, sustainability, and company outlook for given symbol(s) Return : dict Example aapl = Ticker ( 'aapl' , username = 'username@yahoo.com' , password = 'password' ) aapl . p_company_360 Data { 'aapl' : { 'metaData' : { 'symbol' : 'aapl' }, 'innovations' : { 'score' : 94.0 , 'text' : 'Outperform' , 'sectorAvg' : 52.6145648312611 }, 'sustainability' : { 'totalScore' : 64 , 'totalScorePercentile' : 83 , 'environmentScore' : 66 , 'environmentScorePercentile' : 85 , 'socialScore' : 66 , 'socialScorePercentile' : 70 , 'governanceScore' : 66 , 'governanceScorePercentile' : 89 , 'controversyLevel' : 2 }, 'insiderSentiments' : { 'vickersIndex' : - 57 , 'vickersIndexChange' : 0 , 'sentimentText' : 'Negative' }, 'significantDevelopments' : [{ 'id' : 4252812 , 'symbol' : 'AAPL' , 'date' : '2020-07-30' , 'headline' : 'Apple Reports Q3 Earnings Of $2.58 Per Share' }, { 'id' : 4248528 , 'symbol' : 'AAPL' , 'date' : '2020-07-23' , 'headline' : 'Apple Faces Multi-State Consumer Protection Probe - Axios' }, { 'id' : 4246944 , 'symbol' : 'AAPL' , 'date' : '2020-07-21' , 'headline' : 'Apple To Become Carbon Neutral Across Manufacturing Supply Chain, Product Life Cycle By 2030' }, { 'id' : 4244661 , 'symbol' : 'AAPL' , 'date' : '2020-07-15' , 'headline' : 'TomTom Eyes Better Operational Revenues In H2 - Conf Call' }, { 'id' : 4241255 , 'symbol' : 'AAPL' , 'date' : '2020-07-07' , 'headline' : 'Apple Opts For OLED Screens For Entire 5G iPhone Range - Nikkei' }], 'companySnapshot' : { 'sectorInfo' : 'Technology' , 'company' : { 'innovativeness' : 0.9983 , 'hiring' : 0.9795 , 'sustainability' : 0.8240000000000001 , 'insiderSentiments' : 0.2217 , 'earningsReports' : 0.8340000000000001 , 'dividends' : 0.25 }, 'sector' : { 'innovativeness' : 0.5 , 'hiring' : 0.5 , 'sustainability' : 0.5 , 'insiderSentiments' : 0.5 , 'earningsReports' : 0.5 , 'dividends' : 0.5 } }, 'hiring' : [{ 'month' : 2 , 'year' : 2019 , 'hiringChangePercent' : - 0.18330134 , 'sectorAvgChangePercent' : - 0.21709615 }, { 'month' : 3 , 'year' : 2019 , 'hiringChangePercent' : 0.89659226 , 'sectorAvgChangePercent' : 0.998416 }, { 'month' : 4 , 'year' : 2019 , 'hiringChangePercent' : - 0.19826518 , 'sectorAvgChangePercent' : - 0.48218337 }, { 'month' : 5 , 'year' : 2019 , 'hiringChangePercent' : - 0.311051 , 'sectorAvgChangePercent' : - 0.3965309 }, { 'month' : 6 , 'year' : 2019 , 'hiringChangePercent' : - 0.11497476 , 'sectorAvgChangePercent' : - 0.13750465 }, { 'month' : 7 , 'year' : 2019 , 'hiringChangePercent' : - 0.20278834 , 'sectorAvgChangePercent' : - 0.14868993 }, { 'month' : 8 , 'year' : 2019 , 'hiringChangePercent' : 0.057233706 , 'sectorAvgChangePercent' : 0.18088417 }, { 'month' : 9 , 'year' : 2019 , 'hiringChangePercent' : - 0.25413534 , 'sectorAvgChangePercent' : - 0.2411767 }, { 'month' : 10 , 'year' : 2019 , 'hiringChangePercent' : 0.25705644 , 'sectorAvgChangePercent' : - 0.03286806 }, { 'month' : 11 , 'year' : 2019 , 'hiringChangePercent' : - 0.21892542 , 'sectorAvgChangePercent' : - 0.17327583 }, { 'month' : 12 , 'year' : 2019 , 'hiringChangePercent' : 0.1550308 , 'sectorAvgChangePercent' : - 0.012864476 }, { 'month' : 1 , 'year' : 2020 , 'hiringChangePercent' : - 0.13511111 , 'sectorAvgChangePercent' : - 0.031074993 }, { 'month' : 2 , 'year' : 2020 , 'hiringChangePercent' : - 0.18602261 , 'sectorAvgChangePercent' : - 0.1585546 }, { 'month' : 3 , 'year' : 2020 , 'hiringChangePercent' : 0.24368687 , 'sectorAvgChangePercent' : 0.90801805 }, { 'month' : 4 , 'year' : 2020 , 'hiringChangePercent' : - 0.17766498 , 'sectorAvgChangePercent' : - 0.59851396 }, { 'month' : 5 , 'year' : 2020 , 'hiringChangePercent' : - 0.24444444 , 'sectorAvgChangePercent' : - 0.12799595 }, { 'month' : 6 , 'year' : 2020 , 'hiringChangePercent' : 0.0 , 'sectorAvgChangePercent' : - 0.04588681 }, { 'month' : 7 , 'year' : 2020 , 'hiringChangePercent' : - 0.6535948 , 'sectorAvgChangePercent' : - 0.6510271 }], 'supplyChain' : { 'topSuppliers' : [{ 'entityYName' : 'POSCO' , 'entityYTicker' : 'PKXFF' , 'relationToType' : 'Supplier' , 'exposureTotal' : 0.016477 , 'exposureFinancial' : 0.000125 , 'exposureMedia' : 0.000301 , 'exposureEconomic' : 0.049003 , 'economicValue' : 8136720000.0 }, { 'entityYName' : 'ENEOS Holdings, Inc.' , 'entityYTicker' : 'JXHGF' , 'relationToType' : 'Supplier' , 'exposureTotal' : 0.012025 , 'exposureFinancial' : 1.7e-05 , 'exposureMedia' : 0.00015 , 'exposureEconomic' : 0.035907 , 'economicValue' : 5962190000.0 }, { 'entityYName' : 'Jabil Inc.' , 'entityYTicker' : 'JBL' , 'relationToType' : 'Supplier' , 'exposureTotal' : 0.018778 , 'exposureFinancial' : 0.020268 , 'exposureMedia' : 0.000902 , 'exposureEconomic' : 0.035164 , 'economicValue' : 5838770000.0 }, { 'entityYName' : 'Quanta Computer Inc.' , 'entityYTicker' : '2382.TW' , 'relationToType' : 'Supplier' , 'exposureTotal' : 0.014186 , 'exposureFinancial' : 0.007526 , 'exposureMedia' : 0.001955 , 'exposureEconomic' : 0.033077 , 'economicValue' : 5492230000.0 }, { 'entityYName' : 'Hon Hai Precision Industry Co., Ltd.' , 'entityYTicker' : 'HNHAF' , 'relationToType' : 'Supplier' , 'exposureTotal' : 0.012083 , 'exposureFinancial' : 0.003068 , 'exposureMedia' : 0.00015 , 'exposureEconomic' : 0.033029 , 'economicValue' : 5484340000.0 }], 'topCustomers' : [{ 'entityYName' : 'Costco Wholesale Corporation' , 'entityYTicker' : 'COST' , 'relationToType' : 'Customer' , 'exposureTotal' : 0.034341 , 'exposureFinancial' : 0.018305 , 'exposureMedia' : 0.034568 , 'exposureEconomic' : 0.050148 , 'economicValue' : 10429790000.0 }, { 'entityYName' : 'AT&T Inc.' , 'entityYTicker' : 'T' , 'relationToType' : 'Customer' , 'exposureTotal' : 0.078284 , 'exposureFinancial' : 0.032478 , 'exposureMedia' : 0.158848 , 'exposureEconomic' : 0.043524 , 'economicValue' : 9052120000.0 }, { 'entityYName' : 'Cencosud S.A.' , 'entityYTicker' : 'CENCOSUD.SN' , 'relationToType' : 'Customer' , 'exposureTotal' : 0.012515 , 'exposureFinancial' : 0.000711 , 'exposureMedia' : 0.000823 , 'exposureEconomic' : 0.03601 , 'economicValue' : 7489330000.0 }, { 'entityYName' : 'Vodafone Idea Limited' , 'entityYTicker' : 'IDEA.NS' , 'relationToType' : 'Customer' , 'exposureTotal' : 0.011229 , 'exposureFinancial' : 8.8e-05 , 'exposureMedia' : 0.000823 , 'exposureEconomic' : 0.032777 , 'economicValue' : 6816940000.0 }, { 'entityYName' : 'Mazda Motor Corporation' , 'entityYTicker' : 'MZDAF' , 'relationToType' : 'Customer' , 'exposureTotal' : 0.011536 , 'exposureFinancial' : 0.000236 , 'exposureMedia' : 0.001646 , 'exposureEconomic' : 0.032727 , 'economicValue' : 6806610000.0 }], 'remainingSuppliers' : 0 , 'remainingCustomers' : 0 }, 'earnings' : [{ 'quarter' : 'Q3' , 'year' : '2017' , 'actual' : 0.9 , 'consensus' : 0.96 }, { 'quarter' : 'Q4' , 'year' : '2017' , 'actual' : 1.1 , 'consensus' : 1.04 }, { 'quarter' : 'Q1' , 'year' : '2018' , 'actual' : 1.1 , 'consensus' : 1.1 }], 'dividend' : { 'amount' : 0.82 , 'date' : '2020-05-08' , 'yield' : 0.0101 , 'sectorMedian' : 0.0172 , 'marketMedian' : 0.0379 }, 'companyOutlookSummary' : { 'innovationTrend' : 'trending up' , 'innovationScore' : 94.0 , 'innovationPerformance' : 'outperforming' , 'hiringTrend' : 'decreased' , 'insiderSentiment' : 'negative' , 'topSupplier' : 'POSCO' , 'dividendsPerformance' : 'lower' } } }","title":"p_company_360"},{"location":"guide/ticker/premium/#p_corporate_events","text":"Details Description : Obtain significant corporate events related to given symbol(s) Return : pandas.DataFrame Example aapl = Ticker ( 'aapl' , username = 'username@yahoo.com' , password = 'password' ) df = aapl . p_corporate_events df . head () Data id significance headline description parentTopics ('aapl', Timestamp('2011-01-17 00:00:00')) 2064853 1 Apple Inc.'s Steve Jobs Takes Second Medical Leave-Reuters Reuters reported that Apple Inc. Chief Executive Steve Jobs is taking medical leave for the second time in as many years, sending its shares tumbling as the unexpected news revived concerns over the long-term future of Apple. The news, which was disclosed early on a U.S. holiday when markets were closed, came nearly two years to the date after Jobs first took a six-month break to undergo a liver transplant. Unlike the previous announcement, Apple did not specify any timeline for Jobs to resume his duties. Jobs said Chief Operating Officer Tim Cook would take responsibility for day-to-day operations but he would continue to be Chief Executive and be involved in major strategic decisions. Restructuring/Reorganization/Related ('aapl', Timestamp('2011-08-24 00:00:00')) 2389197 1 Steve Jobs Resigns as CEO of Apple Inc.; Names Tim Cook As New CEO Apple Inc.'s Board of Directors announced that Steve Jobs has resigned as Chief Executive Officer (CEO), and the Board has named Tim Cook, previously Apple's Chief Operating Officer, as the Company's new CEO. Jobs has been elected Chairman of the Board and Cook will join the Board, effective immediately. Jobs submitted his resignation to the Board on August 24, 2011, and recommended that the Board implement its succession plan and name Tim Cook as CEO. Restructuring/Reorganization/Related ('aapl', Timestamp('2011-10-05 00:00:00')) 2410928 1 Apple Inc.'s Steve Jobs Passes Away Apple Inc. announced that Steve Jobs, Chairman of the Company, passed away. Restructuring/Reorganization/Related ('aapl', Timestamp('2011-11-15 00:00:00')) 2435048 1 Apple Inc. Names Arthur D. Levinson As Chairman Of Board Apple Inc. announced that it named Arthur D. Levinson, Ph. D. as the Company\u2019s non-executive Chairman of the Board. Levinson has been a co-lead director of Apple\u2019s board since 2005, has served on all three board committees\u2014audit and finance, nominating and corporate governance, and compensation\u2014and will continue to serve on the audit committee. Apple also announced that Robert A. Iger, President and Chief Executive Officer of The Walt Disney Company, will join Apple\u2019s board and will serve on the audit committee. Restructuring/Reorganization/Related ('aapl', Timestamp('2014-03-04 00:00:00')) 2935872 2 Apple Inc's Peter Oppenheimer to retire at the end of september Apple Inc:Says that Peter Oppenheimer, its senior vice president and CFO, will retire at the end of September.Luca Maestri, Apple's vice president of Finance and corporate controller, will succeed Peter as CFO.Peter will transition the CFO role to Luca in June and the balance of his responsibilities over the remaining time allowing for a professional and seamless transition. Restructuring/Reorganization/Related","title":"p_corporate_events"},{"location":"guide/ticker/premium/#p_ideas","text":"Tip See Research","title":"p_ideas"},{"location":"guide/ticker/premium/#p_reports","text":"Tip See Research","title":"p_reports"},{"location":"guide/ticker/premium/#p_value_analyzer_drilldown","text":"Details Description : Valuation metrics for given symbol(s) Return : dict Example aapl = Ticker ( 'aapl' , username = 'username@yahoo.com' , password = 'password' ) aapl . p_value_analyzer_drilldown Data { 'aapl' : { 'currentPrice' : 425.04 , 'revenue' : 260174000000.0 , 'epsGrowth' : 11.02 , 'peRatio' : 28.5418 , 'dps' : 3.28 , 'priceBookRatio' : 21.010402 , 'symbol' : 'aapl' , 'valuationDescription' : 'Overvalued' , 'valuationColor' : 0.0 , 'outlook' : '-8%' , 'currentFairValue' : 146.5 , 'timeSeries' : [{ 'timestamp' : [ 20101231 , 20111231 , 20121231 , 20131231 , 20141231 , 20151231 , 20161231 , 20171231 , 20181231 , 20191231 ], 'annualEps' : [{ 'basicNetEps' : 2.201429 , 'yoyPercentage' : 66.022039 , 'yoyPercentageFormatted' : '66.02%' }, { 'basicNetEps' : 4.007143 , 'yoyPercentage' : 82.02463 , 'yoyPercentageFormatted' : '82.02%' }, { 'basicNetEps' : 6.38 , 'yoyPercentage' : 59.215681 , 'yoyPercentageFormatted' : '59.22%' }, { 'basicNetEps' : 5.72 , 'yoyPercentage' : - 10.344828 , 'yoyPercentageFormatted' : '-10.34%' }, { 'basicNetEps' : 6.49 , 'yoyPercentage' : 13.461538 , 'yoyPercentageFormatted' : '13.46%' }, { 'basicNetEps' : 9.28 , 'yoyPercentage' : 42.989214 , 'yoyPercentageFormatted' : '42.99%' }, { 'basicNetEps' : 8.35 , 'yoyPercentage' : - 10.021552 , 'yoyPercentageFormatted' : '-10.02%' }, { 'basicNetEps' : 9.27 , 'yoyPercentage' : 11.017964 , 'yoyPercentageFormatted' : '11.02%' }, { 'basicNetEps' : 12.01 , 'yoyPercentage' : 29.557713 , 'yoyPercentageFormatted' : '29.56%' }, { 'basicNetEps' : 11.97 , 'yoyPercentage' : - 0.333056 , 'yoyPercentageFormatted' : '-0.33%' }], 'type' : 'annualEps' }, { 'timestamp' : [ 20101231 , 20111231 , 20121231 , 20131231 , 20141231 , 20151231 , 20161231 , 20171231 , 20181231 , 20191231 ], 'annualSharesOutstanding' : [{ 'sharesOutstanding' : 6411790350 }, { 'sharesOutstanding' : 6504939000 }, { 'sharesOutstanding' : 6574456000 }, { 'sharesOutstanding' : 6294491000 }, { 'sharesOutstanding' : 5866161000 }, { 'sharesOutstanding' : 5578753000 }, { 'sharesOutstanding' : 5336166000 }, { 'sharesOutstanding' : 5126201000 }, { 'sharesOutstanding' : 4754986000 }, { 'sharesOutstanding' : 4443236000 }], 'type' : 'annualSharesOutstanding' }, { 'timestamp' : [ 20200930 , 20210930 , 20220930 , 20230930 , 20240930 , 20250930 ], 'futureFairValue' : [{ 'fairValue' : 146.5 }, { 'fairValue' : 162.64 }, { 'fairValue' : 180.56 }, { 'fairValue' : 200.46 }, { 'fairValue' : 222.55 }, { 'fairValue' : 247.08 }], 'type' : 'futureFairValue' }, { 'timestamp' : [ 20101231 , 20111231 , 20121231 , 20131231 , 20141231 , 20151231 , 20161231 , 20171231 , 20181231 , 20191231 ], 'annualLogEps' : [{ 'logEarningsPerShare' : 0.0 }, { 'logEarningsPerShare' : 0.598972 }, { 'logEarningsPerShare' : 1.064061 }, { 'logEarningsPerShare' : 0.954862 }, { 'logEarningsPerShare' : 1.081156 }, { 'logEarningsPerShare' : 1.438755 }, { 'logEarningsPerShare' : 1.333155 }, { 'logEarningsPerShare' : 1.437677 }, { 'logEarningsPerShare' : 1.696633 }, { 'logEarningsPerShare' : 1.693297 }], 'type' : 'annualLogEps' }, { 'timestamp' : [ 20101231 , 20111231 , 20121231 , 20131231 , 20141231 , 20151231 , 20161231 , 20171231 , 20181231 , 20191231 ], 'annualPriceRange' : [{ 'priceHigh' : 42.104244 , 'priceLow' : 25.81426 }, { 'priceHigh' : 60.408511 , 'priceLow' : 39.681389 }, { 'priceHigh' : 100.724185 , 'priceLow' : 50.605664 }, { 'priceHigh' : 96.678475 , 'priceLow' : 55.014231 }, { 'priceHigh' : 103.74 , 'priceLow' : 67.772932 }, { 'priceHigh' : 134.54 , 'priceLow' : 92.0 }, { 'priceHigh' : 123.82 , 'priceLow' : 89.47 }, { 'priceHigh' : 164.94 , 'priceLow' : 104.08 }, { 'priceHigh' : 229.67 , 'priceLow' : 150.24 }, { 'priceHigh' : 233.47 , 'priceLow' : 142.0 }], 'type' : 'annualPriceRange' }, { 'timestamp' : [ 20140930 , 20141231 , 20150331 , 20150630 , 20150930 , 20151231 , 20160331 , 20160630 , 20160930 , 20161231 , 20170331 , 20170630 , 20170930 , 20171231 , 20180331 , 20180630 , 20180930 , 20181231 , 20190331 , 20190630 , 20190930 , 20191231 , 20200331 ], 'quarterlyEps' : [{ 'basicNetEps' : 1.43 }, { 'basicNetEps' : 3.08 }, { 'basicNetEps' : 2.34 }, { 'basicNetEps' : 1.86 }, { 'basicNetEps' : 1.97 }, { 'basicNetEps' : 3.3 }, { 'basicNetEps' : 1.91 }, { 'basicNetEps' : 1.43 }, { 'basicNetEps' : 1.68 }, { 'basicNetEps' : 3.38 }, { 'basicNetEps' : 2.11 }, { 'basicNetEps' : 1.68 }, { 'basicNetEps' : 2.08 }, { 'basicNetEps' : 3.92 }, { 'basicNetEps' : 2.75 }, { 'basicNetEps' : 2.36 }, { 'basicNetEps' : 2.94 }, { 'basicNetEps' : 4.22 }, { 'basicNetEps' : 2.47 }, { 'basicNetEps' : 2.2 }, { 'basicNetEps' : 3.05 }, { 'basicNetEps' : 5.04 }, { 'basicNetEps' : 2.58 }], 'type' : 'quarterlyEps' }, { 'timestamp' : [ 20131231 , 20141231 , 20151231 , 20161231 , 20171231 , 20181231 , 20191231 ], 'annualDebtToEquityRatio' : [{ 'debtToEquityRatio' : 0.137273 }, { 'debtToEquityRatio' : 0.316414 }, { 'debtToEquityRatio' : 0.538964 }, { 'debtToEquityRatio' : 0.678617 }, { 'debtToEquityRatio' : 0.862981 }, { 'debtToEquityRatio' : 1.068467 }, { 'debtToEquityRatio' : 1.194048 }], 'type' : 'annualDebtToEquityRatio' }, { 'timestamp' : [ 20101231 , 20111231 , 20121231 , 20131231 , 20141231 , 20151231 , 20161231 , 20171231 , 20181231 , 20191231 ], 'annualLogRevenue' : [{ 'logRevenue' : 0.926689 }, { 'logRevenue' : 1.433281 }, { 'logRevenue' : 1.801954 }, { 'logRevenue' : 1.889984 }, { 'logRevenue' : 1.957212 }, { 'logRevenue' : 2.202949 }, { 'logRevenue' : 2.122452 }, { 'logRevenue' : 2.18359 }, { 'logRevenue' : 2.330819 }, { 'logRevenue' : 2.310197 }], 'type' : 'annualLogRevenue' }, { 'timestamp' : [ 20101231 , 20111231 , 20121231 , 20131231 , 20141231 , 20151231 , 20161231 , 20171231 , 20181231 , 20191231 ], 'annualCash' : [{ 'cash' : 25620000000.0 , 'cashFormatted' : '25.62B' }, { 'cash' : 25952000000.0 , 'cashFormatted' : '25.95B' }, { 'cash' : 29129000000.0 , 'cashFormatted' : '29.13B' }, { 'cash' : 40546000000.0 , 'cashFormatted' : '40.55B' }, { 'cash' : 25077000000.0 , 'cashFormatted' : '25.08B' }, { 'cash' : 41601000000.0 , 'cashFormatted' : '41.60B' }, { 'cash' : 67155000000.0 , 'cashFormatted' : '67.16B' }, { 'cash' : 74181000000.0 , 'cashFormatted' : '74.18B' }, { 'cash' : 66301000000.0 , 'cashFormatted' : '66.30B' }, { 'cash' : 100557000000.0 , 'cashFormatted' : '100.56B' }], 'type' : 'annualCash' }, { 'timestamp' : [ 20101231 , 20111231 , 20121231 , 20131231 , 20141231 , 20151231 , 20161231 , 20171231 , 20181231 , 20191231 ], 'annualDps' : [{ 'dividendPerShare' : 0.0 }, { 'dividendPerShare' : 0.0 }, { 'dividendPerShare' : 0.378571 }, { 'dividendPerShare' : 1.628571 }, { 'dividendPerShare' : 1.811429 }, { 'dividendPerShare' : 1.98 }, { 'dividendPerShare' : 2.18 }, { 'dividendPerShare' : 2.4 }, { 'dividendPerShare' : 2.72 }, { 'dividendPerShare' : 3.0 }], 'type' : 'annualDps' }, { 'timestamp' : [ 20101231 , 20111231 , 20121231 , 20131231 , 20141231 , 20151231 , 20161231 , 20171231 , 20181231 , 20191231 ], 'annualFairValue' : [{ 'fairValue' : 24.268181 }, { 'fairValue' : 44.174066 }, { 'fairValue' : 70.33204 }, { 'fairValue' : 63.056312 }, { 'fairValue' : 71.544661 }, { 'fairValue' : 102.301149 }, { 'fairValue' : 92.048987 }, { 'fairValue' : 102.190911 }, { 'fairValue' : 132.396207 }, { 'fairValue' : 131.955254 }], 'type' : 'annualFairValue' , 'futureTimestamp' : [ 2020 , 2021 , 2022 , 2023 , 2024 ], 'futureAnnualFairValue' : [{ 'fairValue' : 146.5 }, { 'fairValue' : 162.64 }, { 'fairValue' : 180.56 }, { 'fairValue' : 200.46 }, { 'fairValue' : 222.55 }] }, { 'timestamp' : [ 20140930 , 20141231 , 20150331 , 20150630 , 20150930 , 20151231 , 20160331 , 20160630 , 20160930 , 20161231 , 20170331 , 20170630 , 20170930 , 20171231 , 20180331 , 20180630 , 20180930 , 20181231 , 20190331 , 20190630 , 20190930 , 20191231 , 20200331 ], 'quarterlyAdjustedRevenue' : [{ 'adjustedRevenue' : 2.618226 }, { 'adjustedRevenue' : 4.636826 }, { 'adjustedRevenue' : 3.881656 }, { 'adjustedRevenue' : 3.319248 }, { 'adjustedRevenue' : 3.446116 }, { 'adjustedRevenue' : 5.076867 }, { 'adjustedRevenue' : 3.885146 }, { 'adjustedRevenue' : 3.255078 }, { 'adjustedRevenue' : 3.600428 }, { 'adjustedRevenue' : 6.021027 }, { 'adjustedRevenue' : 4.06489 }, { 'adjustedRevenue' : 3.489461 }, { 'adjustedRevenue' : 4.04053 }, { 'adjustedRevenue' : 6.785038 }, { 'adjustedRevenue' : 4.698185 }, { 'adjustedRevenue' : 4.093247 }, { 'adjustedRevenue' : 4.833666 }, { 'adjustedRevenue' : 6.478957 }, { 'adjustedRevenue' : 4.458269 }, { 'adjustedRevenue' : 4.135052 }, { 'adjustedRevenue' : 4.921272 }, { 'adjustedRevenue' : 7.056 }, { 'adjustedRevenue' : 4.48117 }], 'type' : 'quarterlyAdjustedRevenue' }, { 'timestamp' : [ 20101231 , 20111231 , 20121231 , 20131231 , 20141231 , 20151231 , 20161231 , 20171231 , 20181231 , 20191231 ], 'annualRevenue' : [{ 'revenue' : 65225000000.0 , 'formatted' : '65.22B' , 'yoyPercentage' : 52.021909 , 'yoyPercentageFormatted' : '52.02%' }, { 'revenue' : 108249000000.0 , 'formatted' : '108.25B' , 'yoyPercentage' : 65.962438 , 'yoyPercentageFormatted' : '65.96%' }, { 'revenue' : 156508000000.0 , 'formatted' : '156.51B' , 'yoyPercentage' : 44.581474 , 'yoyPercentageFormatted' : '44.58%' }, { 'revenue' : 170910000000.0 , 'formatted' : '170.91B' , 'yoyPercentage' : 9.202086 , 'yoyPercentageFormatted' : '9.20%' }, { 'revenue' : 182795000000.0 , 'formatted' : '182.79B' , 'yoyPercentage' : 6.953952 , 'yoyPercentageFormatted' : '6.95%' }, { 'revenue' : 233715000000.0 , 'formatted' : '233.72B' , 'yoyPercentage' : 27.856342 , 'yoyPercentageFormatted' : '27.86%' }, { 'revenue' : 215639000000.0 , 'formatted' : '215.64B' , 'yoyPercentage' : - 7.734206 , 'yoyPercentageFormatted' : '-7.73%' }, { 'revenue' : 229234000000.0 , 'formatted' : '229.23B' , 'yoyPercentage' : 6.304518 , 'yoyPercentageFormatted' : '6.30%' }, { 'revenue' : 265595000000.0 , 'formatted' : '265.60B' , 'yoyPercentage' : 15.861958 , 'yoyPercentageFormatted' : '15.86%' }, { 'revenue' : 260174000000.0 , 'formatted' : '260.17B' , 'yoyPercentage' : - 2.041078 , 'yoyPercentageFormatted' : '-2.04%' }], 'type' : 'annualRevenue' }] } }","title":"p_value_analyzer_drilldown"}]}